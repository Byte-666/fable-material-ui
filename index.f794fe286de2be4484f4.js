!function(e){function t(t){for(var r,s,i=t[0],l=t[1],p=t[2],u=0,d=[];u<i.length;u++)s=i[u],a[s]&&d.push(a[s][0]),a[s]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(c&&c(t);d.length;)d.shift()();return o.push.apply(o,p||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,i=1;i<n.length;i++){var l=n[i];0!==a[l]&&(r=!1)}r&&(o.splice(t--,1),e=s(s.s=n[0]))}return e}var r={},a={0:0},o=[];function s(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=r,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="";var i=window.webpackJsonp=window.webpackJsonp||[],l=i.push.bind(i);i.push=t,i=i.slice();for(var p=0;p<i.length;p++)t(i[p]);var c=l;o.push([526,1]),n()}(Array(205).concat([function(e,t){e.exports='# Installation\r\n<p class="description">Install Fable bindings for Material-UI</p>\r\n\r\n## Nuget\r\nFable Material-UI is available as [Nuget package](https://www.nuget.org/packages/Fable.MaterialUI/)\r\n```sh\r\ndotnet add package Fable.MaterialUI\r\n```\r\nor\r\n```sh\r\npaket add Fable.MaterialUI\r\n```\r\n\r\n## NPM\r\nYou also need to install [Material-UI](https://material-ui.com/getting-started/installation/) npm package\r\n```sh\r\nnpm install @material-ui/core\r\n```\r\nor\r\n```sh\r\nyarn add @material-ui/core\r\n```'},,function(e,t){e.exports="# Migration to version 2\r\n\r\n## Required dependency\r\nFable.MaterialUI v2 works only with **dotnet-fable** > [2.0.6](https://www.nuget.org/packages/dotnet-fable/2.0.6)\r\n\r\nMake sure to use the correct version\r\n\r\n## Breaking changes\r\n\r\n`Styles.Custom` is now a function and has the signature: `string * CSSProp list -> Styles`. You don't need to manually convert the list of CSS props to an object\r\n\r\nPredefined `Styles` props matching class keys are moved to a nested module `Themes.Styles` and require either `open Fable.MaterialUI.Themes.Styles` or qualified access, e.g. `Styles.Root`\r\n\r\n`TransitionDuration` is removed from:\r\n* MenuProp\r\n* PopoverProp\r\n* StepContentProp\r\n\r\nand moved to `MaterialProp.TransitionDurationAuto` (compiled to `transitionDuration` but allows to pass `AutoEnum.Auto`)\r\n\r\n## Other\r\nSince `keyValueList` function is not recursive in Fable 2, there are several properties which have now been replaced with functions, converting a list of DU cases to an object. The usage of those props stays the same, except `Styles` (see above)."},function(e,t){e.exports='# Usage\r\n<p class="description">How to use the bindings</p>\r\n\r\nSimply open Fable.Helpers.MaterialUI and Props module\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\n```\r\nThere are several components, such as `button`, which are also present in `Fable.Helpers.React`. To avoid conflicts you can assign module names:\r\n```fsharp\r\nmodule R = Fable.Helpers.React\r\nmodule Mui = Fable.Helpers.MaterialUI\r\n```\r\n\r\n## Minimal example\r\n```fsharp\r\nmodule R = Fable.Helpers.React\r\nmodule Mui = Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\n\r\nlet view =\r\n    Mui.button [\r\n        ButtonProp.Variant ButtonVariant.Contained\r\n    ] [ R.str "Hello world!" ]\r\n```'},function(e,t){e.exports='# App Bar\r\n<p class="description">The App Bar displays information and actions relating to the current screen.</p>\r\n\r\nThe top App Bar provides content and actions related to the current screen. It’s used for branding, screen titles, navigation, and actions.\r\n\r\nIt can transform into a contextual action bar or used as a navbar.'},function(e,t){e.exports='# Buttons\r\n\r\n<p class="description">Buttons allow users to take actions, and make choices, with a single tap.</p>\r\n\r\n[Buttons](https://material.io/design/components/buttons.html) communicate actions that users can take. They are typically placed throughout your UI, in places like:\r\n- Dialogs\r\n- Modal windows\r\n- Forms\r\n- Cards\r\n- Toolbars'},function(e,t){e.exports='# Text Fields\r\n\r\n<p class="description">Text fields let users enter and edit text.</p>\r\n\r\n[Text fields](https://material.io/design/components/text-fields.html) allow users to enter text into a UI. They typically appear in forms and dialogs.\r\n'},function(e,t){e.exports='# Overrides\r\n\r\n<p class="description">As components can be used in different contexts, Material-UI supports different types of customization requirements going from the most specific to the most generic.</p>\r\n\r\n## 1. Specific variation for a one-time situation\r\n\r\nYou might need to change the style of a component in some very specific situation, for which you have the following solutions available:'},function(e,t){e.exports='# Themes\r\n\r\n<p class="description">Customize Material-UI with your theme. You can change the colors, the typography and much more.</p>\r\n\r\nThe theme specifies the color of the components, darkness of the surfaces, level of shadow, appropriate opacity of ink elements, etc.\r\n\r\nThemes let you apply a consistent tone to your app. It allows you to **customize all design aspects** of your project in order to meet the specific needs of your business or brand.\r\n\r\nTo promote greater consistency between apps, light and dark theme types are available to choose from. By default, components use the light theme type.\r\n\r\n## Theme provider\r\n\r\nIf you wish to customize the theme, you need to use the `MuiThemeProvider` component in order to inject a theme into your application.\r\nHowever, this is optional; Material-UI components come with a default theme.\r\n\r\n`MuiThemeProvider` relies on the context feature of React to pass the theme down to the components,\r\nso you need to make sure that `MuiThemeProvider` is a parent of the components you are trying to customize.\r\nYou can learn more about this in the API section.\r\n\r\n## Theme configuration variables\r\n\r\nChanging the theme configuration variables is the most effective way to match Material-UI to your needs.\r\nThe following sections cover the most important theme variables.\r\n\r\n### Palette\r\n\r\n#### Intentions\r\n\r\nA color intention is a mapping of a palette to a given intention within your application.\r\n\r\nThe theme exposes the following color intentions:\r\n\r\n- primary - used to represent primary interface elements for a user.\r\n- secondary - used to represent secondary interface elements for a user.\r\n- error - used to represent interface elements that the user should be made aware of.\r\n\r\nThe default palette uses the shades prefixed with `A` (`A200`, etc.) for the secondary intention,\r\nand the un-prefixed shades for the other intentions.\r\n\r\nIf you want to learn more about color, you can check out [the color section](#/style/color/).\r\n\r\n#### Custom palette\r\n\r\nYou may override the default palette values by including a `palette` object as part of your theme.\r\n\r\nIf any of the [`palette.primary`](https://material-ui.com/customization/default-theme/?expend-path=$.palette.primary),\r\n[`palette.secondary`](https://material-ui.com/customization/default-theme/?expend-path=$.palette.secondary) or\r\n[`palette.error`](https://material-ui.com/customization/default-theme/?expend-path=$.palette.error)\r\n\'intention\' objects are provided, they will replace the defaults.\r\n\r\nThe intention value is list of props from the following discriminated union:\r\n\r\n```fsharp\r\ntype PaletteIntentionProp =\r\n    | Light of string\r\n    | Main of string\r\n    | Dark of string\r\n    | ContrastText of string\r\n```\r\n\r\n**Using a color object**\r\n\r\nThe simplest way to customize an intention is to import one or more of the provided colors\r\nand apply them to a palette intention. Unlike in JS version of Material-UI, you can only define a specific\r\n`PaletteIntentionProp`, however if you define just `Main`, other colors will be calculated automaticaly.\r\n\r\nThese code samples are identical:\r\n\r\n```js\r\nimport { createMuiTheme } from \'@material-ui/core/styles\';\r\nimport blue from \'@material-ui/core/colors/blue\';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n  },\r\n});\r\n```\r\n\r\n```fsharp\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [\r\n                        PaletteIntentionProp.Main Colors.blue.``500``\r\n                    ]\r\n                ]\r\n            ]\r\n```\r\n\r\n**Providing the colors directly**\r\n\r\nIf you wish to provide more customized colors, you can directly supply colors to some or all of the intention\'s keys:\r\n\r\n```fsharp\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [\r\n                        // PaletteIntentionProp.Light will be calculated from Main\r\n                        PaletteIntentionProp.Main "#ff4400"\r\n                        // PaletteIntentionProp.Dark will be calculated from Main\r\n                        // PaletteIntentionProp.ContrastText will be calculated to contrast with Main\r\n                    ]\r\n                    PaletteProp.Secondary [\r\n                        PaletteIntentionProp.Light "#0066ff"\r\n                        PaletteIntentionProp.Main "#0044ff"\r\n                        // PaletteIntentionProp.Dark will be calculated from Main\r\n                        PaletteIntentionProp.ContrastText "#ffcc00"\r\n                    ]\r\n                    // PaletteProp.Error will use the default color\r\n                ]\r\n            ]\r\n```\r\n\r\nAs in the example above, if the intention object contains custom colors using any of the\r\n`Main`, `Light`, `Dark` or `ContrastText` keys, these map as follows:\r\n\r\n- If the `Dark` and / or `Light` keys are omitted, their value(s) will be calculated from `Main`,\r\naccording to the `TonalOffset` value.\r\n\r\n- If `ContrastText` is omitted, its value will be calculated to contrast with `Main`,\r\naccording to the`ContrastThreshold` value.\r\n\r\nBoth the `TonalOffset` and `ContrastThreshold` values may be customized as needed.\r\nA higher value for `TonalOffset` will make calculated values for `Light` lighter, and `Dark` darker.\r\nA higher value for `ContrastThreshold` increases the point at which a background color is considered\r\nlight, and given a dark `ContrastText`.\r\n\r\nNote that `ContrastThreshold` follows a non-linear curve.'},function(e,t){e.exports='# CSS in JS (F#)\r\n\r\n<p class="description">You can leverage our styling solution, even if you are not using our components.</p>\r\n\r\nMaterial-UI aims to provide strong foundations for building dynamic UIs.\r\nFor the sake of simplicity, **Material-UI exposes its styling solution to users**.\r\nYou can use it, but you don\'t have to. This styling solution is interoperable with all the other major solutions.'},function(e,t){e.exports="# Default Theme\n\nYou can find the default theme in [Material-UI documentation](https://material-ui.com/customization/default-theme/)\n\nFable.MaterialUI exposes theme with the following types:\n\n```fsharp\ntype IPaletteIntention =\n    abstract light: string with get,set\n    abstract main: string with get,set\n    abstract dark: string with get,set\n    abstract contrastText: string with get,set\n\ntype [<StringEnum; RequireQualifiedAccess>] PaletteType = Dark | Light\n\ntype IPaletteCommon =\n    abstract black: string with get,set\n    abstract white: string with get,set\n\ntype IPaletteAction =\n    abstract active: string with get,set\n    abstract hover: string with get,set\n    abstract hoverOpacity: float with get,set\n    abstract selected: string with get,set\n    abstract disabled: string with get,set\n    abstract disabledBackground: string with get,set\n\ntype IPaletteBackground =\n    abstract paper: string with get,set\n    abstract ``default``: string with get,set\n\ntype IPaletteText =\n    abstract primary: string with get,set\n    abstract secondary: string with get,set\n    abstract disabled: string with get,set\n    abstract hint: string with get,set\n\ntype IColor =\n    abstract ``50``: string with get,set\n    abstract ``100``: string with get,set\n    abstract ``200``: string with get,set\n    abstract ``300``: string with get,set\n    abstract ``400``: string with get,set\n    abstract ``500``: string with get,set\n    abstract ``600``: string with get,set\n    abstract ``700``: string with get,set\n    abstract ``800``: string with get,set\n    abstract ``900``: string with get,set\n    abstract A100: string with get,set\n    abstract A200: string with get,set\n    abstract A400: string with get,set\n    abstract A700: string with get,set\n\ntype IPalette =\n    abstract common: IPaletteCommon with get,set\n    abstract ``type``: PaletteType with get,set\n    abstract primary: IPaletteIntention with get,set\n    abstract secondary: IPaletteIntention with get,set\n    abstract error: IPaletteIntention with get,set\n    abstract grey: IColor with get,set\n    abstract contrastThreshold: int with get,set\n    abstract getContrastText: background: string -> string\n    abstract augmentColor: color: IPaletteIntention * mainShade : U2<int, string> * lightShade : U2<int, string> * darkShade : U2<int, string> -> unit\n    abstract tonalOffset: float with get,set\n    abstract text: IPaletteText with get,set\n    abstract divider: string with get,set\n    abstract background: IPaletteBackground with get,set\n    abstract action: IPaletteAction with get,set\n\ntype [<StringEnum; RequireQualifiedAccess>] TextDirection = Ltr | Rtl\n\ntype IShape =\n    abstract borderRadius: int with get,set\n\ntype ISpacing =\n    abstract ``unit``: int with get,set\n\ntype IZIndex =\n    abstract mobileStepper: int with get,set\n    abstract appBar: int with get,set\n    abstract drawer: int with get,set\n    abstract modal: int with get,set\n    abstract snackbar: int with get,set\n    abstract tooltip: int with get,set\n\ntype ITypography =\n    abstract fontSize: string with get,set\n    abstract fontWeight: int with get,set\n    abstract fontFamily: string with get,set\n    abstract letterSpacing: string with get,set\n    abstract lineHeight: string with get,set\n    abstract marginLeft: string with get,set\n    abstract color: string with get,set\n    abstract textTransform: string with get,set\n\ntype IThemeTypography =\n    abstract round: px: float -> float\n    abstract pxToRem: px: float -> string\n    abstract fontFamily: string with get,set\n    abstract fontSize: string with get,set\n    abstract fontWeightLight: int with get,set\n    abstract fontWeightRegular: int with get,set\n    abstract fontWeightMedium: int with get,set\n    abstract display4: ITypography with get,set\n    abstract dispaly3: ITypography with get,set\n    abstract display2: ITypography with get,set\n    abstract display1: ITypography with get,set\n    abstract headline: ITypography with get,set\n    abstract title: ITypography with get,set\n    abstract subheading: ITypography with get,set\n    abstract body2: ITypography with get,set\n    abstract body1: ITypography with get,set\n    abstract caption: ITypography with get,set\n    abstract button: ITypography with get,set\n\ntype IBreakpointValues =\n    abstract xs: int with get,set\n    abstract sm: int with get,set\n    abstract md: int with get,set\n    abstract lg: int with get,set\n    abstract xl: int with get,set\n\ntype IBreakpoints =\n    abstract keys: Props.MaterialSize list with get,set\n    abstract values: IBreakpointValues with get,set\n    abstract up: key: U2<Props.MaterialSize, int> -> string\n    abstract down: key: U2<Props.MaterialSize, int> -> string\n    abstract only: key: Props.MaterialSize -> string\n    abstract between: start: Props.MaterialSize * ``end``: Props.MaterialSize -> string\n    abstract width: key: Props.MaterialSize -> int\n\ntype IMixins =\n    abstract gutters: ?styles : CSSProperties -> CSSProperties\n    abstract toolbar: CSSProperties with get,set\n\ntype IEasing =\n    abstract easeInOut: string with get,set\n    abstract easeOut: string with get,set\n    abstract easeIn: string with get,set\n    abstract sharp: string with get,set\n\ntype IDuration =\n    abstract shortest: float with get,set\n    abstract shorter: float with get,set\n    abstract short: float with get,set\n    abstract standard: float with get,set\n    abstract complex: float with get,set\n    abstract enteringScreen: float with get,set\n    abstract leavingScreen: float with get,set\n\ntype ITransitionOptions =\n    abstract duration: U2<float, string> with get,set\n    abstract easing: string with get,set\n    abstract delay: U2<float, string> with get,set\n\ntype ITransitions =\n    abstract easing: IEasing with get,set\n    abstract duration: IDuration with get,set\n    abstract create: props : U2<string, string list> * ?options: ITransitionOptions -> string\n    abstract getAutoHeightDuration: height : int -> int\n\ntype ITheme =\n    abstract breakpoints: IBreakpoints with get,set\n    abstract direction: TextDirection with get,set\n    abstract overrides: obj with get,set\n    abstract palette: IPalette with get,set\n    abstract props: obj with get,set\n    abstract shadows: string list with get,set\n    abstract typography: IThemeTypography with get,set\n    abstract shape: IShape with get,set\n    abstract spacing: ISpacing with get,set\n    abstract zIndex: IZIndex with get,set\n    abstract mixins: IMixins with get,set\n    abstract transitions: ITransitions with get,set\n```\n\nYou can the definions on [GitHub](https://github.com/mvsmal/fable-material-ui/blob/master/src/Fable.Helpers.MaterialUI.Props.fs#L1711-L1962)"},function(e,t){e.exports="## Support fable-material-ui\r\nFable.MaterialUI is a MIT licensed open source project. We are intent on code quality and project maintain. Entirely thanks to our awesome backers.\r\n\r\n### Support via [patreon](https://www.patreon.com/mvsmal)\r\n"},function(e,t,n){e.exports=n.p+"assets/fable-material-ui-logo.0a1b36e07c363a6e1964cec31b5fa081.svg"},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){var r={"./App.fs":429,"./Components/Demo.fs":430,"./Components/Markdown.fs":431,"./Customization/CssInJs.fs":432,"./Customization/CssInJs/CssInJs.fs":433,"./Customization/CssInJs/RenderProps.fs":434,"./Customization/CssInJs/StyledComponents.fs":435,"./Customization/DefaultTheme.fs":436,"./Customization/Overrides.fs":437,"./Customization/Overrides/ClassNames.fs":438,"./Customization/Overrides/ClassNesting.fs":439,"./Customization/Overrides/InlineStyle.fs":440,"./Customization/Overrides/InternalState.fs":441,"./Customization/Overrides/ShortlandClasses.fs":442,"./Customization/Themes.fs":443,"./Customization/Themes/CustomStyles.fs":444,"./Customization/Themes/DarkTheme.fs":445,"./Customization/Themes/FontSizeTheme.fs":446,"./Customization/Themes/Nested.fs":447,"./Customization/Themes/OverrideCss.fs":448,"./Customization/Themes/OverrideProperties.fs":449,"./Customization/Themes/Palette.fs":450,"./Customization/Themes/TypographyTheme.fs":451,"./Customization/Themes/WithTheme.fs":452,"./Demos/AppBar.fs":453,"./Demos/AppBar/AppBarWithButtons.fs":454,"./Demos/AppBar/SimpleAppBar.fs":455,"./Demos/Avatars.fs":456,"./Demos/Buttons.fs":457,"./Demos/Buttons/ButtonSizes.fs":458,"./Demos/Buttons/ComplexButtons.fs":459,"./Demos/Buttons/ContainedButtons.fs":460,"./Demos/Buttons/CustomizedButtons.fs":461,"./Demos/Buttons/FloatingActionButtonZoom.fs":462,"./Demos/Buttons/FloatingActionButtons.fs":463,"./Demos/Buttons/IconButtons.fs":464,"./Demos/Buttons/IconLabelButtons.fs":465,"./Demos/Buttons/OutlinedButtons.fs":466,"./Demos/Buttons/TextButtons.fs":467,"./Demos/TextFields.fs":468,"./Demos/TextFields/Composed.fs":469,"./Demos/TextFields/Customized.fs":470,"./Demos/TextFields/Filled.fs":471,"./Demos/TextFields/FilledInputAdornments.fs":472,"./Demos/TextFields/Input.fs":473,"./Demos/TextFields/InputAdornments.fs":474,"./Demos/TextFields/Layout.fs":475,"./Demos/TextFields/Outlined.fs":476,"./Demos/TextFields/OutlinedInputAdornments.fs":477,"./Demos/TextFields/TextField.fs":478,"./Demos/TextFields/WithIcon.fs":479,"./GettingStarted/Installation.fs":480,"./GettingStarted/MigrationToV2.fs":481,"./GettingStarted/Usage.fs":482,"./Global.fs":483,"./Home/Home.fs":484,"./Import/Marked.fs":485,"./Import/Prism.fs":486,"./Layout/AppBar.fs":487,"./Layout/Drawer.fs":488,"./Layout/Layout.fs":489,"./Layout/Menu.fs":490,"./Layout/Navigation.fs":491,"./Layout/NavigationItem.fs":492,"./PageLayoutDemos/SignIn.fs":493,"./State.fs":494,"./Types.fs":495,"./Utils.fs":496,"./bin/Release/netstandard2.0/Demos/AppBar.fs":497,"./bin/Release/netstandard2.0/Demos/AppBar/AppBarWithButtons.fs":498,"./bin/Release/netstandard2.0/Demos/AppBar/SimpleAppBar.fs":499,"./bin/Release/netstandard2.0/Demos/Avatars.fs":500,"./bin/Release/netstandard2.0/Demos/Buttons.fs":501,"./bin/Release/netstandard2.0/Demos/Buttons/ButtonSizes.fs":502,"./bin/Release/netstandard2.0/Demos/Buttons/ComplexButtons.fs":503,"./bin/Release/netstandard2.0/Demos/Buttons/ContainedButtons.fs":504,"./bin/Release/netstandard2.0/Demos/Buttons/CustomizedButtons.fs":505,"./bin/Release/netstandard2.0/Demos/Buttons/FloatingActionButtonZoom.fs":506,"./bin/Release/netstandard2.0/Demos/Buttons/FloatingActionButtons.fs":507,"./bin/Release/netstandard2.0/Demos/Buttons/IconButtons.fs":508,"./bin/Release/netstandard2.0/Demos/Buttons/IconLabelButtons.fs":509,"./bin/Release/netstandard2.0/Demos/Buttons/OutlinedButtons.fs":510,"./bin/Release/netstandard2.0/Demos/Buttons/TextButtons.fs":511,"./bin/Release/netstandard2.0/Demos/TextFields.fs":512,"./bin/Release/netstandard2.0/Demos/TextFields/Composed.fs":513,"./bin/Release/netstandard2.0/Demos/TextFields/Customized.fs":514,"./bin/Release/netstandard2.0/Demos/TextFields/Filled.fs":515,"./bin/Release/netstandard2.0/Demos/TextFields/FilledInputAdornments.fs":516,"./bin/Release/netstandard2.0/Demos/TextFields/Input.fs":517,"./bin/Release/netstandard2.0/Demos/TextFields/InputAdornments.fs":518,"./bin/Release/netstandard2.0/Demos/TextFields/Layout.fs":519,"./bin/Release/netstandard2.0/Demos/TextFields/Outlined.fs":520,"./bin/Release/netstandard2.0/Demos/TextFields/OutlinedInputAdornments.fs":521,"./bin/Release/netstandard2.0/Demos/TextFields/TextField.fs":522,"./bin/Release/netstandard2.0/Demos/TextFields/WithIcon.fs":523,"./obj/Debug/netstandard2.0/Fable.MaterialUI.Docs.AssemblyInfo.fs":524,"./obj/Release/netstandard2.0/Fable.MaterialUI.Docs.AssemblyInfo.fs":525};function a(e){var t=o(e);return n(t)}function o(e){var t=r[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=428},function(e,t){e.exports='module App.View\r\n\r\nopen Elmish\r\nopen Elmish.Browser.Navigation\r\nopen Elmish.Browser.UrlParser\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import.React\r\n\r\nopen App.State\r\nopen Types\r\n\r\nimportAll "../sass/main.sass"\r\n\r\nlet root (model: Model) dispatch : ReactElement =\r\n    Layout.Layout.view model dispatch\r\n\r\nopen Elmish.React\r\nopen Elmish.Debug\r\nopen Elmish.HMR\r\n\r\n// App\r\nProgram.mkProgram init update root\r\n|> Program.toNavigable (parseHash pageParser) urlUpdate\r\n#if DEBUG\r\n|> Program.withDebugger\r\n|> Program.withHMR\r\n#endif\r\n|> Program.withReact "app"\r\n|> Program.run\r\n'},function(e,t){e.exports='module Components.Demo\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Import.React\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nopen Utils\r\nopen Components\r\n\r\n[<Emit("require.context(\'!!raw-loader!\' + $0, true, /\\\\.fs$/);")>]\r\nlet inline requireContext (dir: string) = jsNative\r\n\r\nlet demosContext: obj = requireContext "../"\r\n\r\nlet demoStyles (theme : ITheme) : IStyles list =\r\n    let smBreakpoint = theme.breakpoints.up(MaterialSize.Sm |> U2.Case1)\r\n    let demoStyle = \r\n            theme.mixins.gutters(\r\n                !!([\r\n                        CSSProp.BorderRadius theme.shape.borderRadius\r\n                        CSSProp.BackgroundColor theme.palette.grey.``200``\r\n                        CSSProp.Display "flex"\r\n                        CSSProp.JustifyContent "center"\r\n                        CSSProp.PaddingTop (theme.spacing.unit * 2)\r\n                        CSSProp.PaddingBottom (theme.spacing.unit * 2)\r\n                        customCss smBreakpoint [\r\n                            CSSProp.PaddingLeft (theme.spacing.unit * 3)\r\n                            CSSProp.PaddingRight (theme.spacing.unit * 3)\r\n                            CSSProp.PaddingTop (theme.spacing.unit * 6)\r\n                            CSSProp.PaddingBottom (theme.spacing.unit * 3)\r\n                        ]\r\n                    ] |> toObj))\r\n    [\r\n        Styles.Root [\r\n            CSSProp.Position "relative"\r\n            CSSProp.MarginBottom 40\r\n            CSSProp.MarginLeft (-theme.spacing.unit * 2)\r\n            CSSProp.MarginRight (-theme.spacing.unit * 2)\r\n            customCss smBreakpoint [\r\n                CSSProp.Padding (sprintf "0 %ipx" theme.spacing.unit)\r\n                CSSProp.MarginLeft 0\r\n                CSSProp.MarginRight 0\r\n            ]\r\n        ]\r\n        Styles.Custom\' ("demo", demoStyle)\r\n        Styles.Custom ("header", [\r\n            CSSProp.Display "none"\r\n            customCss smBreakpoint [\r\n                CSSProp.Display "flex"\r\n                CSSProp.Custom ("flip", false)\r\n                CSSProp.Position "absolute"\r\n                CSSProp.Top 0\r\n                CSSProp.Right theme.spacing.unit\r\n            ]\r\n        ])\r\n        Styles.Custom ("code", [\r\n            CSSProp.Display "none"\r\n            CSSProp.Padding 0\r\n            CSSProp.Margin 0\r\n            customCss smBreakpoint [\r\n                CSSProp.Display "block"\r\n            ]\r\n            customCss "& pre" [\r\n                CSSProp.Overflow "auto"\r\n                CSSProp.Margin "0px !important"\r\n                CSSProp.BorderRadius "0px !important"\r\n            ]\r\n        ])\r\n    ]\r\n\r\n\r\ntype DemoProps =\r\n    abstract member demoPath: string with get,set\r\n    abstract member title: string with get,set\r\n    abstract member demoElement: (unit->ReactElement) with get,set\r\n    inherit IClassesProps\r\n\r\n\r\ntype DemoClasses =\r\n    abstract member root : string\r\n    abstract member header : string\r\n    abstract member demo : string\r\n    abstract member code : string\r\n    // abstract member sourceButton : string\r\n    inherit IClasses\r\n\r\n\r\ntype DemoState = {\r\n    expanded: bool\r\n}\r\n\r\nlet wrapWithFsharp text =\r\n    text |> sprintf "\r\n```fsharp\r\n%s\r\n```\r\n    "\r\n\r\ntype DemoComponent(p) =\r\n    inherit PureComponent<DemoProps,DemoState>(p)\r\n    do\r\n        base.setInitState { expanded = false }\r\n\r\n    member this.ToggleSource _ =\r\n        this.setState (fun s _ -> { s with expanded = not s.expanded })\r\n\r\n    override this.render() =\r\n        let demo = !!(demosContext $ this.props.demoPath)\r\n        let classes : DemoClasses = !!this.props.classes\r\n        fragment [] [\r\n            Markdown.view this.props.title\r\n            div [ Class classes.root ] [\r\n                div [] [\r\n                    div [ Class classes.header ] [\r\n                        tooltip [\r\n                            Placement PlacementType.Top\r\n                            TooltipProp.Title\r\n                                (if this.state.expanded\r\n                                 then (str "Hide source" |> U2.Case1 |> U3.Case1)\r\n                                 else (str "Show source" |> U2.Case1 |> U3.Case1))\r\n                        ] [\r\n                            iconButton [\r\n                                HTMLAttr.Custom ("aria-label", "Source of demo")\r\n                                OnClick this.ToggleSource\r\n                            ] [ icon [] [ str "code" ]]\r\n                        ]\r\n                    ]\r\n                    collapse [\r\n                        In this.state.expanded\r\n                        TransitionProp.UnmountOnExit true\r\n                    ] [\r\n                        div [ Class classes.code ] [ Markdown.view (demo |> wrapWithFsharp) ]\r\n                    ]\r\n                ]\r\n                div [ Class classes.demo ] [ this.props.demoElement () ]\r\n            ]\r\n        ]\r\n\r\nlet demoComponent props =\r\n    ofType<DemoComponent,_,_> props []\r\n\r\nlet demoWithStyles = withStyles (StyleType.Func demoStyles) [] demoComponent\r\n\r\n/// Renders the `demoElement` with `title` rendered as Markdown \r\n/// and shows the code loaded from `demoPath` (relative to `src/`)\r\nlet view title demoPath demoElement =\r\n    let props = createEmpty<DemoProps>\r\n    props.demoPath <- demoPath\r\n    props.title <- title\r\n    props.demoElement <- demoElement\r\n\r\n    from demoWithStyles props []\r\n'},function(e,t){e.exports='module Components.Markdown\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nopen Import.Prism\r\nopen Import.Marked\r\nopen Utils\r\n\r\nmodule MProps = Fable.MaterialUI.Props\r\n\r\nlet markdownStyles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Custom ("markdown", [\r\n            FontFamily theme.typography.fontFamily\r\n            FontSize 16\r\n            CSSProp.Color theme.palette.text.primary\r\n\r\n            customCss "& .anchor-link" [\r\n                MarginTop -96\r\n                Position "absolute"\r\n            ]\r\n            customCss """& pre, & pre[class*="language-"]""" [\r\n                Margin "24px 0"\r\n                CSSProp.Padding "12px 18px"\r\n                BackgroundColor theme.palette.background.paper\r\n                BorderRadius theme.shape.borderRadius\r\n                Overflow "auto"\r\n                CSSProp.Custom ("WebkitOverflowScrolling", "touch")\r\n            ]\r\n            customCss "& code" [\r\n                Display "inline-block"\r\n                LineHeight 1.6\r\n                FontFamily """Consolas, "Liberation Mono", Menlo, Courier, monospace"""\r\n                CSSProp.Padding "3px 6px"\r\n                CSSProp.Color theme.palette.text.primary\r\n                BackgroundColor theme.palette.background.paper\r\n                FontSize 14\r\n            ]\r\n            customCss "& p code, & ul code, & pre code" [\r\n                FontSize 14\r\n                LineHeight 1.6\r\n            ]\r\n            customCss "& h1" [\r\n                FontFamily theme.typography.display2.fontFamily\r\n                FontSize theme.typography.display2.fontSize\r\n                FontWeight theme.typography.display2.fontWeight\r\n                LineHeight theme.typography.display2.lineHeight\r\n                LetterSpacing theme.typography.display2.letterSpacing\r\n                TextTransform theme.typography.display2.textTransform\r\n                CSSProp.Color theme.palette.text.secondary\r\n                CSSProp.Margin "32px 0 16px"\r\n            ]\r\n            customCss "& .description" [\r\n                FontFamily theme.typography.headline.fontFamily\r\n                FontSize theme.typography.headline.fontSize\r\n                FontWeight theme.typography.headline.fontWeight\r\n                LineHeight theme.typography.headline.lineHeight\r\n                LetterSpacing theme.typography.headline.letterSpacing\r\n                TextTransform theme.typography.headline.textTransform\r\n                CSSProp.Margin "0 0 40px"\r\n            ]\r\n            customCss "& h2" [\r\n                FontFamily theme.typography.display1.fontFamily\r\n                FontSize theme.typography.display1.fontSize\r\n                FontWeight theme.typography.display1.fontWeight\r\n                LineHeight theme.typography.display1.lineHeight\r\n                LetterSpacing theme.typography.display1.letterSpacing\r\n                TextTransform theme.typography.display1.textTransform\r\n                CSSProp.Color theme.palette.text.secondary\r\n                CSSProp.Margin "32px 0 24px"\r\n            ]\r\n            customCss "& h3" [\r\n                FontFamily theme.typography.headline.fontFamily\r\n                FontSize theme.typography.headline.fontSize\r\n                FontWeight theme.typography.headline.fontWeight\r\n                LineHeight theme.typography.headline.lineHeight\r\n                LetterSpacing theme.typography.headline.letterSpacing\r\n                TextTransform theme.typography.headline.textTransform\r\n                CSSProp.Color theme.palette.text.secondary\r\n                CSSProp.Margin "32px 0 24px"\r\n            ]\r\n            customCss "& h4" [\r\n                FontFamily theme.typography.title.fontFamily\r\n                FontSize theme.typography.title.fontSize\r\n                FontWeight theme.typography.title.fontWeight\r\n                LineHeight theme.typography.title.lineHeight\r\n                LetterSpacing theme.typography.title.letterSpacing\r\n                TextTransform theme.typography.title.textTransform\r\n                CSSProp.Color theme.palette.text.secondary\r\n                CSSProp.Margin "24px 0 16px"\r\n            ]\r\n            customCss "& p, & ul, & ol" [\r\n                LineHeight 1.6\r\n            ]\r\n            customCss "& h1, & h2, & h3, & h4" [\r\n                customCss "& code" [\r\n                    FontSize "inherit"\r\n                    LineHeight "inherit"\r\n                    WordBreak "break-word"\r\n                ]\r\n                customCss "& .anchor-link-style" [\r\n                    Opacity 0\r\n                    Display "none"\r\n                ]\r\n                customCss "&:hover .anchor-link-style" [\r\n                    Display "inline-block"\r\n                    Opacity 1\r\n                    CSSProp.Padding "0 8px"\r\n                    CSSProp.Color theme.palette.text.hint\r\n                    customCss "&:hover" [\r\n                        CSSProp.Color theme.palette.text.secondary\r\n                    ]\r\n                    customCss "& svg" [\r\n                        Width "0.55em"\r\n                        Height "0.55em"\r\n                        Fill "currentColor"\r\n                    ]\r\n                ]\r\n            ]\r\n            customCss "& strong" [\r\n                FontWeight theme.typography.fontWeightMedium\r\n            ]\r\n            customCss "& blockquote" [\r\n                BorderLeft ("5px solid " + theme.palette.text.hint)\r\n                BackgroundColor theme.palette.background.paper\r\n                CSSProp.Padding "4px 24px"\r\n                CSSProp.Margin "24px 0"\r\n            ]\r\n            customCss "& a, & a code" [\r\n                CSSProp.Color theme.palette.secondary.main\r\n                TextDecoration "none"\r\n                customCss "&:hover" [\r\n                    TextDecoration "underline"\r\n                ]\r\n            ]\r\n            customCss "& img" [\r\n                MaxWidth "100%"\r\n            ]\r\n        ])\r\n    ]\r\n\r\n\r\ntype MarkdownProps =\r\n    abstract member text : string with get,set\r\n    inherit IClassesProps\r\n\r\n[<Emit("new $0.Renderer()")>]\r\nlet newRenderer m : obj = jsNative\r\n\r\nlet heading (text : string) (level : int) =\r\n    if level >= 4\r\n    then (level, text, level) |||> sprintf "<h%i>%s</h%i>"\r\n    else\r\n        let escapedText =\r\n            text\r\n                .ToLower()\r\n                .Replace("=&gt;", "")\r\n                .Replace("&lt;", "")\r\n                .Replace("/&gt;", "")\r\n                .Replace("<code>", "")\r\n                .Replace("</code>", "")\r\n                .Replace(" ", "-")\r\n                .Replace("\\t", "-")\r\n                .Replace("\\n", "-")\r\n        sprintf """\r\n        <h%i>\r\n            <a class="anchor-link" id="%s"></a>%s\r\n            <a class="anchor-link-style" href="#%s">\r\n                <svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M46.9 13.9c-.5-.6-1.2-.94-2.07-.94h-6.67l1.86-8.98c.17-.85 0-1.7-.52-2.3-.48-.6-1.2-.94-2.07-.94-1.6 0-3.2 1.27-3.54 2.93l-.5 2.42c0 .07-.07.13-.07.2l-1.37 6.62H20.7l1.88-8.96c.16-.85 0-1.7-.53-2.3-.48-.6-1.2-.94-2.07-.94-1.65 0-3.2 1.27-3.56 2.93l-.52 2.58v.08l-1.37 6.64H7.3c-1.67 0-3.22 1.3-3.58 2.96-.16.86 0 1.7.52 2.3.48.6 1.2.93 2.07.93h6.97l-2 9.65H4c-1.67 0-3.22 1.27-3.56 2.94-.2.8 0 1.67.5 2.27.5.6 1.2.93 2.08.93H10l-1.84 9.05c-.2.84 0 1.67.52 2.3.5.6 1.25.92 2.08.92 1.66 0 3.2-1.3 3.55-2.94l1.94-9.33h11.22l-1.87 9.05c-.15.84.03 1.67.53 2.3.5.6 1.2.92 2.07.92 1.65 0 3.22-1.3 3.56-2.94l1.9-9.33h7c1.6 0 3.2-1.28 3.53-2.93.2-.87 0-1.7-.52-2.3-.48-.62-1.2-.96-2.05-.96h-6.7l2.02-9.65h6.93c1.67 0 3.22-1.27 3.56-2.92.2-.85 0-1.7-.5-2.3l-.04.03zM17.53 28.77l1.95-9.65H30.7l-1.97 9.66H17.5h.03z"/></svg>\r\n            </a></h%i>\r\n        """ level escapedText text escapedText level\r\n\r\nlet link (href : string) (title : string) (text : string) =\r\n    if href.StartsWith("http")\r\n    then sprintf """<a href="%s" target="_blank" title="%s">%s</a>""" href title text\r\n    else sprintf """<a href="%s" title="%s">%s</a>""" href title text\r\n\r\nlet renderer = newRenderer Marked.marked\r\n// renderer?heading <- heading\r\nrenderer?link <- link\r\n\r\nlet highlight code (lang : string) =\r\n    let language = function\r\n        | "fsharp" -> prism.languages?fsharp\r\n        | "js" | "jsx" -> prism.languages?javascript\r\n        | "css" -> prism.languages?css\r\n        | "shell" | "sh" -> prism.languages?shell\r\n        | _ -> prism.languages?fsharp\r\n    prism.highlight(code, language lang)\r\n\r\nlet markedOptions = createEmpty<MarkedOptions>\r\nmarkedOptions.gfm <- true\r\nmarkedOptions.tables <- true\r\nmarkedOptions.breaks <- false\r\nmarkedOptions.pedantic <- false\r\nmarkedOptions.sanitize <- false\r\nmarkedOptions.smartLists <- true\r\nmarkedOptions.smartypants <- false\r\nmarkedOptions.highlight <- highlight\r\nmarkedOptions.renderer <- renderer\r\n\r\nlet markdown (props : MarkdownProps) =\r\n    let markedText = Marked.marked(props.text, markedOptions)\r\n    div [\r\n        Class !!props.classes?markdown\r\n        DangerouslySetInnerHTML { __html = markedText }\r\n    ] []\r\n\r\nlet markdownWithStyles = withStyles (StyleType.Func markdownStyles) [ MProps.Flip (Some false) ] markdown\r\n\r\nlet view text =\r\n    let props = createEmpty<MarkdownProps>\r\n    props.text <- text\r\n    from markdownWithStyles props []\r\n'},function(e,t){e.exports='module Customization.CssInJs.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Components\r\n\r\nlet text = importDefault "./CssInJs.md"\r\n\r\nlet cssInJsText = """\r\n## Material-UI\'s styling solution\r\n\r\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the style of the\r\ncomponents, but these approaches have proven to be limited. Most recently, Material-UI has [moved toward](https://github.com/oliviertassinari/a-journey-toward-better-style)\r\na *CSS-in-JS* solution. It **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.).\r\nWe think that it\'s the future:\r\n- [A Unified Styling Language](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\r\n- [The future of component-based styling](https://medium.freecodecamp.org/css-in-javascript-the-future-of-component-based-styling-70b161a79a32)\r\n- [Convert SCSS (Sass) to CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\r\n\r\nSo, you may have noticed in the demos what *CSS-in-JS* looks like.\r\nWe use the higher-order component created by `withStyles`\r\nto inject an array of styles into the DOM as CSS, using JSS. Here\'s an example:\r\n"""\r\n\r\nlet jssText = """\r\n## JSS\r\n\r\nMaterial-UI\'s styling solution uses [JSS](https://github.com/cssinjs/jss) at its core.\r\nIt\'s a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JS to CSS compiler which works at runtime and server-side.\r\nIt is about 8 kB (minified and gzipped) and is extensible via a [plugins](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\r\n\r\nIf you end up using this styling solution in your codebase, you\'re going to need to *learn the API*.\r\nThe best place to start is by looking at the features that each [plugin](http://cssinjs.org/plugins/) provides. Material-UI uses few of them (see below)\r\nYou can always add new plugins if needed with the [`JssProvider`](https://github.com/cssinjs/react-jss#custom-setup) helper.\r\n\r\nIf you wish to build your own instance of `jss` **and** support *rtl* make sure you also include the [jss-rtl](https://github.com/alitaheri/jss-rtl) plugin.\r\nCheck the jss-rtl [readme](https://github.com/alitaheri/jss-rtl#simple-usage) to learn how.\r\n\r\n⚠️*There are no helpers of JssProvider in this library since it\'s not part of Material-UI. You would need to import it manually with* `Fable.Core.JsInterop` *helpers*\r\n"""\r\n\r\nlet classNamesText = """\r\n## Class names\r\n\r\nYou may have noticed that the class names generated by our styling solution are **non-deterministic**,\r\nso you can\'t rely on them to stay the same. The following CSS won\'t work:\r\n```css\r\n.MuiAppBar-root-12 {\r\n  opacity: 0.6\r\n}\r\n```\r\n\r\nInstead, you have to use the `classes` property of a component to override them.\r\nOn the other hand, thanks to the non-deterministic nature of our class names, we\r\ncan implement optimizations for development and production.\r\nThey are easy to debug in development and as short as possible in production:\r\n\r\n- development: `.MuiAppBar-root-12`\r\n- production: `.jss12`\r\n\r\nIf you don\'t like this default behavior, you can change it.\r\nJSS relies on the concept of [class name generator](http://cssinjs.org/js-api/#generate-your-own-class-names).\r\n"""\r\n\r\nlet pluginsText = """\r\n## Plugins\r\n\r\nJSS uses the concept of plugins to extend its core, allowing people to cherry-pick the features they need.\r\nYou pay the performance overhead for only what\'s you are using.\r\nGiven `withStyles` is Material-UI\'s internal styling solution, all the plugins aren\'t available by default. The following list is used:\r\n- [jss-global](http://cssinjs.org/jss-global/)\r\n- [jss-nested](http://cssinjs.org/jss-nested/)\r\n- [jss-camel-case](http://cssinjs.org/jss-camel-case/)\r\n- [jss-default-unit](http://cssinjs.org/jss-default-unit/)\r\n- [jss-vendor-prefixer](http://cssinjs.org/jss-vendor-prefixer/)\r\n- [jss-props-sort](http://cssinjs.org/jss-props-sort/)\r\n\r\nIt\'s a subset of [jss-preset-default](http://cssinjs.org/jss-preset-default/).\r\n"""\r\n\r\nlet withStylesApiText = """\r\n## API\r\n\r\n### `withStyles<\'P when \'P :> IClassesProps> (styles : StyleType) (options: StyleOption list) (fn : \'P -> ReactElement) : ComponentClass<\'P>`\r\n\r\nLink a style sheet with a component.\r\nIt does not modify the component passed to it; instead, it returns a new component with a `classes` property.\r\nThis `classes` object contains the name of the class names injected in the DOM.\r\n\r\nSome implementation details that might be interesting to being aware of:\r\n- It adds a `classes` property so you can override the injected class names from the outside.\r\n- It adds an `innerRef` property so you can get a reference to the wrapped component. The usage of `innerRef` is identical to `ref`.\r\n- It forwards *non React static* properties so this HOC is more "transparent".\r\n\r\n#### Arguments\r\n\r\n1. `styles : StyleType`: A function generating the styles or a list of styles options.\r\n  - `StyleType.Func of (ITheme->IStyles list)`: Use this version if you need to have access to the theme. It\'s provided as the argument\r\n  - `StyleType.Styles of IStyles list`: Use this option to pass a static list of styles\r\nIt will be linked to the component.\r\n2. `options : StyleOption list`: All options are optional, so you can pass an empty list\r\n  - `StyleOption.WithTheme of bool`: Defaults to `false`. Provide the `theme` object to the component as a property.\r\n  - `StyleOption.Name of string`: The name of the style sheet. Useful for debugging.\r\n    If the value isn\'t provided, it will try to fallback to the name of the component.\r\n  - `StyleOption.Flip of bool option`: When set to `Some false`, this sheet will opt-out the `rtl` transformation. When set to `Some true`, the styles are inversed. When set to `None`, it follows `theme.direction`.\r\n  - The other keys (`StyleOption.Custom of string*obj`) are forwarded to the options argument of [jss.createStyleSheet([styles], [options])](http://cssinjs.org/js-api/#create-style-sheet).\r\n3. `fn : \'P -> ReactElement`: A function which renders a ReactElement with an argument of type `\'P` (has to inherit IClassesProps)\r\n```fsharp\r\ntype IClasses = interface end\r\ntype IClassesProps =\r\n    abstract member classes: IClasses\r\n```\r\n\r\n#### Returns\r\n\r\n`ClassComponent<\'P>`: Should be used with `Fable.Helpers.React.from`\r\n\r\n#### Example\r\n```fsharp\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\n\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.BackgroundColor "red"\r\n    ]\r\n]\r\n\r\nlet myFun (props : IClassesProps) =\r\n    div [ HTMLAttr.Class !!props.classes?root ] []\r\n\r\nlet withStylesFun = withStyles<IClassesProps> (StyleType.Styles styles) [] myFun\r\n\r\nlet view () =\r\n    from withStylesFun createEmpty []\r\n```\r\n"""\r\n\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view cssInJsText "./Customization/CssInJs/CssInJs.fs" Example.view\r\n        Markdown.view jssText\r\n        Markdown.view pluginsText\r\n        Markdown.view withStylesApiText\r\n    ]\r\n\r\n'},function(e,t){e.exports='module Customization.CssInJs.Example\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import.React\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\n// 1. We define the styles\r\nlet styles (theme : ITheme) : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Color "inherit"\r\n        CSSProp.TextDecoration "inherit"\r\n        CSSProp.Custom ("&:hover", [\r\n            CSSProp.TextDecoration "underline"\r\n        ] |> keyValueList CaseRules.LowerFirst)\r\n    ]\r\n    Styles.Primary [\r\n        CSSProp.Color theme.palette.primary.main\r\n    ]\r\n]\r\n[<StringEnum; RequireQualifiedAccess>]\r\ntype MyLinkVariant = | Primary\r\n\r\ntype MyLinkProps =\r\n    abstract children : ReactElement list with get,set\r\n    abstract variant : MyLinkVariant with get,set\r\n    abstract className : string with get,set\r\n    abstract href : string with get,set\r\n    inherit IClassesProps\r\n\r\nlet myLink (props : MyLinkProps) =\r\n    a [\r\n        classList [!!props.classes?root, true\r\n                   !!props.classes?primary, props.variant = MyLinkVariant.Primary\r\n                   props.className, true]\r\n        Href props.href\r\n    ] props.children\r\n\r\nlet myLinkStyled = withStyles<MyLinkProps> (StyleType.Func styles) [] myLink\r\n\r\nlet view () =\r\n    let props1 = createEmpty<MyLinkProps>\r\n    props1.href <- "#/customization/css-in-js"\r\n\r\n    let props2 = createEmpty<MyLinkProps>\r\n    props2.href <- "#/customization/css-in-js"\r\n    props2.variant <- MyLinkVariant.Primary\r\n\r\n    typography [ TypographyProp.Variant TypographyVariant.Subtitle1 ] [\r\n        from myLinkStyled props1 [ str "MyLink" ]\r\n        str " - "\r\n        from myLinkStyled props2 [ str "primary" ]\r\n    ]'},function(e,t){e.exports="module Customization.CssInJs.RenderProps\r\n\r\nopen Fable.Helpers.React\r\n\r\nlet view () =\r\n    div [] []\r\n"},function(e,t){e.exports="module Customization.CssInJs.StyledComponents\r\n\r\nopen Fable.Helpers.React\r\n\r\nlet view () =\r\n    div [] []\r\n\r\n"},function(e,t){e.exports='module Customization.DefaultTheme.View\n\nopen Fable.Core.JsInterop\nopen Fable.Helpers.React\n\nopen Components\n\nlet text = importDefault "./DefaultTheme.md"\n\nlet view () =\n    div [] [\n        Markdown.view text\n    ]'},function(e,t){e.exports='module Customization.Overrides.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Components\r\n\r\nlet text = importDefault "./Overrides.md"\r\n\r\nlet classNamesText = """\r\n### Overriding with class names\r\n\r\nThe first way to override the style of a component is to use **class names**.\r\nEvery component provides a `className` property which is always applied to the root element.\r\n\r\nIn this example, we are using the [`withStyles()`](#/customization/css-in-js) higher-order\r\ncomponent to inject custom styles into the DOM, and to pass the class name to the `ClassNames` component via\r\nits `classes` prop. You can choose any other styling solution, or even plain CSS to create the styles, but be sure to\r\nconsider the [CSS injection order](https://material-ui.com/customization/css-in-js/#css-injection-order), as the CSS injected into the DOM\r\nby Material-UI to style a component has the highest specificity possible since the `<link>` is injected at the bottom\r\nof the `<head />` to ensure the components always render correctly.\r\n"""\r\n\r\nlet classNestingText = """\r\n### Overriding with classes\r\n\r\nWhen the `className` property isn\'t enough, and you need to access deeper elements, you can take advantage of the `classes` property to customize all the CSS injected by Material-UI for a given component.\r\nThe list of  classes for each\r\ncomponent is documented in the **Component API** section.\r\n\r\nThis example also uses `withStyles()` (see above), but here, `ClassesNesting` is using `Button`\'s `classes` prop to\r\nprovide an object that maps the **names of classes to override** (keys) to the **CSS class names to apply** (values).\r\nThe component\'s existing classes will continue to be injected, so it is only necessary to provide the specific styles\r\nyou wish to add or override.\r\n\r\nNotice that in addition to the button styling, the button label\'s capitalization has been changed:\r\n"""\r\n\r\nlet shortlandText = """\r\n#### Shorthand\r\n\r\nThe above code example can be condensed by using **the same CSS API** as the child component.\r\nIn this example, the `withStyles()` higher-order component is injecting a `classes` property that is used by the `Button` component.\r\n```fsharp\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Background "linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"\r\n        CSSProp.BorderRadius 3\r\n        CSSProp.Border 0\r\n        CSSProp.Color "white"\r\n        CSSProp.Height 48\r\n        CSSProp.Padding "0 30px"\r\n        CSSProp.BoxShadow "0 3px 5px 2px rgba(255, 105, 135, .3)"\r\n    ]\r\n    Styles.Label [\r\n        CSSProp.TextTransform "capitalize"\r\n    ]\r\n]\r\n\r\nlet styledButton = withStyles (StyleType.Styles styles) [] !!MaterialUI.Button\r\n```\r\n"""\r\n\r\nlet internalStateText = """\r\n#### Internal states\r\n\r\nAside from accessing nested elements, the `classes` property can be used to customize the internal states of Material-UI components.\r\nThe components internal states, like `:hover`, `:focus`, `disabled` and `selected`, are styled with a higher CSS specificity.\r\n[Specificity is a weight](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) that is applied to a given CSS declaration.\r\nIn order to override the components internal states, **you need to increase specificity**.\r\nHere is an example with the `disable` state and the button component:\r\n\r\n```css\r\n.classes-state-root {\r\n  /* ... */\r\n}\r\n.classes-state-root.disabled {\r\n  color: white;\r\n}\r\n```\r\n\r\n```fsharp\r\n\r\nbutton [\r\n    HTMLAttr.Disabled true\r\n    MaterialProp.Classes [\r\n        ClassNames.Root "classes-state-root"\r\n        ClassNames.Disabled "disabled"\r\n    ]\r\n] []\r\n\r\n```\r\n\r\n#### Use `$ruleName` to reference a local rule within the same style sheet\r\n\r\nThe [jss-nested](https://github.com/cssinjs/jss-nested) plugin (available by default) can make the process of increasing specificity easier.\r\n\r\n```fsharp\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Custom ("&$disabled", [\r\n            CSSProp.Color "white"\r\n        ] |> keyValueList CaseRules.LowerFirst)\r\n    ]\r\n    Styles.Disabled []\r\n]\r\n```\r\n\r\ncompiles to:\r\n\r\n```css\r\n.root-x.disable-x {\r\n  color: white;\r\n}\r\n```\r\n"""\r\n\r\nlet inlineStyleText = """\r\n### Overriding with inline-style\r\n\r\nThe second way to override the style of a component is to use the **inline-style** approach.\r\nEvery component provides a `style` property.\r\nThese properties are always applied to the root element.\r\n\r\nYou don\'t have to worry about CSS specificity as the inline-style takes precedence over the regular CSS.\r\n"""\r\n\r\nlet materialDesignVariations = """\r\n## 2. Material Design variations\r\n\r\nThe Material Design specification documents different variations of certain components, such as how buttons come in different shapes: [text](https://material.io/design/components/buttons.html#text-button) (formerly "flat"), [contained](https://material.io/design/components/buttons.html#contained-button) (formerly "raised"), [FAB](https://material.io/design/components/buttons-floating-action-button.html) and more.\r\n\r\nMaterial-UI attempts to implement all of these variations.\r\n"""\r\n\r\nlet globalThemeVariationText = """\r\n## 3. Global theme variation\r\n\r\n### Theme variables\r\n\r\nIn order to promote consistency between components, and manage the user interface appearance as a whole, Material-UI provides a mechanism to apply global changes by adjusting the [theme configuration variables](#/customization/themes).\r\n\r\n### Global theme override\r\n\r\nDo you want to customize **all the instances** of a component type?\r\n\r\nWhen the configuration variables aren\'t powerful enough,\r\nyou can take advantage of the `overrides` key of the `theme` to potentially change every single style injected by Material-UI into the DOM.\r\nLearn more about it in the [themes section](#/customization/themes) of the documentation.\r\n\r\n### Global CSS override\r\n\r\nYou can also customize all instances of a component with CSS.\r\nWe expose a `dangerouslyUseGlobalCSS` option to do so.\r\nLearn more about it in the [CSS in JS section](#/customization/css-in-js) of the documentation. It\'s very similar to how you would customize Bootstrap.\r\n"""\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view classNamesText "./Customization/Overrides/ClassNames.fs" ClassNames.view\r\n        Demo.view classNestingText "./Customization/Overrides/ClassNesting.fs" ClassNesting.view\r\n        Demo.view shortlandText "./Customization/Overrides/ShortlandClasses.fs" ShortlandClasses.view\r\n        Demo.view internalStateText "./Customization/Overrides/InternalState.fs" InternalState.view\r\n        Demo.view inlineStyleText "./Customization/Overrides/InlineStyle.fs" InlineStyle.view\r\n        Markdown.view "[When should I use inline-style vs classes?](https://material-ui.com/getting-started/faq/#when-should-i-use-inline-style-vs-classes-)"\r\n        Markdown.view materialDesignVariations\r\n        Markdown.view globalThemeVariationText\r\n    ]\r\n'},function(e,t){e.exports='module Customization.Overrides.ClassNames\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import.React\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Themes\r\n\r\n// We can inject some CSS into the DOM\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Background "linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"\r\n        CSSProp.BorderRadius 3\r\n        CSSProp.Border 0\r\n        CSSProp.Color "white"\r\n        CSSProp.Height 48\r\n        CSSProp.Padding "0 30px"\r\n        CSSProp.BoxShadow "0 3px 5px 2px rgba(255, 105, 135, .3)"\r\n    ]\r\n]\r\n\r\ntype ClassNamesProps =\r\n    abstract className : string with get,set\r\n    abstract children : ReactElement list with get,set\r\n    inherit IClassesProps\r\n\r\nlet classNames (props : ClassNamesProps) =\r\n    button\r\n        [ classList [ !!props.classes?root, true\r\n                      props.className,      true ] ]\r\n        props.children\r\n\r\nlet withStyles = withStyles<ClassNamesProps> (StyleType.Styles styles) [] classNames\r\n\r\nlet view () =\r\n    from withStyles createEmpty [ str "class names" ]'},function(e,t){e.exports='module Customization.Overrides.ClassNesting\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Background "linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"\r\n        CSSProp.BorderRadius 3\r\n        CSSProp.Border 0\r\n        CSSProp.Color "white"\r\n        CSSProp.Height 48\r\n        CSSProp.Padding "0 30px"\r\n        CSSProp.BoxShadow "0 3px 5px 2px rgba(255, 105, 135, .3)"\r\n    ]\r\n    Styles.Label [\r\n        CSSProp.TextTransform "capitalize"\r\n    ]\r\n]\r\n\r\nlet classNesting (props : IClassesProps) =\r\n    button [\r\n        MaterialProp.Classes [\r\n            ClassNames.Root !!props.classes?root\r\n            ClassNames.Label !!props.classes?label\r\n        ]\r\n    ] [ str "classes nesting" ]\r\n\r\nlet withStyles = withStyles (StyleType.Styles styles) [] classNesting\r\n\r\nlet view () =\r\n    from withStyles createEmpty<IClassesProps> []'},function(e,t){e.exports='module Customization.Overrides.InlineStyle\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\n\r\n// We can use inline style\r\nlet style = [\r\n    CSSProp.Background "linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"\r\n    CSSProp.BorderRadius 3\r\n    CSSProp.Border 0\r\n    CSSProp.Color "white"\r\n    CSSProp.Height 48\r\n    CSSProp.Padding "0 30px"\r\n    CSSProp.BoxShadow "0 3px 5px 2px rgba(255, 105, 135, .3)"\r\n]\r\n\r\nlet view () =\r\n    button [ Style style ] [ str "inline-style" ]'},function(e,t){e.exports='module Customization.Overrides.InternalState\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Background "linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"\r\n        CSSProp.BorderRadius 3\r\n        CSSProp.Border 0\r\n        CSSProp.Color "white"\r\n        CSSProp.Height 48\r\n        CSSProp.Padding "0 30px"\r\n        CSSProp.BoxShadow "0 3px 5px 2px rgba(255, 105, 135, .3)"\r\n\r\n        // $disabled is a reference to the local disabled\r\n        // rule within the same style sheet\r\n        // By using &, we increase the specificity\r\n        CSSProp.Custom ("&$disabled", [\r\n            CSSProp.Background "rgba(0,0,0,0.12)"\r\n            CSSProp.Color "white"\r\n            CSSProp.BoxShadow "none"\r\n        ] |> keyValueList CaseRules.LowerFirst)\r\n    ]\r\n    Styles.Disabled []\r\n]\r\n\r\nlet classNesting (props : IClassesProps) =\r\n    button [\r\n        HTMLAttr.Disabled true\r\n        MaterialProp.Classes [\r\n            ClassNames.Root !!props.classes?root // class name, e.g. `classes-state-root-x`\r\n            ClassNames.Disabled !!props.classes?disabled // class name, e.g. `classes-state-disabled-x`\r\n        ]\r\n    ] [ str "classes state" ]\r\n\r\nlet withStyles = withStyles (StyleType.Styles styles) [] classNesting\r\n\r\nlet view () =\r\n    from withStyles createEmpty<IClassesProps> []\r\n\r\n'},function(e,t){e.exports='module Customization.Overrides.ShortlandClasses\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Background "linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"\r\n        CSSProp.BorderRadius 3\r\n        CSSProp.Border 0\r\n        CSSProp.Color "white"\r\n        CSSProp.Height 48\r\n        CSSProp.Padding "0 30px"\r\n        CSSProp.BoxShadow "0 3px 5px 2px rgba(255, 105, 135, .3)"\r\n    ]\r\n    Styles.Label [\r\n        CSSProp.TextTransform "capitalize"\r\n    ]\r\n]\r\n\r\nlet styledButton = withStyles (StyleType.Styles styles) [] !!MaterialUI.Button\r\n\r\nlet view () =\r\n    from styledButton createEmpty<IClassesProps> [ str "Classes Shortland" ]\r\n'},function(e,t){e.exports='module Customization.Themes.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Components\r\n\r\nlet text = importDefault "./Themes.md"\r\n\r\nlet colorToolText = """\r\n#### Color tool\r\n\r\nNeed inspiration? The Material Design team has built an awesome\r\n[palette configuration tool](https://material-ui.com/style/color/#color-tool) to help you.\r\n"""\r\n\r\nlet darkThemeText = """\r\n### Type (light /dark theme)\r\n\r\nYou can make the theme dark by setting `PaletteProp.Type` to `PaletteType.Dark`.\r\nWhile it\'s only a single property value change, internally it modifies the value of the following keys:\r\n- `palette.text`\r\n- `palette.divider`\r\n- `palette.background`\r\n- `palette.action`\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Type PaletteType.Dark\r\n                ]\r\n            ]\r\n```\r\n"""\r\n\r\nlet typographyThemeText = """\r\n### Typography\r\n\r\nToo many type sizes and styles at once can spoil any layout.\r\nThe theme provides a **limited set of type sizes** that work well together along with the layout grid.\r\nThese sizes are used across the components.\r\n\r\nHave a look at the following example regarding changing the default values, such as the font family.\r\n""" // If you want to learn more about typography, you can check out [the typography section](/style/typography/).\r\n\r\nlet typographyFontFamilyText = """\r\n### Typography - Font family\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Typography [\r\n                    ThemeTypographyProp.UseNextVariants true\r\n                    ThemeTypographyProp.FontFamily ([\r\n                        "-apple-system"\r\n                        "BlinkMacSystemFont"\r\n                        "\\"Segou UI\\""\r\n                        "Roboto"\r\n                        "\\"Helvetica Neue\\""\r\n                        "Arial"\r\n                        "sans-serif"\r\n                        "\\"Apple Color Emoji\\""\r\n                        "\\"Segoe UI Emoji\\""\r\n                        "\\"Segoe UI Symbol\\"" ] |> String.concat(","))\r\n                ]\r\n            ]\r\n```\r\n"""\r\n\r\nlet typographyFontSizeText = """\r\n### Typography - Font size\r\n\r\nMaterial-UI uses `rem` units for the font size.\r\nThe browser `<html>` element default font size is `16px`, but browsers have an option to change this value,\r\nso `rem` units allow us to accommodate the user\'s settings, resulting in a much better user experience.\r\nUsers change font size settings for all kinds of reasons, from poor eyesight to choosing optimum settings\r\nfor devices that can be vastly different in size and viewing distance.\r\n\r\nTo change the font-size of Material-UI you can provide a `ThemeTypographyProp.FontSize` property.\r\nThe default value is `14px`.\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Typography [\r\n                    ThemeTypographyProp.FontSize "12"\r\n                ]\r\n            ]\r\n```\r\nThe computed font size by the browser follows this mathematical equation:\r\n\r\n![font-size](img/font-size.gif)\r\n"""\r\n\r\nlet htmlFontSizeText = """\r\n### Typography - HTML font size\r\n\r\nYou might want to change the `<html>` element default font size. For instance, when using the [10px simplification](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\r\nWe provide a `ThemeTypographyProp.HtmlFontSize` theme property for this use case.\r\nIt\'s telling Material-UI what\'s the font-size on the `<html>` element is.\r\nIt\'s used to adjust the `rem` value so the calculated font-size always match the specification.\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Typography [\r\n                    // Tell Material-UI what\'s the font-size on the html element is.\r\n                    ThemeTypographyProp.HtmlFontSize "12"\r\n                ]\r\n            ]\r\n```\r\n\r\n```css\r\nhtml {\r\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\r\n}\r\n```\r\n\r\n*You need to apply the above CSS on the html element of this page to see the below demo rendered correctly*\r\n"""\r\n\r\nlet customVariablesText = """\r\n### Custom variables\r\n\r\nWhen using Material-UI\'s [styling solution](#/customization/css-in-js) with your own components,\r\nyou can also take advantage of the theme.\r\nIt can be convenient to add additional variables to the theme so you can use them everywhere.\r\nFor instance:\r\n"""\r\n\r\nlet otherVariablesText = """\r\n### Other variables\r\n\r\nIn addition to the palette, dark and light types, and typography, the theme normalizes implementation by providing many more default values, such as breakpoints, shadows, transitions, etc.\r\nYou can check out the \r\n<a href="https://material-ui.com/customization/default-theme/" target="_blank">default theme section</a> to view the default theme in full.\r\n"""\r\n\r\nlet overrideCSSText = """\r\n## Customizing all instances of a component type\r\n\r\n### CSS\r\n\r\nWhen the configuration variables aren\'t powerful enough, you can take advantage of the\r\n`ThemeProp.Overrides` key of the `theme` to potentially change every single **style** injected by Material-UI into the DOM.\r\nThat\'s a really powerful feature.\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Overrides [\r\n                    Overrides.MuiButton [ // Name of the component ⚛️ / style sheet\r\n                        Styles.Root [ // Name of the rule\r\n                            CSSProp.Color "white" // Some CSS\r\n                        ]\r\n                    ]\r\n                ]\r\n            ]\r\n```\r\n"""\r\n\r\nlet overridesPropertiesText = """\r\n### Properties\r\n\r\nYou can also apply properties on all the instances of a component type.\r\nWe expose a `ThemeProp.Props` key in the `theme` for this use case.\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Props [\r\n                    // Name of the component ⚛️\r\n                    ThemePropsProp.MuiButtonBase [\r\n                        // The properties to apply\r\n                        MaterialProp.DisableRipple true // No more ripple, on the whole application!\r\n                    ]\r\n                ]\r\n            ]\r\n```\r\n"""\r\n\r\nlet withThemeText = """\r\n## Accessing the theme in a component\r\n\r\nYou might need to access the theme variables inside your React components.\r\nLet\'s say you want to display the value of the primary color, you can use the `withTheme()` higher-order component to do so. Here is an example:\r\n"""\r\n\r\nlet nestedText = """\r\n## Nesting the theme\r\n\r\nThe theming solution is very flexible, as you can nest multiple theme providers.\r\nThis can be really useful when dealing with different area of your application that have distinct appearance from each other.\r\n"""\r\n\r\nlet performanceNote = """\r\n#### A note on performance\r\n\r\nThe performance implications of nesting the `MuiThemeProvider` component are linked to JSS\'s work behind the scenes.\r\nThe main point to understand is that we cache the injected CSS with the following tuple `(styles, theme)`.\r\n- `theme`: If you provide a new theme at each render, a new CSS object will be computed and injected. Both for UI consistency and performance, it\'s better to render a limited number of theme objects.\r\n- `styles`: The larger the styles object is, the more work is needed.\r\n"""\r\n\r\nlet apiText = """\r\n## API\r\n\r\n### `muiThemeProvider`\r\n\r\nThis component takes a `MuiThemeProviderProp.Theme` property, and makes the `theme` available down the React tree thanks to React context.\r\nIt should preferably be used at **the root of your component tree**.\r\n\r\n\x3c!--You can see the full properties API in [this dedicated page](/api/mui-theme-provider/).--\x3e\r\n\r\n#### Examples\r\n\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\n\r\nlet theme = createMuiTheme []\r\n\r\nlet view () =\r\n    muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n        div [] [] // your application components\r\n    ]\r\n```\r\n\r\n### `createMuiTheme (options : ThemeProp list) : ITheme`\r\n\r\nGenerate a theme base on the options received.\r\n\r\n#### Arguments\r\n\r\n1. `options` (*ThemeProp list*): Takes an incomplete list of `ThemeProp`s and adds the missing parts.\r\n\r\n```fsharp\r\ntype ThemeProp =\r\n    | Direction of Themes.TextDirection\r\n    | Shadows of string list\r\n    | [<Erase>] Custom of string*obj\r\n\r\nThemeProp.Palette (props : PaletteProp list) : ThemeProp\r\nThemeProp.Shape (props : ShapeProp list) : ThemeProp\r\nThemeProp.Spacing (props : SpacingProp list) : ThemeProp\r\nThemeProp.Typography (props : ThemeTypographyProp list) : ThemeProp\r\nThemeProp.ZIndex (props : ZIndexProp list) : ThemeProp\r\nThemeProp.Overrides (props : IOverridesProp list) : ThemeProp\r\n```\r\n\r\nYou can find full list of `Theme` options and subprops [here](https://github.com/mvsmal/fable-material-ui/blob/master/src/Fable.Helpers.MaterialUI.Props.fs#L1711-L1962)\r\n\r\n#### Returns\r\n\r\n`theme` (*ITheme*): A complete, ready to use theme object.\r\n\r\n#### Examples\r\n\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [\r\n                        PaletteIntentionProp.Main Colors.purple.``500``\r\n                    ]\r\n                    PaletteProp.Secondary [\r\n                        PaletteIntentionProp.Main "#11cb5f"\r\n                    ]\r\n                ]\r\n            ]\r\n```\r\n\r\n\r\n### `withTheme<\'P when \'P :> IThemeProps> (fn : (\'P -> ReactElement)) : ClassComponent<\'P>`\r\n\r\nProvide the `theme` object as a property of the input component so it can be used\r\nin the render method.\r\n\r\n#### Arguments\r\n\r\n1. `fn` (*\'P -> ReactElement*): The function which expects `props : \'P` argument and returns `ReactElement`.\r\n`\'P` should inherit `IThemeProps`\r\n\r\n#### Returns\r\n\r\n`Component` (*ClassComponent<\'P>*): The new component created.\r\n\r\n#### Examples\r\n\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\n\r\nlet myFun (props : IThemeProps) =\r\n    div [] [ str props.theme.palette.primary.main ]\r\n\r\nlet myFunWithTheme = withTheme myFun\r\n\r\nlet myComponent () =\r\n    from myFunWithTheme createEmpty<IThemeProps> []\r\n\r\n```\r\n\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\n\r\ntype MyFunProps =\r\n    abstract foo : string with get,set\r\n    inherit IThemeProps\r\n\r\nlet myFun (props : MyFunProps) =\r\n    div [] [\r\n        str props.theme.palette.primary.main \r\n        str props.foo\r\n    ]\r\n\r\nlet myFunWithTheme = withTheme myFun\r\n\r\nlet myComponent () =\r\n    let props = createEmpty<MyFunProps>\r\n    props.foo <- "bar"\r\n    from myFunWithTheme props []\r\n```\r\n"""\r\n\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view "#### Example" "./Customization/Themes/Palette.fs" Palette.view\r\n        Markdown.view colorToolText\r\n        Demo.view darkThemeText "./Customization/Themes/DarkTheme.fs" DarkTheme.view\r\n        Demo.view typographyThemeText "./Customization/Themes/TypographyTheme.fs" TypographyTheme.view\r\n        Markdown.view typographyFontFamilyText\r\n        Markdown.view typographyFontSizeText\r\n        Demo.view htmlFontSizeText "./Customization/Themes/FontSizeTheme.fs" FontSizeTheme.view\r\n        Demo.view customVariablesText "./Customization/Themes/CustomStyles.fs" CustomStyles.view\r\n        Markdown.view otherVariablesText\r\n        Demo.view overrideCSSText "./Customization/Themes/OverrideCss.fs" OverrideCss.view\r\n        Demo.view overridesPropertiesText "./Customization/Themes/OverrideProperties.fs" OverrideProperties.view\r\n        Demo.view withThemeText "./Customization/Themes/WithTheme.fs" WithTheme.view\r\n        Demo.view nestedText "./Customization/Themes/Nested.fs" Nested.view\r\n        Markdown.view performanceNote\r\n        Markdown.view apiText\r\n\r\n    ]'},function(e,t){e.exports='module Customization.Themes.CustomStyles\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.Color theme?status?danger\r\n            CSSProp.Custom ("&$checked", [\r\n                CSSProp.Color theme?status?danger\r\n            ] |> keyValueList CaseRules.LowerFirst)\r\n        ]\r\n        Styles.Checked []\r\n    ]\r\n\r\nlet customCheckbox (props : IClassesProps) =\r\n    checkbox [\r\n        HTMLAttr.DefaultChecked true\r\n        MaterialProp.Classes [\r\n            ClassNames.Root !!props.classes?root\r\n            ClassNames.Checked !!props.classes?``checked``\r\n        ]\r\n    ]\r\n\r\nlet customCheckboxWithStyles = withStyles<IClassesProps> (StyleType.Func styles) [] customCheckbox\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Custom ("status", [\r\n                    ("danger", Colors.orange.``500``)\r\n                ] |> keyValueList CaseRules.LowerFirst)\r\n            ]\r\n\r\nlet view () =\r\n    muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n        from customCheckboxWithStyles createEmpty []\r\n    ]'},function(e,t){e.exports='module Customization.Themes.DarkTheme\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Type PaletteType.Dark\r\n                ]\r\n                ThemeProp.Typography [\r\n                    ThemeTypographyProp.UseNextVariants true\r\n                ]\r\n            ]\r\n\r\nlet darkThemeView (props : IThemeProps) =\r\n    let theme = props.theme\r\n    let primaryText = theme.palette.text.primary\r\n    let primaryColor = theme.palette.primary.main\r\n    \r\n    let primaryTextStyles = [\r\n        CSSProp.BackgroundColor theme.palette.background.``default``\r\n        CSSProp.Padding "8px 16px"\r\n        CSSProp.Color primaryText\r\n    ]\r\n    let primaryColorStyles = [\r\n        CSSProp.BackgroundColor primaryColor\r\n        CSSProp.Padding "8px 16px"\r\n        CSSProp.Color theme.palette.common.white\r\n    ]\r\n\r\n    div [ Style [ Width 300 ] ] [\r\n        typography [ Style primaryColorStyles ] [\r\n            str ("Primary color " + primaryColor)\r\n        ]\r\n        typography [ Style primaryTextStyles ] [\r\n            str ("Primary text " + primaryText)\r\n        ]\r\n    ]\r\n\r\nlet withTheme = withTheme darkThemeView\r\n\r\n\r\nlet view () =\r\n    muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n        from withTheme createEmpty<IThemeProps> []\r\n    ]\r\n'},function(e,t){e.exports='module Customization.Themes.FontSizeTheme\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Typography [\r\n                    ThemeTypographyProp.UseNextVariants true\r\n                    ThemeTypographyProp.HtmlFontSize "10"\r\n                ]\r\n            ]\r\n\r\nlet view () =\r\n    muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n        typography [] [ str "body1" ]\r\n    ]\r\n'},function(e,t){e.exports='module Customization.Themes.Nested\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI\r\nopen Fable.Import\r\n\r\nlet styles (theme : ITheme) : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Color theme?status?color\r\n        CSSProp.Custom ("&$checked", [\r\n            CSSProp.Color theme?status?color\r\n        ] |> keyValueList CaseRules.LowerFirst)\r\n    ]\r\n    Styles.Checked []\r\n]\r\n\r\nlet nestedCheckBox (props : IClassesProps) =\r\n    checkbox [\r\n        HTMLAttr.DefaultChecked true\r\n        MaterialProp.Classes [\r\n            ClassNames.Root !!props.classes?root\r\n            ClassNames.Checked !!props.classes?``checked``\r\n        ]\r\n    ]\r\n\r\nlet nestedWithStyles = withStyles<IClassesProps> (StyleType.Func styles) [] nestedCheckBox\r\n\r\nlet theme1 = createMuiTheme [\r\n                ThemeProp.Custom ("status", [\r\n                    CSSProp.Color Colors.orange.``500``\r\n                ] |> keyValueList CaseRules.LowerFirst)\r\n            ]\r\n\r\nlet theme2 = createMuiTheme [\r\n                ThemeProp.Custom ("status", [\r\n                    CSSProp.Color Colors.green.``500``\r\n                ] |> keyValueList CaseRules.LowerFirst)\r\n            ]\r\n\r\nlet theme3 (theme : ITheme) =\r\n    let newTheme : ITheme = !!JS.Object.assign(createEmpty, theme)\r\n    newTheme?status?color <- Colors.pink.``500``\r\n    newTheme\r\n\r\nlet view () =\r\n    muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme1) ] [\r\n        from nestedWithStyles createEmpty []\r\n        muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme2) ] [\r\n            from nestedWithStyles createEmpty []\r\n        ]\r\n        muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Func theme3) ] [\r\n            from nestedWithStyles createEmpty []\r\n        ]\r\n    ]\r\n'},function(e,t){e.exports='module Customization.Themes.OverrideCss\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Overrides [\r\n                    OverridesProp.MuiButton [\r\n                        Styles.Root [\r\n                            CSSProp.Background "linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"\r\n                            CSSProp.BorderRadius 3\r\n                            CSSProp.Border 0\r\n                            CSSProp.Color "white"\r\n                            CSSProp.Height 48\r\n                            CSSProp.Padding "0 30px"\r\n                            CSSProp.BoxShadow "0 3px 5px 2px rgba(255, 105, 135, .3)"\r\n                        ]\r\n                    ]\r\n                ]\r\n            ]\r\n\r\nlet view () =\r\n    muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n        button [] [ str "Override CSS" ]\r\n    ]\r\n'},function(e,t){e.exports='module Customization.Themes.OverrideProperties\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Props [\r\n                    // Name of the component ⚛️\r\n                    ThemePropsProp.MuiButtonBase [\r\n                        // The properties to apply\r\n                        MaterialProp.DisableRipple true // No more ripple, on the whole application 💣!\r\n                    ]\r\n                ]\r\n            ]\r\n\r\nlet view () =\r\n    muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n        button [] [ str "Override properties" ]\r\n    ]\r\n\r\n'},function(e,t){e.exports='module Customization.Themes.Palette\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [\r\n                        PaletteIntentionProp.Main Colors.purple.``500``\r\n                    ]\r\n                    PaletteProp.Secondary [\r\n                        PaletteIntentionProp.Main "#11cb5f"\r\n                    ]\r\n                ]\r\n            ]\r\n\r\nlet view () =\r\n    muiThemeProvider [\r\n        MuiThemeProviderProp.Theme (ProviderTheme.Theme theme)\r\n    ] [\r\n        button [ MaterialProp.Color ComponentColor.Primary ] [ str "Primary" ]\r\n        button [ MaterialProp.Color ComponentColor.Secondary ] [ str "Secondary" ]\r\n    ]'},function(e,t){e.exports='module Customization.Themes.TypographyTheme\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Display "flex"\r\n    ]\r\n]\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Typography [\r\n                    ThemeTypographyProp.UseNextVariants true\r\n                    ThemeTypographyProp.FontFamily ([\r\n                        "-apple-system"\r\n                        "BlinkMacSystemFont"\r\n                        "\\"Segou UI\\""\r\n                        "Roboto"\r\n                        "\\"Helvetica Neue\\""\r\n                        "Arial"\r\n                        "sans-serif"\r\n                        "\\"Apple Color Emoji\\""\r\n                        "\\"Segoe UI Emoji\\""\r\n                        "\\"Segoe UI Symbol\\"" ] |> String.concat(","))\r\n                    ThemeTypographyProp.FontWeightMedium 500\r\n                    ThemeTypographyProp.Body1 [\r\n                        TextStyleProp.FontWeight "500"\r\n                    ]\r\n                    ThemeTypographyProp.Subtitle1 [\r\n                        TextStyleProp.FontSize "12"\r\n                    ]\r\n                    ThemeTypographyProp.Button [\r\n                        !!("fontStyle", "italic")\r\n                    ]\r\n                ]\r\n            ]\r\n\r\nlet typographyTheme (props : IClassesProps) =\r\n    let children =\r\n        div [] [\r\n            typography [] [ str "body1" ]\r\n            typography [ TypographyProp.Variant TypographyVariant.Subtitle1 ] [ str "subtitle" ]\r\n            button [] [ str "button" ]\r\n        ]\r\n    \r\n    div [ HTMLAttr.Class !!props.classes?root ] [\r\n        children\r\n        muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n            children\r\n        ]\r\n    ]\r\n\r\nlet withStyles = withStyles (StyleType.Styles styles) [] typographyTheme\r\n\r\nlet view () =\r\n    from withStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Customization.Themes.WithTheme\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\n\r\nlet darkThemeView (props : IThemeProps) =\r\n    let theme = props.theme\r\n    let primaryText = theme.palette.text.primary\r\n    let primaryColor = theme.palette.primary.main\r\n    \r\n    let primaryTextStyles = [\r\n        CSSProp.BackgroundColor theme.palette.background.``default``\r\n        CSSProp.Padding ((theme.spacing.unit, theme.spacing.unit * 2) ||> sprintf "%dpx %dpx")\r\n        CSSProp.Color primaryText\r\n    ]\r\n    let primaryColorStyles = [\r\n        CSSProp.BackgroundColor primaryColor\r\n        CSSProp.Padding ((theme.spacing.unit, theme.spacing.unit * 2) ||> sprintf "%dpx %dpx")\r\n        CSSProp.Color theme.palette.common.white\r\n    ]\r\n\r\n    div [ Style [ Width 300 ] ] [\r\n        typography [ Style primaryColorStyles ] [\r\n            str ("Primary color " + primaryColor)\r\n        ]\r\n        typography [ Style primaryTextStyles ] [\r\n            str ("Primary text " + primaryText)\r\n        ]\r\n    ]\r\n\r\nlet withTheme = withTheme darkThemeView\r\n\r\n\r\nlet view () =\r\n    from withTheme createEmpty<IThemeProps> []'},function(e,t){e.exports='module Demos.AppBar.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Demos.AppBar\r\nopen Components\r\n\r\nlet text = importDefault "./AppBar.md"\r\n\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view "## Simple App Bar" "./Demos/AppBar/SimpleAppBar.fs" SimpleAppBar.view\r\n        Demo.view "## App Bar with buttons" "./Demos/AppBar/AppBarWithButtons.fs" AppBarWithButtons.view\r\n    ]'},function(e,t){e.exports='module Demos.AppBar.AppBarWithButtons\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            FlexGrow 1\r\n        ]\r\n        Styles.Custom\r\n            ("flex", [\r\n                FlexGrow 1\r\n            ])\r\n        Styles.Custom\r\n            ("menuButton", [\r\n                CSSProp.MarginLeft -12\r\n                CSSProp.MarginRight 20\r\n            ])\r\n    ]\r\n\r\nlet appBar (props : IClassesProps) =\r\n    let classes = props.classes\r\n    div [ Class !!classes?root ] [\r\n        appBar [\r\n            AppBarProp.Position AppBarPosition.Static\r\n        ] [\r\n            toolbar [] [\r\n                iconButton [\r\n                    Class !!classes?menuButton\r\n                    MaterialProp.Color ComponentColor.Inherit\r\n                    HTMLAttr.Custom ("aria-label", "Menu")\r\n                ] [ icon [] [ str "menu" ] ]\r\n                typography [\r\n                    Class !!classes?flex\r\n                    TypographyProp.Variant TypographyVariant.H6\r\n                    MaterialProp.Color ComponentColor.Inherit\r\n                ] [ str "News" ]\r\n                button [\r\n                    MaterialProp.Color ComponentColor.Inherit\r\n                ] [ str "Login" ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet appBarWithStyles = withStyles<IClassesProps> (StyleType.Styles styles) [] appBar\r\n\r\nlet view () =\r\n    from appBarWithStyles createEmpty []'},function(e,t){e.exports='module Demos.AppBar.SimpleAppBar\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles : IStyles list =\r\n    [ Styles.Root [ CSSProp.FlexGrow 1 ] ]\r\n\r\nlet appBar (props : IClassesProps) =\r\n    div [ Class !!props.classes?root ] [\r\n        appBar [\r\n            AppBarProp.Position AppBarPosition.Static\r\n            MaterialProp.Color ComponentColor.Default\r\n        ] [\r\n            toolbar [] [\r\n                typography [\r\n                    TypographyProp.Variant TypographyVariant.H6\r\n                    MaterialProp.Color ComponentColor.Inherit\r\n                ] [ str "Photos" ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet appBarWithStyles = withStyles<IClassesProps> (StyleType.Styles styles) [] appBar\r\n\r\nlet view () =\r\n    from appBarWithStyles createEmpty []'},function(e,t){e.exports='module Demos.Avatars.View\r\nopen Fable.Helpers.React\r\n\r\nlet root () =\r\n    div [] [ str "avatars" ]\r\n'},function(e,t){e.exports='module Demos.Buttons.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Demos.Buttons\r\nopen Components\r\n\r\nlet text = importDefault "./Buttons.md"\r\n\r\nlet textButtonsText = """\r\n## Text Buttons\r\n\r\n[Text buttons](https://material.io/design/components/buttons.html#text-button)\r\nare typically used for less-pronounced actions, including those located:\r\n\r\n- In dialogs\r\n- In cards\r\n\r\nIn cards, text buttons help maintain an emphasis on card content.\r\n"""\r\n\r\nlet outlinedButtonsText = """\r\n## Outlined Buttons\r\n\r\n[Outlined buttons](https://material.io/design/components/buttons.html#outlined-button)\r\nare medium-emphasis buttons. They contain actions that are important,\r\nbut aren’t the primary action in an app.\r\n\r\n### Alternatives\r\n\r\nOutlined buttons are also a lower emphasis alternative to contained buttons,\r\nor a higher emphasis alternative to text buttons.\r\n"""\r\n\r\nlet containedButtonsText = """\r\n## Contained Buttons\r\n\r\n[Contained buttons](https://material.io/design/components/buttons.html#contained-button)\r\nare high-emphasis, distinguished by their use of elevation and fill.\r\nThey contain actions that are primary to your app.\r\n\r\nThe last example of this demo show how to use an upload button.\r\n"""\r\n\r\nlet floatingButtonsText = """\r\n## Floating Action Buttons\r\n\r\nA [floating action button](https://material.io/design/components/buttons-floating-action-button.html)\r\n(FAB) performs the primary, or most common, action on a screen.\r\nIt appears in front of all screen content, typically as a circular shape with an icon in its center.\r\nFABs come in three types: regular, mini, and extended.\r\n\r\nOnly use a FAB if it is the most suitable way to present a screen’s primary action.\r\n\r\nOnly one floating action button is recommended per screen to represent the most common action.\r\n"""\r\n\r\nlet floatingButtonZoomText = """\r\nThe floating action button animates onto the screen as an expanding piece of material, by default.\r\n\r\nA floating action button that spans multiple lateral screens (such as tabbed screens) should briefly disappear,\r\nthen reappear if its action changes.\r\n\r\nThe Zoom transition can be used to achieve this. Note that since both the exiting and entering\r\nanimations are triggered at the same time, we use `enterDelay` to allow the outgoing Floating Action Button\'s\r\nanimation to finish before the new one enters.\r\n"""\r\n\r\nlet buttonSizesText = """\r\n## Sizes\r\n\r\nFancy larger or smaller buttons? Use the `ButtonProp.Size` or the `ButtonProp.Mini` property.\r\n"""\r\n\r\nlet iconButtonsText = """\r\n## Icon Buttons\r\n\r\nIcon buttons are commonly found in app bars and toolbars.\r\n\r\nIcons are also appropriate for toggle buttons that allow a single choice to be selected or\r\ndeselected, such as adding or removing a star to an item.\r\n"""\r\n\r\nlet iconLabelButtonsText = """\r\n### Buttons with icons and label\r\n\r\nSometimes you might want to have icons for certain button to enhance the UX of the application as we recognize logos more easily than plain text. For example, if you have a delete button you can label it with a dustbin icon.\r\n"""\r\n\r\nlet customizedButtonsText = """\r\n## Customized Buttons\r\n\r\nIf you have been reading the [overrides documentation page](#/customization/overrides)\r\nbut you are not confident jumping in,\r\nhere are examples of how you can change the main color of a Button using classes,\r\nand using a theme; and of a Bootstrap style Button.\r\n"""\r\n\r\nlet complexButtonsText = """\r\n## Complex Buttons\r\n\r\nThe Text Buttons, Contained Buttons, Floating Action Buttons and Icon Buttons are built on top of the same component: the `ButtonBase`.\r\nYou can take advantage of this lower level component to build custom interactions.\r\n"""\r\n\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view textButtonsText "./Demos/Buttons/TextButtons.fs" TextButtons.view\r\n        Demo.view outlinedButtonsText "./Demos/Buttons/OutlinedButtons.fs" OutlinedButtons.view\r\n        Demo.view containedButtonsText "./Demos/Buttons/ContainedButtons.fs" ContainedButtons.view\r\n        Demo.view floatingButtonsText "./Demos/Buttons/FloatingActionButtons.fs" FloatingActionButtons.view\r\n        Demo.view floatingButtonZoomText "./Demos/Buttons/FloatingActionButtonZoom.fs" FloatingActionButtonZoom.view\r\n        Demo.view buttonSizesText "./Demos/Buttons/ButtonSizes.fs" ButtonSizes.view\r\n        Demo.view iconButtonsText "./Demos/Buttons/IconButtons.fs" IconButtons.view\r\n        Demo.view iconLabelButtonsText "./Demos/Buttons/IconLabelButtons.fs" IconLabelButtons.view\r\n        Demo.view customizedButtonsText "./Demos/Buttons/CustomizedButtons.fs" CustomizedButtons.view\r\n    ]\r\n'},function(e,t){e.exports='module Demos.Buttons.ButtonSizes\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [ Styles.Button [ CSSProp.Margin theme.spacing.unit ] ]\r\n\r\nlet buttons props =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        R.div [] [\r\n            button [\r\n                ButtonProp.Size ButtonSize.Small\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Small" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Medium\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Medium" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Large\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Large" ]\r\n        ]\r\n        R.div [] [\r\n            button [\r\n                ButtonProp.Size ButtonSize.Small\r\n                ButtonProp.Variant ButtonVariant.Outlined\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Small" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Medium\r\n                ButtonProp.Variant ButtonVariant.Outlined\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Medium" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Large\r\n                ButtonProp.Variant ButtonVariant.Outlined\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Large" ]\r\n        ]\r\n        R.div [] [\r\n            button [\r\n                ButtonProp.Size ButtonSize.Small\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Small" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Medium\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Medium" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Large\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Large" ]\r\n        ]\r\n        R.div [] [\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Fab\r\n                ButtonProp.Mini true\r\n                MaterialProp.Color ComponentColor.Secondary\r\n                HTMLAttr.Class !!classes?button\r\n                HTMLAttr.Custom ("aria-label", "Add")\r\n            ] [ icon [] [ R.str "add_icon" ]]\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Fab\r\n                MaterialProp.Color ComponentColor.Secondary\r\n                HTMLAttr.Class !!classes?button\r\n                HTMLAttr.Custom ("aria-label", "Add")\r\n            ] [ icon [] [ R.str "add_icon" ]]\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []\r\n'},function(e,t){e.exports="module Demos.Buttons.ComplexButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\n"},function(e,t){e.exports='module Demos.Buttons.ContainedButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Input [ CSSProp.Display "none" ]\r\n    ]\r\n\r\nlet buttons props =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Default" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Primary" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Secondary" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Disabled" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            HTMLAttr.Href "#/demos/buttons"\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Link" ]\r\n        R.input [\r\n            HTMLAttr.Accept "image/*"\r\n            HTMLAttr.Class !!classes?input\r\n            HTMLAttr.Id "contained-button-file"\r\n            HTMLAttr.Multiple true\r\n            HTMLAttr.Type "file"\r\n        ]\r\n        R.label [ HTMLAttr.HtmlFor "contained-button-file" ] [\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Component ("span" |> U3.Case1)\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Upload" ]\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []'},function(e,t){e.exports='module Demos.Buttons.CustomizedButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI\r\nmodule R = Fable.Helpers.React\r\n\r\nlet toObj = keyValueList CaseRules.LowerFirst\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [ CSSProp.Margin theme.spacing.unit])\r\n        Styles.Custom\r\n            ("cssRoot", [\r\n                CSSProp.Color (theme.palette.getContrastText(Colors.purple.``500``))\r\n                CSSProp.BackgroundColor Colors.purple.``500``\r\n                CSSProp.Custom\r\n                    ("&:hover", [ CSSProp.BackgroundColor Colors.purple.``700`` ] |> toObj)\r\n            ])\r\n        Styles.Custom\r\n            ("boostrapRoot", [\r\n                CSSProp.BoxShadow "none"\r\n                CSSProp.TextTransform "none"\r\n                CSSProp.FontSize 16\r\n                CSSProp.Padding "6px 12px"\r\n                CSSProp.Border "1px solid"\r\n                CSSProp.BackgroundColor "#007bff"\r\n                CSSProp.BorderColor "#007bff"\r\n                CSSProp.FontFamily\r\n                    ([ "-apple-system"\r\n                       "BlinkMacSystemFont"\r\n                       @"""Segoe UI"""\r\n                       "Roboto"\r\n                       @"""Helvetica Neue"""\r\n                       "Arial"\r\n                       "sans-serif"\r\n                       @"""Apple Color Emoji"""\r\n                       @"""Segoe UI Emoji"""\r\n                       @"""Segoe UI Symbol"""] |> String.concat ",")\r\n                CSSProp.Custom\r\n                    ("&:hover", [\r\n                        CSSProp.BackgroundColor "#0069d9"\r\n                        CSSProp.BorderColor "#0069d9"\r\n                    ] |> toObj)\r\n                CSSProp.Custom\r\n                    ("&:active", [\r\n                        CSSProp.BoxShadow "none"\r\n                        CSSProp.BackgroundColor "#0062cc"\r\n                        CSSProp.BorderColor "#0062cc"\r\n                    ] |> toObj)\r\n                CSSProp.Custom\r\n                    ("&:focus", [\r\n                        CSSProp.BoxShadow "0 0 0 0.2rem rgba(0,123,255,.5)"\r\n                    ] |> toObj)\r\n            ])\r\n    ]\r\n\r\nlet theme = createMuiTheme [\r\n                Typography [\r\n                    // Needed until Material-UI v4 to avoid deprecation warning: https://material-ui.com/style/typography#migration-to-typography-v2\r\n                    UseNextVariants true\r\n                ]\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [ PaletteIntentionProp.Main Colors.green.``500`` ]\r\n                ]\r\n            ]\r\n\r\n\r\nlet buttons (props : IClassesProps) =\r\n    let classes = props.classes\r\n    R.div [ HTMLAttr.Class !!classes?container ] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class ([!!classes?margin; !!classes?cssRoot] |> String.concat " ")\r\n        ] [ R.str "Custom CSS" ]\r\n        muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?margin\r\n            ] [ R.str "MuiThemeProvider" ]\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Primary\r\n            MaterialProp.DisableRipple true\r\n            HTMLAttr.Class ([!!classes?margin; !!classes?bootstrapRoot] |> String.concat " ")\r\n        ] [ R.str "Bootstrap" ]\r\n    ]\r\n\r\nlet buttonsWithStyles = withStyles<IClassesProps> (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []\r\n'},function(e,t){e.exports='module Demos.Buttons.FloatingActionButtonZoom\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Import.React\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI\r\nmodule R = Fable.Helpers.React\r\n\r\nlet tabContainer children =\r\n    typography [\r\n        MaterialProp.Component ("div" |> U3.Case1)\r\n        Style [ CSSProp.Padding (8 * 3) ]\r\n    ] children\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.BackgroundColor theme.palette.background.paper\r\n            CSSProp.Width 500\r\n            CSSProp.Position "relative"\r\n            CSSProp.MinHeight 200\r\n        ]\r\n        Styles.Fab [\r\n            CSSProp.Position "absolute"\r\n            CSSProp.Bottom (theme.spacing.unit * 2)\r\n            CSSProp.Right (theme.spacing.unit * 2)\r\n        ]\r\n        Styles.Custom (\r\n            "fabGreen",\r\n            [\r\n                CSSProp.Color theme.palette.common.white\r\n                CSSProp.BackgroundColor Colors.green.``500``\r\n            ]\r\n        )\r\n    ]\r\n\r\n\r\ntype Fab = {\r\n    color : ComponentColor\r\n    className : string\r\n    icon : ReactElement\r\n}\r\n\r\n\r\ntype ButtonsProps =\r\n    inherit IClassesProps\r\n\r\n\r\ntype ButtonsState = {\r\n    value : int\r\n}\r\n\r\ntype FloatingActionButtonZoom (props) =\r\n    inherit Component<ButtonsProps,ButtonsState>(props)\r\n    do base.setInitState { value = 0 }\r\n\r\n    member this.handleChange _ index =\r\n        this.setState (fun s _ -> { s with value = index })\r\n\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n        let theme : ITheme = !!this.props?theme\r\n        let transitionExit = theme.transitions.duration.leavingScreen\r\n        let transitionsDuration = [\r\n            TransitionDurationProp.Enter theme.transitions.duration.enteringScreen\r\n            TransitionDurationProp.Exit transitionExit\r\n        ]\r\n        let fabs = [\r\n            {\r\n                color = ComponentColor.Primary\r\n                className = !!classes?fab\r\n                icon = icon [] [ R.str "add_icon" ]\r\n            }\r\n            {\r\n                color = ComponentColor.Secondary\r\n                className = !!classes?fab\r\n                icon = icon [] [ R.str "edit_icon" ]\r\n            }\r\n            {\r\n                color = ComponentColor.Inherit\r\n                className = !!classes?fab + " " + !!classes?fabGreen\r\n                icon = icon [] [ R.str "keyboard_arrow_up_icon" ]\r\n            }\r\n        ]\r\n\r\n        R.div [ Class !!classes?root ] [\r\n            yield appBar [\r\n                AppBarProp.Position AppBarPosition.Static\r\n                MaterialProp.Color ComponentColor.Default\r\n            ] [\r\n                tabs [\r\n                    MaterialProp.Value this.state.value\r\n                    TabsProp.OnChange this.handleChange\r\n                    TabsProp.IndicatorColor TabsIndicatorColor.Primary\r\n                    TabsProp.TextColor TabsTextColor.Primary\r\n                    MaterialProp.FullWidth true\r\n                ] [\r\n                    tab [ MaterialProp.Label (R.str "Item One" |> U2.Case1 |> U3.Case1)]\r\n                    tab [ MaterialProp.Label (R.str "Item Two" |> U2.Case1 |> U3.Case1)]\r\n                    tab [ MaterialProp.Label (R.str "Item Three" |> U2.Case1 |> U3.Case1)]\r\n                ]\r\n            ]\r\n            yield (match this.state.value with\r\n                   | 1 -> tabContainer [ R.str "Item Two"]\r\n                   | 2 -> tabContainer [ R.str "Item Three"]\r\n                   | _ -> tabContainer [ R.str "Item One" ] )\r\n            yield! fabs |> List.mapi (fun i f ->\r\n                zoom [\r\n                    Key (f.color |> string)\r\n                    MaterialProp.In (this.state.value = i)\r\n                    MaterialProp.Timeout (transitionsDuration |> U2.Case2)\r\n                    Style [\r\n                        CSSProp.TransitionDelay\r\n                            ((if this.state.value = i then transitionExit else 0.) |> sprintf "%.0fms")\r\n                    ]\r\n                    TransitionProp.UnmountOnExit true\r\n                ] [\r\n                    button [\r\n                        ButtonProp.Variant ButtonVariant.Fab\r\n                        HTMLAttr.Class f.className\r\n                        MaterialProp.Color f.color\r\n                    ] [ f.icon ]\r\n                ])\r\n        ]\r\n\r\nlet floatingButtonsZoom props =\r\n    R.ofType<FloatingActionButtonZoom,_,_> props []\r\n\r\nlet floatingButtonsZoomWithStyles =\r\n    withStyles<ButtonsProps> (StyleType.Func styles) [ StyleOption.WithTheme true ] floatingButtonsZoom\r\n\r\nlet view () =\r\n    R.from floatingButtonsZoomWithStyles createEmpty []\r\n'},function(e,t){e.exports='module Demos.Buttons.FloatingActionButtons\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Custom ("extendedIcon", [ CSSProp.MarginRight theme.spacing.unit ])\r\n    ]\r\n\r\nlet buttons (props : IClassesProps) =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Fab\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "add_icon" ]]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Fab\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "edit_icon" ]]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.ExtendedFab\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ \r\n            icon [] [ R.str "navigation_icon" ]\r\n            R.str "Extended"\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Fab\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "delete_icon" ]]\r\n    ]\r\n\r\nlet buttonsWithStyles = withStyles<IClassesProps> (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []'},function(e,t){e.exports='module Demos.Buttons.IconButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Input [ CSSProp.Display "none" ]\r\n    ]\r\n\r\nlet buttons props =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        iconButton [\r\n            HTMLAttr.Custom ("aria-label", "Delete")\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "delete_icon" ] ]\r\n        iconButton [\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Custom ("aria-label", "Delete")\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "delete_icon" ] ]\r\n        iconButton [\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Custom ("aria-label", "Add an alarm")\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "alarm_icon" ] ]\r\n        iconButton [\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Custom ("aria-label", "Add to shopping cart")\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "add_shopping_cart_icon" ] ]\r\n        R.input [\r\n            HTMLAttr.Accept "image/*"\r\n            HTMLAttr.Class !!classes?input\r\n            HTMLAttr.Id "icon-button-file"\r\n            HTMLAttr.Type "file"\r\n        ]\r\n        R.label [ HTMLAttr.HtmlFor "icon-button-file" ] [\r\n            iconButton [\r\n                MaterialProp.Color ComponentColor.Primary\r\n                MaterialProp.Component ("span" |> U3.Case1)\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ icon [] [ R.str "photo_camera_icon" ] ]\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []\r\n'},function(e,t){e.exports='module Demos.Buttons.IconLabelButtons\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Custom ("leftIcon", [ CSSProp.MarginRight theme.spacing.unit ])\r\n        Styles.Custom ("rightIcon", [ CSSProp.MarginLeft theme.spacing.unit ])\r\n        Styles.Custom ("iconSmall", [ CSSProp.FontSize 20 ])\r\n    ]\r\n\r\nlet buttons (props : IClassesProps) =\r\n    let classes = props.classes\r\n    R.div [] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            R.str "Delete"\r\n            icon [ HTMLAttr.Class !!classes?rightIcon ] [ R.str "delete_icon" ]\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            R.str "Send"\r\n            icon [ HTMLAttr.Class !!classes?rightIcon ] [ R.str "send" ]\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Default\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            R.str "Upload"\r\n            icon [ HTMLAttr.Class !!classes?rightIcon ] [ R.str "cloud_up" ]\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            icon [ HTMLAttr.Class !!classes?leftIcon ] [ R.str "keyboard_voice" ]\r\n            R.str "Talk"\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            ButtonProp.Size ButtonSize.Small\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            icon [\r\n                HTMLAttr.Class (!!classes?leftIcon + " " + !!classes?iconSmall)\r\n            ] [ R.str "save" ]\r\n            R.str "Save"\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles = withStyles<IClassesProps> (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []\r\n'},function(e,t){e.exports='module Demos.Buttons.OutlinedButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Input [ CSSProp.Display "none" ]\r\n    ]\r\n\r\nlet buttons props =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Default" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Primary" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Secondary" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Disabled" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            HTMLAttr.Href "#/demos/buttons"\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Link" ]\r\n        R.input [\r\n            HTMLAttr.Accept "image/*"\r\n            HTMLAttr.Class !!classes?input\r\n            HTMLAttr.Id "outlined-button-file"\r\n            HTMLAttr.Multiple true\r\n            HTMLAttr.Type "file"\r\n        ]\r\n        R.label [ HTMLAttr.HtmlFor "outlined-button-file" ] [\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Outlined\r\n                MaterialProp.Component ("span" |> U3.Case1)\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Upload" ]\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []'},function(e,t){e.exports='module Demos.Buttons.TextButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ]\r\n        Styles.Input [\r\n            Display "none"\r\n        ]\r\n    ]\r\nlet textButtons (props : IClassesProps) =\r\n    let classes = props.classes\r\n    R.div [] [\r\n        button [ Class !!classes?button ] [ R.str "Default" ]\r\n        button [\r\n            MaterialProp.Color ComponentColor.Primary\r\n            Class !!classes?button\r\n        ] [ R.str "Primary" ]\r\n        button [\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            Class !!classes?button\r\n        ] [ R.str "Secondary" ]\r\n        button [\r\n            HTMLAttr.Disabled true\r\n            Class !!classes?button\r\n        ] [ R.str "Disabled" ]\r\n        button [\r\n            Href "#/demos/buttons"\r\n            Class !!classes?button\r\n        ] [ R.str "Link" ]\r\n        R.input [\r\n            Accept "image/*"\r\n            Class !!classes?input\r\n            Id "flat-button-file"\r\n            Multiple true\r\n            HTMLAttr.Type "file"\r\n        ]\r\n        R.label [\r\n            HtmlFor "flat-button-file"\r\n        ] [\r\n            button [\r\n                MaterialProp.Component ("span" |> U3.Case1)\r\n                Class !!classes?button\r\n            ] [ R.str "Upload" ]\r\n        ]\r\n    ]\r\n\r\nlet textButtonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] textButtons\r\n\r\nlet view () =\r\n    R.from textButtonsWithStyles createEmpty []'},function(e,t){e.exports='module Demos.TextFields.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Demos.TextFields\r\nopen Components\r\n\r\nlet text = importDefault "./TextFields.md"\r\nlet textFieldText = """\r\n## TextField\r\n\r\nThe `TextField` wrapper component is a complete form control including a label, input and help text.\r\n"""\r\n\r\nlet outlinedText = """\r\n## Outlined\r\n\r\n`TextField` supports outlined styling.\r\n"""\r\n\r\nlet filledText = """\r\n## Filled\r\n\r\n`TextField` supports filled styling.\r\n"""\r\n\r\nlet composedText = """\r\n## Components\r\n\r\n`TextField` is composed of smaller components (\r\n`FormControl`,\r\n`Input`,\r\n`InputLabel`,\r\nand `FormHelperText`\r\n) that you can leverage directly to significantly customize your form inputs.\r\n\r\nYou might also have noticed that some native HTML input properties are missing from the `TextField` component.\r\nThis is on purpose.\r\nThe component takes care of the most used properties, then it\'s up to the user to use the underlying component shown in the following demo. Still, you can use `inputProps` (and `InputProps`, `InputLabelProps` properties) if you want to avoid some boilerplate.\r\n"""\r\n\r\nlet layoutText = """\r\n## Layout\r\n\r\n`TextField`, `FormControl` allow the specification of `margin` to alter the vertical spacing of inputs. Using\r\n`none` (default) will not apply margins to the `FormControl`, whereas `dense` and `normal` will as well as alter\r\nother styles to meet the specification.\r\n"""\r\n\r\nlet inputAdornmentsText = """\r\n## Input Adornments\r\n\r\n`Input` allows the provision of `InputAdornment`.\r\nThese can be used to add a prefix, a suffix or an action to an input.\r\nFor instance, you can use an icon button to hide or reveal the password.\r\n"""\r\n\r\nlet customizedText = """\r\n## Customized inputs\r\n\r\nIf you have been reading the overrides documentation page\r\nbut you are not confident jumping in, here\'s an example of how you can change the main color of an Input.\r\n"""\r\n\r\nlet withIconText = """\r\n## With icon\r\n\r\nIcons can be specified as prepended or appended.\r\n"""\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view textFieldText "./Demos/TextFields/TextField.fs" TextField.view\r\n        Demo.view outlinedText "./Demos/TextFields/Outlined.fs" Outlined.view\r\n        Demo.view filledText "./Demos/TextFields/Filled.fs" Filled.view\r\n        Demo.view composedText "./Demos/TextFields/Composed.fs" Composed.view\r\n        Demo.view "## Input" "./Demos/TextFields/Input.fs" Input.view\r\n        Demo.view layoutText "./Demos/TextFields/Layout.fs" Layout.view\r\n        Demo.view inputAdornmentsText "./Demos/TextFields/InputAdornments.fs" InputAdornments.view\r\n        Demo.view "## Filled Input Adornments" "./Demos/TextFields/FilledInputAdornments.fs" FilledInputAdornments.view\r\n        Demo.view "## Outlined Input Adornments" "./Demos/TextFields/OutlinedInputAdornments.fs" OutlinedInputAdornments.view\r\n        Demo.view customizedText "./Demos/TextFields/Customized.fs" Customized.view\r\n        Demo.view withIconText "./Demos/TextFields/WithIcon.fs" WithIcon.view\r\n    ]\r\n'},function(e,t){e.exports='module Demos.TextFields.Composed\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.FormControl [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ]\r\n    ]\r\n\r\ntype ComposedTextFieldState = {\r\n    name : string\r\n}\r\n\r\ntype ComposedTextField(p) =\r\n    inherit Component<IClassesProps,ComposedTextFieldState>(p)\r\n    do\r\n        base.setInitState { name = "Composed TextField" }\r\n\r\n    member private this.handleChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with name = value })\r\n    \r\n    override this.render() =\r\n        let classes = this.props.classes\r\n        div [ HTMLAttr.Class !!classes?container ] [\r\n            formControl [ HTMLAttr.Class !!classes?formControl ] [\r\n                inputLabel [ HtmlFor "component-simple" ] [ str "Name" ]\r\n                input [\r\n                    HTMLAttr.Id "component-simple"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ]\r\n            ]\r\n            formControl [\r\n                HTMLAttr.Class !!classes?formControl\r\n                HTMLAttr.Custom ("aria-describedby", "component-helper-text")\r\n            ] [\r\n                inputLabel [ HtmlFor "component-helper" ] [ str "Name" ]\r\n                input [\r\n                    HTMLAttr.Id "component-helper"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ]\r\n                formHelperText [ HTMLAttr.Id "component-helper-text" ] [\r\n                    str "Some important helper text"\r\n                ]\r\n            ]\r\n            formControl [\r\n                HTMLAttr.Class !!classes?formControl\r\n                HTMLAttr.Disabled true\r\n            ] [\r\n                inputLabel [ HtmlFor "component-disabled" ] [ str "Name" ]\r\n                input [\r\n                    HTMLAttr.Id "component-disabled"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ]\r\n                formHelperText [ ] [ str "Disabled" ]\r\n            ]\r\n            formControl [\r\n                HTMLAttr.Class !!classes?formControl\r\n                HTMLAttr.Custom ("aria-describedby", "component-error-text")\r\n                MaterialProp.Error true\r\n            ] [\r\n                inputLabel [ HtmlFor "component-error" ] [ str "Name" ]\r\n                input [\r\n                    HTMLAttr.Id "component-error"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ]\r\n                formHelperText [ HTMLAttr.Id "component-error-text" ] [ str "Error" ]\r\n            ]\r\n            formControl [\r\n                HTMLAttr.Class !!classes?formControl\r\n                FormControlProp.Variant FormControlVariant.Filled\r\n            ] [\r\n                inputLabel [ HtmlFor "component-filled" ] [ str "Name" ]\r\n                filledInput [\r\n                    HTMLAttr.Id "component-filled"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ] []\r\n            ]\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<ComposedTextField,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n\r\n\r\n'},function(e,t){e.exports='module Demos.TextFields.Customized\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI\r\n\r\nlet toObj props = keyValueList CaseRules.LowerFirst props\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n        Styles.Custom ("cssLabel", [\r\n            CSSProp.Custom ("&$cssFocused",\r\n                [\r\n                    CSSProp.Color Colors.purple.``500``\r\n                ] |> toObj)\r\n        ])\r\n        Styles.Custom ("cssFocused", [])\r\n        Styles.Custom ("cssUnderline", [\r\n            CSSProp.Custom ("&:after", [\r\n                CSSProp.BorderBottomColor Colors.purple.``500``\r\n            ] |> toObj)\r\n        ])\r\n        Styles.Custom ("bootstrapRoot", [\r\n            CSSProp.Custom ("label + &", [\r\n                CSSProp.MarginTop (theme.spacing.unit * 3)\r\n            ] |> toObj)\r\n        ])\r\n        Styles.Custom ("bootstrapInput", [\r\n            CSSProp.BorderRadius 4\r\n            CSSProp.BackgroundColor theme.palette.common.white\r\n            CSSProp.Border "1px solid #ced4da"\r\n            CSSProp.FontSize 16\r\n            CSSProp.Padding "10px 12px"\r\n            CSSProp.Transition (theme.transitions.create(["border-color"; "box-shadow"] |> U2.Case2))\r\n            CSSProp.FontFamily (\r\n                [ "-apple-system"\r\n                  "BlinkMacSystemFont"\r\n                  "\\"Segou UI\\""\r\n                  "Roboto"\r\n                  "\\"Helvetica Neue\\""\r\n                  "Arial"\r\n                  "sans-serif"\r\n                  "\\"Apple Color Emoji\\""\r\n                  "\\"Segoe UI Emoji\\""\r\n                  "\\"Segoe UI Symbol\\"" ] |> String.concat(","))\r\n            CSSProp.Custom ("&:focus", [\r\n                CSSProp.BorderColor "#80bdff"\r\n                CSSProp.BoxShadow "0 0 0 0.2rem rgba(0,123,255,.25)"\r\n            ] |> toObj)\r\n        ])\r\n        Styles.Custom ("bootstrapFormLabel", [\r\n            CSSProp.FontSize 18\r\n        ])\r\n    ]\r\n\r\nlet theme = createMuiTheme([\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [\r\n                        PaletteIntentionProp.Main Colors.green.``500``\r\n                    ]\r\n                ]\r\n            ])\r\n\r\nlet customizedInputs (props : IClassesProps) =\r\n    let classes = props.classes\r\n\r\n    div [ Class !!classes?container ] [\r\n        formControl [ Class !!classes?margin ] [\r\n            inputLabel [\r\n                HTMLAttr.HtmlFor "custom-css-input"\r\n                ChildrenProp.FormLabelClasses [\r\n                    ClassNames.Root !!classes?cssLabel\r\n                    ClassNames.Focused !!classes?cssFocused\r\n                ]\r\n            ] [ str "Custom CSS" ]\r\n            input [\r\n                HTMLAttr.Id "custom-css-input"\r\n                MaterialProp.Classes [\r\n                    ClassNames.Underline !!classes?cssUnderline\r\n                ]\r\n            ]\r\n        ]\r\n        muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n            textField [\r\n                HTMLAttr.Class !!classes?margin\r\n                HTMLAttr.Label "MuiThemeProvider"\r\n                HTMLAttr.Id "mui-theme-provider-input"\r\n            ] []\r\n        ]\r\n        formControl [ Class !!classes?margin ] [\r\n            inputLabel [\r\n                InputLabelProp.Shrink true\r\n                HTMLAttr.HtmlFor "bootstrap-input"\r\n                HTMLAttr.Class !!classes?bootstrapFormLabel\r\n            ] [ str "Bootstrap" ]\r\n            inputBase [\r\n                HTMLAttr.Id "bootstrap-input"\r\n                HTMLAttr.DefaultValue "react-bootstrap"\r\n                MaterialProp.Classes [\r\n                    ClassNames.Root !!classes?bootstrapRoot\r\n                    ClassNames.Input !!classes?bootstrapInput\r\n                ]\r\n            ]\r\n        ]\r\n        inputBase [\r\n            HTMLAttr.Class !!classes?margin\r\n            HTMLAttr.DefaultValue "Naked input"\r\n        ]\r\n    ]\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] customizedInputs\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.Filled\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("textField", [\r\n            CSSProp.MarginLeft theme.spacing.unit\r\n            CSSProp.MarginRight theme.spacing.unit\r\n            CSSProp.Width 200\r\n        ])\r\n        Styles.Dense [\r\n            CSSProp.MarginTop 19\r\n        ]\r\n        Styles.Custom("menu", [\r\n            CSSProp.Width 200\r\n        ])\r\n    ]\r\n\r\nlet currencies = [\r\n    ("$", "USD")\r\n    ("€", "EUR")\r\n    ("฿", "BTC")\r\n    ("¥", "JPY")\r\n]\r\n\r\ntype TextFieldState = {\r\n    name : string\r\n    age : string\r\n    multiline : string\r\n    currency : string\r\n}\r\n\r\ntype TextFields (p) =\r\n    inherit React.Component<IClassesProps,TextFieldState>(p)\r\n    do\r\n        base.setInitState {\r\n            name = "Cat in the Hat"\r\n            age = ""\r\n            multiline = "Controlled"\r\n            currency = "EUR"\r\n        }\r\n    \r\n    member private this.handleNameChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with name = value })\r\n    \r\n    member private this.handleMultilineChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with multiline = value })\r\n\r\n    member private this.handleAgeChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with age = value })\r\n    \r\n    member private this.handleCurrencyChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with currency = value })\r\n    \r\n    override this.render() =\r\n        form [\r\n            HTMLAttr.Class !!this.props.classes?container\r\n            HTMLAttr.NoValidate true\r\n            HTMLAttr.AutoComplete "off"\r\n        ] [\r\n            textField [\r\n                HTMLAttr.Id "filled-name"\r\n                HTMLAttr.Label "Name"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Value this.state.name\r\n                DOMAttr.OnChange this.handleNameChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-uncontrolled"\r\n                HTMLAttr.Label "Uncontrolled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "foo"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-required"\r\n                HTMLAttr.Label "Required"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                HTMLAttr.Required true\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-error"\r\n                HTMLAttr.Label "Error"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                MaterialProp.Error true\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Disabled true\r\n                HTMLAttr.Id "filled-disabled"\r\n                HTMLAttr.Label "Disabled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-email-input"\r\n                HTMLAttr.Label "Email"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "email"\r\n                HTMLAttr.AutoComplete "email"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-password-input"\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "password"\r\n                HTMLAttr.AutoComplete "current-password"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-read-only-input"\r\n                HTMLAttr.Label "Read Only"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                ChildrenProp.InputProps [\r\n                    HTMLAttr.ReadOnly true\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-dense"\r\n                HTMLAttr.Label "Dense"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                classList [\r\n                    (!!this.props.classes?textField, true)\r\n                    (!!this.props.classes?dense, true)\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Dense\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-multiline-flexible"\r\n                HTMLAttr.Label "Multiline"\r\n                MaterialProp.Multiline true\r\n                MaterialProp.RowsMax 4\r\n                HTMLAttr.Value this.state.multiline\r\n                DOMAttr.OnChange this.handleMultilineChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-multiline-static"\r\n                HTMLAttr.Label "Multiline"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Rows 4\r\n                MaterialProp.Multiline true\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-helperText"\r\n                HTMLAttr.Label "Helper text"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-with-placeholder"\r\n                HTMLAttr.Label "With placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-textarea"\r\n                HTMLAttr.Label "Multiline placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Multiline true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-number"\r\n                HTMLAttr.Label "Number"\r\n                HTMLAttr.Value this.state.age\r\n                HTMLAttr.Type "number"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                DOMAttr.OnChange this.handleAgeChange\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-search"\r\n                HTMLAttr.Label "Search field"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-select-currency"\r\n                HTMLAttr.Label "Select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> menuItem [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "filled-select-currency-native"\r\n                HTMLAttr.Label "Native select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    SelectProp.Native true\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> option [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "filled-full-width"\r\n                HTMLAttr.Label "Label"\r\n                Style [ CSSProp.Margin 8 ]\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                MaterialProp.FullWidth true\r\n                TextFieldProp.HelperText ("Full width!" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                // HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-bare"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Bare"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<TextFields,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.FilledInputAdornments\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n        Styles.Custom ("textField", [\r\n            CSSProp.FlexBasis 200\r\n        ])\r\n    ]\r\n\r\nlet ranges = [\r\n    "0-20", "0 to 20"\r\n    "21-50", "21 to 50"\r\n    "51-100", "51 to 100"\r\n]\r\n\r\ntype InputAdornmentsProps = {\r\n    amount : string\r\n    password : string\r\n    weight : string\r\n    weightRange : string\r\n    showPassword : bool\r\n}\r\n\r\ntype InputAdornments(p) =\r\n    inherit Component<IClassesProps, InputAdornmentsProps>(p)\r\n    do\r\n        base.setInitState {\r\n            amount = ""\r\n            password = ""\r\n            weight = ""\r\n            weightRange = ""\r\n            showPassword = false\r\n        }\r\n    member private this.handleWeightChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weight = value })\r\n    member private this.handleWeightRangeChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weightRange = value })\r\n    member private this.handleAmountChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with amount = value })\r\n    member private this.handlePasswordChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with password = value })\r\n    \r\n    member private this.handleClickShowPassword _ =\r\n        this.setState (fun s _ -> { s with showPassword = not s.showPassword })\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n\r\n        div [ Class !!classes?root ] [\r\n            textField [\r\n                HTMLAttr.Label "With filled TextField"\r\n                HTMLAttr.Id "filled-simple-start-adornment"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [ \r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                TextFieldProp.Select true\r\n                HTMLAttr.Label "With Select"\r\n                HTMLAttr.Value this.state.weightRange\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                DOMAttr.OnChange this.handleWeightRangeChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] (ranges |> List.map (fun (k,l) -> menuItem [ Prop.Key k; HTMLAttr.Value k] [ str l ]))\r\n            textField [\r\n                HTMLAttr.Id "filled-adornment-amount"\r\n                HTMLAttr.Value this.state.amount\r\n                HTMLAttr.Label "Amount"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                DOMAttr.OnChange this.handleAmountChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [ str "$" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-adornment-weight"\r\n                HTMLAttr.Value this.state.weight\r\n                HTMLAttr.Label "Weight"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                TextFieldProp.HelperText ("Weight" |> str |> U2.Case1 |> U3.Case1)\r\n                DOMAttr.OnChange this.handleWeightChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.End\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-adornment-password"\r\n                HTMLAttr.Value this.state.password\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Type (if this.state.showPassword then "text" else "password")\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                DOMAttr.OnChange this.handlePasswordChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.End\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [\r\n                            iconButton [\r\n                                HTMLAttr.Custom("aria-label", "Toggle password visibility")\r\n                                DOMAttr.OnClick this.handleClickShowPassword\r\n                            ] [\r\n                                icon [] [\r\n                                    str (if this.state.showPassword then "visibility_off"\r\n                                         else "visibility")\r\n                                ]\r\n                            ]\r\n                        ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<InputAdornments,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n\r\n'},function(e,t){e.exports='module Demos.TextFields.Input\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Input [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ]\r\n    ]\r\n\r\nlet inputTextFields (props : IClassesProps) =\r\n    let classes = props.classes\r\n\r\n    div [ Class !!classes?container ] [\r\n        input [\r\n            HTMLAttr.DefaultValue "Hello world"\r\n            HTMLAttr.Class !!classes?input\r\n            MaterialProp.InputProps [\r\n                HTMLAttr.Custom ("aria-label", "Description")\r\n            ]\r\n        ]\r\n        input [\r\n            HTMLAttr.Placeholder "Placeholder"\r\n            HTMLAttr.Class !!classes?input\r\n            MaterialProp.InputProps [\r\n                HTMLAttr.Custom ("aria-label", "Description")\r\n            ]\r\n        ]\r\n        input [\r\n            HTMLAttr.Value "Disabled"\r\n            HTMLAttr.Class !!classes?input\r\n            HTMLAttr.Disabled true\r\n            MaterialProp.InputProps [\r\n                HTMLAttr.Custom ("aria-label", "Description")\r\n            ]\r\n        ]\r\n        input [\r\n            HTMLAttr.DefaultValue "Error"\r\n            HTMLAttr.Class !!classes?input\r\n            MaterialProp.Error true\r\n            MaterialProp.InputProps [\r\n                HTMLAttr.Custom ("aria-label", "Description")\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] inputTextFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []'},function(e,t){e.exports='module Demos.TextFields.InputAdornments\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n        Styles.Custom ("withoutLabel", [\r\n            CSSProp.MarginTop (theme.spacing.unit * 3)\r\n        ])\r\n        Styles.Custom ("textField", [\r\n            CSSProp.FlexBasis 200\r\n        ])\r\n    ]\r\n\r\nlet ranges = [\r\n    "0-20", "0 to 20"\r\n    "21-50", "21 to 50"\r\n    "51-100", "51 to 100"\r\n]\r\n\r\ntype InputAdornmentsProps = {\r\n    amount : string\r\n    password : string\r\n    weight : string\r\n    weightRange : string\r\n    showPassword : bool\r\n}\r\n\r\ntype InputAdornments(p) =\r\n    inherit Component<IClassesProps, InputAdornmentsProps>(p)\r\n    do\r\n        base.setInitState {\r\n            amount = ""\r\n            password = ""\r\n            weight = ""\r\n            weightRange = ""\r\n            showPassword = false\r\n        }\r\n    member private this.handleWeightChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weight = value })\r\n    member private this.handleWeightRangeChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weightRange = value })\r\n    member private this.handleAmountChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with amount = value })\r\n    member private this.handlePasswordChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with password = value })\r\n    \r\n    member private this.handleClickShowPassword _ =\r\n        this.setState (fun s _ -> { s with showPassword = not s.showPassword })\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n\r\n        div [ Class !!classes?root ] [\r\n            textField [\r\n                HTMLAttr.Label "With normal TextField"\r\n                HTMLAttr.Id "simple-start-adornment"\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.Start ]\r\n                            [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                TextFieldProp.Select true\r\n                HTMLAttr.Label "With Select"\r\n                HTMLAttr.Value this.state.weightRange\r\n                DOMAttr.OnChange this.handleWeightRangeChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.Start ]\r\n                            [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] (ranges |> List.map (fun (k,l) -> menuItem [ Prop.Key k; HTMLAttr.Value k] [ str l ]))\r\n            formControl [\r\n                MaterialProp.FullWidth true\r\n                HTMLAttr.Class !!classes?margin\r\n            ] [\r\n                inputLabel [ HTMLAttr.HtmlFor "adornment-amount" ] [ str "Amount" ]\r\n                input [\r\n                    HTMLAttr.Id "adornment-amount"\r\n                    HTMLAttr.Value this.state.amount\r\n                    DOMAttr.OnChange this.handleAmountChange\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.Start ]\r\n                            [ str "$" ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ]\r\n            formControl [\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?withoutLabel, true\r\n                    !!classes?textField, true\r\n                ]\r\n                HTMLAttr.Custom("aria-describedby", "weight-helper-text")\r\n            ] [\r\n                input [\r\n                    HTMLAttr.Id "adornment-weight"\r\n                    HTMLAttr.Value this.state.weight\r\n                    DOMAttr.OnChange this.handleWeightChange\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.End ]\r\n                            [ str "Kg" ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                    MaterialProp.InputProps [ HTMLAttr.Custom ("aria-label", "Weight") ]\r\n                ]\r\n                formHelperText [ HTMLAttr.Id "weight-helper-text" ] [ str "Weight" ]\r\n            ]\r\n            formControl [\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n            ] [\r\n                inputLabel [ HTMLAttr.HtmlFor "adornment-password" ] [ str "Password" ]\r\n                input [\r\n                    HTMLAttr.Id "adornment-password"\r\n                    HTMLAttr.Type (if this.state.showPassword then "text" else "password")\r\n                    HTMLAttr.Value this.state.password\r\n                    DOMAttr.OnChange this.handlePasswordChange\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.End ]\r\n                            [\r\n                                iconButton [\r\n                                    HTMLAttr.Custom("aria-label", "Toggle password visibility")\r\n                                    DOMAttr.OnClick this.handleClickShowPassword\r\n                                ] [\r\n                                    icon [] [\r\n                                        str (if this.state.showPassword then "visibility_off"\r\n                                             else "visibility")\r\n                                    ]\r\n                                ]\r\n                             ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ]\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<InputAdornments,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.Layout\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("textField", [\r\n            CSSProp.MarginLeft theme.spacing.unit\r\n            CSSProp.MarginRight theme.spacing.unit\r\n            CSSProp.Width 200\r\n        ])\r\n    ]\r\n\r\nlet layoutTextFields (props : IClassesProps) =\r\n    let classes = props?classes\r\n\r\n    div [ Class !!classes?container ] [\r\n        textField [\r\n            HTMLAttr.Label "None"\r\n            HTMLAttr.Id "margin-none"\r\n            HTMLAttr.DefaultValue "Default value"\r\n            HTMLAttr.Class !!classes?textField\r\n            TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n        ] []\r\n        textField [\r\n            HTMLAttr.Label "Dense"\r\n            HTMLAttr.Id "margin-dense"\r\n            HTMLAttr.DefaultValue "Default value"\r\n            HTMLAttr.Class !!classes?textField\r\n            TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n            MaterialProp.Margin FormControlMargin.Dense\r\n        ] []\r\n        textField [\r\n            HTMLAttr.Label "Normal"\r\n            HTMLAttr.Id "margin-normal"\r\n            HTMLAttr.DefaultValue "Default value"\r\n            HTMLAttr.Class !!classes?textField\r\n            TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n            MaterialProp.Margin FormControlMargin.Normal\r\n        ] []\r\n    ]\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] layoutTextFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.Outlined\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("textField", [\r\n            CSSProp.MarginLeft theme.spacing.unit\r\n            CSSProp.MarginRight theme.spacing.unit\r\n            CSSProp.Width 200\r\n        ])\r\n        Styles.Dense [\r\n            CSSProp.MarginTop 19\r\n        ]\r\n        Styles.Custom("menu", [\r\n            CSSProp.Width 200\r\n        ])\r\n    ]\r\n\r\nlet currencies = [\r\n    ("$", "USD")\r\n    ("€", "EUR")\r\n    ("฿", "BTC")\r\n    ("¥", "JPY")\r\n]\r\n\r\ntype TextFieldState = {\r\n    name : string\r\n    age : string\r\n    multiline : string\r\n    currency : string\r\n}\r\n\r\ntype TextFields (p) =\r\n    inherit React.Component<IClassesProps,TextFieldState>(p)\r\n    do\r\n        base.setInitState {\r\n            name = "Cat in the Hat"\r\n            age = ""\r\n            multiline = "Controlled"\r\n            currency = "EUR"\r\n        }\r\n    \r\n    member private this.handleNameChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with name = value })\r\n    \r\n    member private this.handleMultilineChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with multiline = value })\r\n\r\n    member private this.handleAgeChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with age = value })\r\n    \r\n    member private this.handleCurrencyChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with currency = value })\r\n    \r\n    override this.render() =\r\n        form [\r\n            HTMLAttr.Class !!this.props.classes?container\r\n            HTMLAttr.NoValidate true\r\n            HTMLAttr.AutoComplete "off"\r\n        ] [\r\n            textField [\r\n                HTMLAttr.Id "outlined-name"\r\n                HTMLAttr.Label "Name"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Value this.state.name\r\n                DOMAttr.OnChange this.handleNameChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-uncontrolled"\r\n                HTMLAttr.Label "Uncontrolled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "foo"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-required"\r\n                HTMLAttr.Label "Required"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                HTMLAttr.Required true\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-error"\r\n                HTMLAttr.Label "Error"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                MaterialProp.Error true\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Disabled true\r\n                HTMLAttr.Id "outlined-disabled"\r\n                HTMLAttr.Label "Disabled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-email-input"\r\n                HTMLAttr.Label "Email"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "email"\r\n                HTMLAttr.AutoComplete "email"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-password-input"\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "password"\r\n                HTMLAttr.AutoComplete "current-password"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-read-only-input"\r\n                HTMLAttr.Label "Read Only"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                ChildrenProp.InputProps [\r\n                    HTMLAttr.ReadOnly true\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-dense"\r\n                HTMLAttr.Label "Dense"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                classList [\r\n                    (!!this.props.classes?textField, true)\r\n                    (!!this.props.classes?dense, true)\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Dense\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-multiline-flexible"\r\n                HTMLAttr.Label "Multiline"\r\n                MaterialProp.Multiline true\r\n                MaterialProp.RowsMax 4\r\n                HTMLAttr.Value this.state.multiline\r\n                DOMAttr.OnChange this.handleMultilineChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-multiline-static"\r\n                HTMLAttr.Label "Multiline"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Rows 4\r\n                MaterialProp.Multiline true\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-helperText"\r\n                HTMLAttr.Label "Helper text"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-with-placeholder"\r\n                HTMLAttr.Label "With placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-textarea"\r\n                HTMLAttr.Label "Multiline placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Multiline true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-number"\r\n                HTMLAttr.Label "Number"\r\n                HTMLAttr.Value this.state.age\r\n                HTMLAttr.Type "number"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                DOMAttr.OnChange this.handleAgeChange\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-search"\r\n                HTMLAttr.Label "Search field"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-select-currency"\r\n                HTMLAttr.Label "Select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> menuItem [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "outlined-select-currency-native"\r\n                HTMLAttr.Label "Native select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    SelectProp.Native true\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> option [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "outlined-full-width"\r\n                HTMLAttr.Label "Label"\r\n                Style [ CSSProp.Margin 8 ]\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                MaterialProp.FullWidth true\r\n                TextFieldProp.HelperText ("Full width!" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                // HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-bare"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Bare"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<TextFields,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.OutlinedInputAdornments\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n        Styles.Custom ("textField", [\r\n            CSSProp.FlexBasis 200\r\n        ])\r\n    ]\r\n\r\nlet ranges = [\r\n    "0-20", "0 to 20"\r\n    "21-50", "21 to 50"\r\n    "51-100", "51 to 100"\r\n]\r\n\r\ntype InputAdornmentsProps = {\r\n    amount : string\r\n    password : string\r\n    weight : string\r\n    weightRange : string\r\n    showPassword : bool\r\n}\r\n\r\ntype InputAdornments(p) =\r\n    inherit Component<IClassesProps, InputAdornmentsProps>(p)\r\n    do\r\n        base.setInitState {\r\n            amount = ""\r\n            password = ""\r\n            weight = ""\r\n            weightRange = ""\r\n            showPassword = false\r\n        }\r\n    member private this.handleWeightChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weight = value })\r\n    member private this.handleWeightRangeChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weightRange = value })\r\n    member private this.handleAmountChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with amount = value })\r\n    member private this.handlePasswordChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with password = value })\r\n    \r\n    member private this.handleClickShowPassword _ =\r\n        this.setState (fun s _ -> { s with showPassword = not s.showPassword })\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n\r\n        div [ Class !!classes?root ] [\r\n            textField [\r\n                HTMLAttr.Label "With outlined TextField"\r\n                HTMLAttr.Id "outlined-simple-start-adornment"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [ \r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                TextFieldProp.Select true\r\n                HTMLAttr.Label "With Select"\r\n                HTMLAttr.Value this.state.weightRange\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                DOMAttr.OnChange this.handleWeightRangeChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] (ranges |> List.map (fun (k,l) -> menuItem [ Prop.Key k; HTMLAttr.Value k] [ str l ]))\r\n            textField [\r\n                HTMLAttr.Id "outlined-adornment-amount"\r\n                HTMLAttr.Value this.state.amount\r\n                HTMLAttr.Label "Amount"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                DOMAttr.OnChange this.handleAmountChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [ str "$" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-adornment-weight"\r\n                HTMLAttr.Value this.state.weight\r\n                HTMLAttr.Label "Weight"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                TextFieldProp.HelperText ("Weight" |> str |> U2.Case1 |> U3.Case1)\r\n                DOMAttr.OnChange this.handleWeightChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.End\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-adornment-password"\r\n                HTMLAttr.Value this.state.password\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Type (if this.state.showPassword then "text" else "password")\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                DOMAttr.OnChange this.handlePasswordChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.End\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [\r\n                            iconButton [\r\n                                HTMLAttr.Custom("aria-label", "Toggle password visibility")\r\n                                DOMAttr.OnClick this.handleClickShowPassword\r\n                            ] [\r\n                                icon [] [\r\n                                    str (if this.state.showPassword then "visibility_off"\r\n                                         else "visibility")\r\n                                ]\r\n                            ]\r\n                        ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<InputAdornments,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n\r\n'},function(e,t){e.exports='module Demos.TextFields.TextField\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("textField", [\r\n            CSSProp.MarginLeft theme.spacing.unit\r\n            CSSProp.MarginRight theme.spacing.unit\r\n            CSSProp.Width 200\r\n        ])\r\n        Styles.Dense [\r\n            CSSProp.MarginTop 19\r\n        ]\r\n        Styles.Custom("menu", [\r\n            CSSProp.Width 200\r\n        ])\r\n    ]\r\n\r\nlet currencies = [\r\n    ("$", "USD")\r\n    ("€", "EUR")\r\n    ("฿", "BTC")\r\n    ("¥", "JPY")\r\n]\r\n\r\ntype TextFieldState = {\r\n    name : string\r\n    age : string\r\n    multiline : string\r\n    currency : string\r\n}\r\n\r\ntype TextFields (p) =\r\n    inherit React.Component<IClassesProps,TextFieldState>(p)\r\n    do\r\n        base.setInitState {\r\n            name = "Cat in the Hat"\r\n            age = ""\r\n            multiline = "Controlled"\r\n            currency = "EUR"\r\n        }\r\n    \r\n    member private this.handleNameChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with name = value })\r\n    \r\n    member private this.handleMultilineChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with multiline = value })\r\n\r\n    member private this.handleAgeChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with age = value })\r\n    \r\n    member private this.handleCurrencyChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with currency = value })\r\n    \r\n    override this.render() =\r\n        form [\r\n            HTMLAttr.Class !!this.props.classes?container\r\n            HTMLAttr.NoValidate true\r\n            HTMLAttr.AutoComplete "off"\r\n        ] [\r\n            textField [\r\n                HTMLAttr.Id "standard-name"\r\n                HTMLAttr.Label "Name"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Value this.state.name\r\n                DOMAttr.OnChange this.handleNameChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-uncontrolled"\r\n                HTMLAttr.Label "Uncontrolled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "foo"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-required"\r\n                HTMLAttr.Label "Required"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                HTMLAttr.Required true\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-error"\r\n                HTMLAttr.Label "Error"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                MaterialProp.Error true\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Disabled true\r\n                HTMLAttr.Id "standard-disabled"\r\n                HTMLAttr.Label "Disabled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-password-input"\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "password"\r\n                HTMLAttr.AutoComplete "current-password"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-read-only-input"\r\n                HTMLAttr.Label "Read Only"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.InputProps [\r\n                    HTMLAttr.ReadOnly true\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-dense"\r\n                HTMLAttr.Label "Dense"\r\n                classList [\r\n                    (!!this.props.classes?textField, true)\r\n                    (!!this.props.classes?dense, true)\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Dense\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-multiline-flexible"\r\n                HTMLAttr.Label "Multiline"\r\n                MaterialProp.Multiline true\r\n                MaterialProp.RowsMax 4\r\n                HTMLAttr.Value this.state.multiline\r\n                DOMAttr.OnChange this.handleMultilineChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-multiline-static"\r\n                HTMLAttr.Label "Multiline"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Rows 4\r\n                MaterialProp.Multiline true\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-helperText"\r\n                HTMLAttr.Label "Helper text"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-with-placeholder"\r\n                HTMLAttr.Label "With placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-textarea"\r\n                HTMLAttr.Label "With placeholder multiline"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Multiline true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-number"\r\n                HTMLAttr.Label "Number"\r\n                HTMLAttr.Value this.state.age\r\n                HTMLAttr.Type "number"\r\n                DOMAttr.OnChange this.handleAgeChange\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-search"\r\n                HTMLAttr.Label "Search field"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-select-currency"\r\n                HTMLAttr.Label "Select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> menuItem [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "standard-select-currency-native"\r\n                HTMLAttr.Label "Native select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    SelectProp.Native true\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> option [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "standard-full-width"\r\n                HTMLAttr.Label "Label"\r\n                Style [ CSSProp.Margin 8 ]\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                MaterialProp.FullWidth true\r\n                TextFieldProp.HelperText ("Full width!" |> str |> U2.Case1 |> U3.Case1)\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-bare"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Bare"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<TextFields,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.WithIcon\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Custom("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n    ]\r\n\r\nlet inputWithIcon (props : IClassesProps) =\r\n    let classes = props.classes\r\n\r\n    div [] [\r\n        formControl [ Class !!classes?margin ] [\r\n            inputLabel [ HTMLAttr.HtmlFor "input-with-icon-adornment" ] [\r\n                str "With a start adornment"\r\n            ]\r\n            input [ \r\n                HTMLAttr.Id "input-with-icon-adornment"\r\n                InputProp.StartAdornment (\r\n                    inputAdornment [ InputAdornmentProp.Position InputAdornmentPosition.Start ] [\r\n                        icon [] [ str "account_circle" ]\r\n                    ] |> U2.Case1 |> U3.Case1\r\n                )\r\n            ]\r\n        ]\r\n        textField [\r\n            HTMLAttr.Class !!classes?margin\r\n            HTMLAttr.Id "input-with-icon-textfield"\r\n            HTMLAttr.Label "TextField"\r\n            ChildrenProp.InputProps [\r\n                InputProp.StartAdornment (\r\n                    inputAdornment [ InputAdornmentProp.Position InputAdornmentPosition.Start ] [\r\n                        icon [] [ str "account_circle" ]\r\n                    ] |> U2.Case1 |> U3.Case1\r\n                )\r\n            ]\r\n        ] []\r\n        div [ Class !!classes?margin ] [\r\n            grid [\r\n                GridProp.Container true\r\n                GridProp.Spacing GridSpacing.``8``\r\n                GridProp.AlignItems GridAlignItems.FlexEnd\r\n            ] [\r\n                grid [ GridProp.Item true ] [\r\n                    icon [] [ str "account_circle" ]\r\n                ]\r\n                grid [ GridProp.Item true ] [\r\n                    textField [\r\n                        HTMLAttr.Id "input-with-icon-grid"\r\n                        HTMLAttr.Label "With a grid"\r\n                    ] []\r\n                ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] inputWithIcon\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []'},function(e,t){e.exports='module GettingStarted.Installation.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Components\r\n\r\nlet text = importDefault "./Installation.md"\r\n\r\nlet root () =\r\n    Markdown.view text'},function(e,t){e.exports='module GettingStarted.MigrationToV2.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Components\r\n\r\nlet text = importDefault "./MigrationToV2.md"\r\n\r\nlet root () =\r\n    Markdown.view text\r\n'},function(e,t){e.exports='module GettingStarted.Usage.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Components\r\n\r\nlet text = importDefault "./Usage.md"\r\n\r\nlet root () =\r\n    Markdown.view text\r\n'},function(e,t){e.exports='module Global\r\n\r\nlet [<Literal>] libVersion = "v2.2.0"\r\n\r\ntype Page =\r\n    | Home\r\n    | Installation\r\n    | Usage\r\n    | MigrationToV2\r\n    | AppBar\r\n    | Avatars\r\n    | Buttons\r\n    | TextFields\r\n    | SignIn\r\n    | Overrides\r\n    | Themes\r\n    | CssInJs\r\n    | DefaultTheme\r\n    // TODO Add other demos\r\n\r\ntype NavItem = {\r\n    Title : string\r\n    Children : NavItem list\r\n    Href : Page option\r\n}\r\n\r\nlet toHash page =\r\n    match page with\r\n    | Home -> "#/home"\r\n    | Installation -> "#/getting-started/installation"\r\n    | Usage -> "#/getting-started/usage"\r\n    | MigrationToV2 -> "#/getting-started/migration-to-v2"\r\n    | AppBar -> "#/demos/app-bar"\r\n    | Avatars -> "#/demos/avatars"\r\n    | Buttons -> "#/demos/buttons"\r\n    | TextFields -> "#/demos/text-fields"\r\n    | SignIn -> "#/pagelayout/signin"\r\n    | Overrides -> "#/customization/overrides"\r\n    | Themes -> "#/customization/themes"\r\n    | CssInJs -> "#/customization/css-in-js"\r\n    | DefaultTheme -> "#/customization/default-theme"\r\n\r\nlet toTitle = function\r\n    | Home -> ""\r\n    | Installation -> "Installation"\r\n    | Usage -> "Usage"\r\n    | MigrationToV2 -> "Migration to version 2"\r\n    | AppBar -> "App Bar"\r\n    | Avatars -> "Avatars"\r\n    | Buttons -> "Buttons"\r\n    | TextFields -> "Text Fields"\r\n    | SignIn -> "Sign-in"\r\n    | Overrides -> "Overrides"\r\n    | Themes -> "Themes"\r\n    | CssInJs -> "Css in JS (F#)"\r\n    | DefaultTheme -> "Default Theme"\r\n'},function(e,t){e.exports='module Home.View\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nopen App.Types\r\nopen Components\r\nopen Global\r\nopen Utils\r\nopen Fable.Import\r\n\r\nmodule Mui = Fable.Helpers.MaterialUI\r\n\r\nlet homeStyles (theme : ITheme) : IStyles list =\r\n    let xsBreakpoint = theme.breakpoints.only MaterialSize.Xs\r\n    let smBreakpoint = theme.breakpoints.only MaterialSize.Sm\r\n    [\r\n        Styles.Custom ("hero", [\r\n            MinHeight "80vh"\r\n            Flex "0 0 auto"\r\n            Display "flex"\r\n            JustifyContent "center"\r\n            CSSProp.AlignItems "center"\r\n            BackgroundColor theme.palette.background.paper\r\n            CSSProp.Color theme.palette.primary.dark\r\n        ])\r\n        Styles.Text [\r\n            Display "flex"\r\n            FlexDirection "column"\r\n            JustifyContent "center"\r\n            CSSProp.AlignItems "center"\r\n        ]\r\n        Styles.Title [\r\n            CSSProp.LetterSpacing ".2rem"\r\n            CSSProp.TextIndent ".7rem"\r\n            CSSProp.FontWeight theme.typography.fontWeightLight\r\n            CSSProp.WhiteSpace "nowrap"\r\n            customCss xsBreakpoint [\r\n                CSSProp.FontSize 28\r\n            ]\r\n        ]\r\n        Styles.Headline [\r\n            PaddingLeft (theme.spacing.unit * 4)\r\n            PaddingRight (theme.spacing.unit * 4)\r\n            MarginTop theme.spacing.unit\r\n            CSSProp.MaxWidth 500\r\n            TextAlign "center"\r\n        ]\r\n        Styles.Content [\r\n            PaddingBottom (theme.spacing.unit * 8)\r\n            PaddingTop (theme.spacing.unit * 8)\r\n            customCss smBreakpoint [\r\n                PaddingTop (theme.spacing.unit * 12)\r\n            ]\r\n        ]\r\n        Styles.Button [\r\n            MarginTop (theme.spacing.unit * 3)\r\n        ]\r\n        Styles.Custom ("logo", [\r\n            CSSProp.MarginTop (theme.spacing.unit * 3)\r\n            CSSProp.MarginRight 0\r\n            CSSProp.MarginLeft 0\r\n            CSSProp.MarginBottom (theme.spacing.unit * 4)\r\n            Width "100%"\r\n            Height "35vw"\r\n            MaxHeight 200\r\n        ])\r\n        Styles.Custom ("support", [\r\n            CSSProp.TextAlign "center"\r\n            CSSProp.MarginBottom 30\r\n        ])\r\n    ]\r\n\r\n\r\ntype HomeProps =\r\n    abstract member dispatch : (Msg->unit) with get,set\r\n    inherit Mui.IClassesProps\r\n\r\n\r\ntype HomeClasses =\r\n    abstract member hero : string\r\n    abstract member content : string\r\n    abstract member logo : string\r\n    abstract member text : string\r\n    abstract member title : string\r\n    abstract member headline : string\r\n    abstract member button : string\r\n    abstract member support: string\r\n    inherit Mui.IClasses\r\n\r\nlet supportText = importDefault "./Support.md"\r\nlet logo = importDefault "../../public/img/fable-material-ui-logo.svg"\r\n\r\nlet home (props : HomeProps) =\r\n    let classes : HomeClasses = !!props.classes\r\n    fragment [] [\r\n        div [ Class classes.hero ] [\r\n            div [ Class classes.content ] [\r\n                img [\r\n                    Src logo\r\n                    Alt "Fable Material-UI Logo"\r\n                    Class classes.logo\r\n                ]\r\n                div [ Class classes.text ] [\r\n                    typography [\r\n                        TypographyProp.Variant TypographyVariant.H3\r\n                        TypographyProp.Align TypographyAlign.Center\r\n                        MaterialProp.Component ("h1" |> U3.Case1)\r\n                        TypographyProp.Color TypographyColor.Inherit\r\n                        TypographyProp.GutterBottom true\r\n                        Class classes.title\r\n                    ] [ str "FABLE MATERIAL-UI" ]\r\n                    typography [\r\n                        TypographyProp.Variant TypographyVariant.H5\r\n                        MaterialProp.Component ("h2" |> U3.Case1)\r\n                        TypographyProp.Color TypographyColor.Inherit\r\n                        TypographyProp.GutterBottom true\r\n                        Class classes.headline\r\n                    ] [ str "Fable bindings for Material-UI React components"]\r\n                    Mui.button [\r\n                        MaterialProp.Component ("a" |> U3.Case1)\r\n                        Href ("/" + toHash Installation)\r\n                        Class classes.button\r\n                        ButtonProp.Variant ButtonVariant.Outlined\r\n                        MaterialProp.Color ComponentColor.Primary\r\n                    ] [ str "Get Started" ]\r\n                ]\r\n            ]\r\n        ]\r\n        div [ Class classes.support ] [\r\n            Markdown.view supportText\r\n        ]\r\n    ]\r\n\r\nlet homeWithStyles = Mui.withStyles (StyleType.Func homeStyles) [] home\r\n\r\nlet root dispatch =\r\n    let props = createEmpty<HomeProps>\r\n    props.dispatch <- dispatch\r\n    from homeWithStyles props []\r\n'},function(e,t){e.exports='module Import.Marked\r\nopen Fable.Core\r\n\r\ntype MarkedOptions =\r\n    abstract member baseUrl : string with get,set\r\n    abstract member breaks : bool with get,set\r\n    abstract member gfm : bool with get,set\r\n    abstract member headerIds : bool with get,set\r\n    abstract member highlight : (string->string->string) with get,set\r\n    abstract member langPrefix : string with get,set\r\n    abstract member mangle : bool with get,set\r\n    abstract member pedantic : bool with get,set\r\n    abstract member renderer : obj with get,set\r\n    abstract member sanitize : bool with get,set\r\n    abstract member santitizer : (string->string) with get,set\r\n    abstract member silent : bool with get,set\r\n    abstract member smartLists : bool with get,set\r\n    abstract member smartypants : bool with get,set\r\n    abstract member tables : bool with get,set\r\n    abstract member xhtml : bool with get,set\r\n\r\ntype [<AbstractClass>] Marked =\r\n    [<Import("default", "marked")>]\r\n    static member marked ((markdownString : string), (?options : MarkedOptions), (?callback : (string->obj->unit))) : string =\r\n        jsNative\r\n\r\n\r\n'},function(e,t){e.exports='module Import.Prism\r\n\r\nopen Fable.Core.JsInterop\r\n\r\ntype Prism =\r\n    abstract highlight: text: string * grammar: obj -> string\r\n    abstract member languages: obj\r\n\r\nlet prism : Prism = importDefault "prismjs"\r\n'},function(e,t){e.exports='module Layout.AppBar\r\n\r\nopen Elmish.React\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nopen App.Types\r\nopen Global\r\nopen Utils\r\n\r\nmodule Mui = Fable.Helpers.MaterialUI\r\nmodule MProps = Fable.MaterialUI.Props\r\n\r\nlet githubIcon =\r\n    Mui.svgIcon [] [\r\n        path [\r\n            SVGAttr.D "M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3"\r\n        ] []\r\n    ]\r\n\r\nlet menuButton model dispatch =\r\n    let button =\r\n        Mui.iconButton [\r\n            IconProp.Color IconColor.Inherit\r\n            OnClick (fun _ -> OpenMenu true |> dispatch)\r\n        ] [ Mui.icon [] [ str "menu" ] ]\r\n    match model.isLanding with\r\n    | false -> Mui.hidden [ LgUp true ] [ button ]\r\n    | _ -> button\r\n\r\nlet appBarStyles (theme : ITheme) : IStyles list =\r\n    let lgBreakpoint = theme.breakpoints.up(MaterialSize.Lg |> U2.Case1)\r\n    [\r\n        Styles.Custom ("appBar", [\r\n            customCss lgBreakpoint [\r\n                Left 250\r\n                Width "calc(100% - 250px)"\r\n            ]\r\n        ])\r\n        Styles.Custom ("landingAppBar", [\r\n            Left 0\r\n            Width "100vw"\r\n            BoxShadow "unset"\r\n        ])\r\n    ]\r\n\r\n\r\ntype AppBarClasses =\r\n    abstract member appBar : string\r\n    abstract member landingAppBar : string\r\n\r\nlet appBar (props : AppProps) =\r\n    let classes : AppBarClasses = !!props.classes\r\n    Mui.appBar [\r\n        MProps.Position AppBarPosition.Fixed\r\n        Class ([(classes.appBar, true); (classes.landingAppBar, props.model.isLanding)] |> classNames)\r\n    ] [\r\n        Mui.toolbar [] [\r\n            lazyView2 menuButton props.model props.dispatch\r\n            Mui.typography [\r\n                TypographyProp.Variant TypographyVariant.H6\r\n                MaterialProp.Color ComponentColor.Inherit\r\n            ] [ props.model.currentPage |> toTitle |> str ]\r\n            div [ Class "flex" ] []\r\n            Mui.tooltip [\r\n                TooltipProp.Title ((str "Github") |> U2.Case1 |> U3.Case1)\r\n                TooltipProp.EnterDelay 300\r\n            ] [\r\n                Mui.iconButton [\r\n                    IconProp.Color IconColor.Inherit\r\n                    MaterialProp.Component ("a" |> U3.Case1)\r\n                    Target "_blank"\r\n                    Href "https://github.com/mvsmal/fable-material-ui"\r\n                ] [ githubIcon ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet appBarWithStyles = Mui.withStyles (StyleType.Func appBarStyles) [] appBar\r\n\r\nlet view model dispatch =\r\n    let props = createEmpty<AppProps>\r\n    props.model <- model\r\n    props.dispatch <- dispatch\r\n    from appBarWithStyles props []\r\n'},function(e,t){e.exports="module Layout.Drawer\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nopen App.Types\r\nopen Global\r\nopen Elmish.React.Common\r\n\r\nmodule Mui = Fable.Helpers.MaterialUI\r\n\r\nlet drawerStyles : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            Width 250\r\n        ]\r\n    ]\r\n\r\n\r\ntype AppDrawerProps =\r\n    abstract member isLanding: bool with get,set\r\n    abstract member currentPage: Page with get,set\r\n    abstract member menuOpen: bool with get,set\r\n    abstract member dispatch: (Msg->unit) with get,set\r\n    inherit Mui.IClassesProps\r\n\r\n\r\nlet drawer (props : AppDrawerProps) =\r\n    nav [] [\r\n        yield Mui.hidden [\r\n            LgUp (not props.isLanding)\r\n            Implementation HiddenImplementation.Js\r\n        ] [\r\n            Mui.swipeableDrawer [\r\n                DrawerProp.Variant DrawerVariant.Temporary\r\n                MaterialProp.Open props.menuOpen\r\n                MaterialProp.OnOpen (fun _ -> OpenMenu true |> props.dispatch)\r\n                MaterialProp.OnClose (fun _ -> OpenMenu false |> props.dispatch)\r\n                ModalProps [ KeepMounted true ]\r\n            ] [\r\n                lazyView2 Layout.Menu.view props.currentPage props.dispatch ]\r\n        ]\r\n        if not props.isLanding then\r\n            yield Mui.hidden [\r\n                MdDown true\r\n                Implementation HiddenImplementation.Js\r\n            ] [\r\n                Mui.drawer [\r\n                    DrawerProp.Variant DrawerVariant.Permanent\r\n                    MaterialProp.Open true\r\n                    Class !!props.classes?root\r\n                ] [\r\n                    lazyView2 Layout.Menu.view props.currentPage props.dispatch ]\r\n            ]\r\n    ]\r\n\r\nlet drawerWithStyles = Mui.withStyles (StyleType.Styles drawerStyles) [] drawer\r\n\r\nlet view (model : Model) dispatch =\r\n    let props = createEmpty<AppDrawerProps>\r\n    props.currentPage <- model.currentPage\r\n    props.isLanding <- model.isLanding\r\n    props.menuOpen <- model.menuOpen\r\n    props.dispatch <- dispatch\r\n    from drawerWithStyles props []\r\n"},function(e,t){e.exports='module Layout.Layout\r\n\r\nopen Elmish.React\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI\r\n\r\nopen App.Types\r\nopen Global\r\nopen Utils\r\n\r\nmodule Mui = Fable.Helpers.MaterialUI\r\n\r\nlet theme =\r\n    Mui.createMuiTheme [\r\n        Typography [\r\n            UseNextVariants true\r\n        ]\r\n        ThemeProp.Palette [\r\n            PaletteProp.Type PaletteType.Light\r\n            PaletteProp.Primary [\r\n                PaletteIntentionProp.Main Colors.blue.``500``\r\n            ]\r\n            PaletteProp.Secondary [\r\n                PaletteIntentionProp.Main\r\n                    (Mui.ColorManipulator.darken (Colors.pink.A400, 0.08))\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet layoutStyles (theme : ITheme) : IStyles list=\r\n    let lgBreakpoint = theme.breakpoints.up(MaterialSize.Lg |> U2.Case1)\r\n    let smBreakpoint = theme.breakpoints.up(MaterialSize.Sm |> U2.Case1)\r\n    [\r\n        Styles.Root [\r\n            Display "flex"\r\n            PaddingBottom 40\r\n        ]\r\n        Styles.Custom ("menuButton", [\r\n            MarginLeft -12\r\n            MarginRight 20\r\n        ])\r\n        Styles.Custom ("main", [\r\n            PaddingTop 80\r\n            Flex "1 1 100%"\r\n            CSSProp.MaxWidth "100%"\r\n            CSSProp.Margin "0 auto"\r\n            CSSProp.PaddingLeft (theme.spacing.unit * 2)\r\n            CSSProp.PaddingRight (theme.spacing.unit * 2)\r\n            CSSProp.FontFamily theme.typography.fontFamily\r\n            CSSProp.FontSize 16\r\n            CSSProp.Color theme.palette.text.primary\r\n            customCss smBreakpoint [\r\n                PaddingLeft (theme.spacing.unit * 4)\r\n                PaddingRight (theme.spacing.unit * 4)\r\n            ]\r\n            customCss lgBreakpoint [\r\n                PaddingLeft (theme.spacing.unit * 5)\r\n                PaddingRight (theme.spacing.unit * 9)\r\n                CSSProp.MaxWidth "calc(100% - 250px)"\r\n            ]\r\n        ])\r\n        Styles.Custom ("landingMain", [\r\n            CSSProp.Padding 0\r\n            CSSProp.MaxWidth "100vw"\r\n            MarginLeft 0\r\n        ])\r\n]\r\n\r\ntype LayoutClasses =\r\n    abstract member main : string\r\n    abstract member landingMain : string\r\n    abstract member root : string\r\n    inherit Mui.IClasses\r\n\r\nlet layout (props : AppProps) =\r\n    let content = function\r\n        | Page.Home -> Home.View.root props.dispatch\r\n        | Page.Installation -> GettingStarted.Installation.View.root ()\r\n        | Page.MigrationToV2 -> GettingStarted.MigrationToV2.View.root ()\r\n        | Page.Usage -> GettingStarted.Usage.View.root ()\r\n        | Page.AppBar -> Demos.AppBar.View.view ()\r\n        | Page.Avatars -> Demos.Avatars.View.root ()\r\n        | Page.Buttons -> Demos.Buttons.View.view ()\r\n        | Page.TextFields -> Demos.TextFields.View.view ()\r\n        | Page.SignIn -> PageLayoutDemos.SignIn.root ()\r\n        | Page.Overrides -> Customization.Overrides.View.view ()\r\n        | Page.Themes -> Customization.Themes.View.view ()\r\n        | Page.CssInJs -> Customization.CssInJs.View.view ()\r\n        | Page.DefaultTheme -> Customization.DefaultTheme.View.view ()\r\n\r\n    let classes : LayoutClasses = !!props.classes\r\n    let mainClasses =\r\n        [\r\n            (classes.main, true)\r\n            (classes.landingMain, props.model.isLanding)\r\n        ] |> classNames\r\n    Mui.muiThemeProvider [MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n        div [ Class classes.root ] [\r\n            lazyView2 Layout.AppBar.view props.model props.dispatch\r\n            lazyView2 Layout.Drawer.view props.model props.dispatch\r\n            main [ Class mainClasses ] [ content props.model.currentPage ]\r\n        ]\r\n    ]\r\n\r\nlet layoutWithStyles = Mui.withStyles (StyleType.Func layoutStyles) [] layout\r\n\r\nlet view model dispatch =\r\n    let props = createEmpty<AppProps>\r\n    props.model <- model\r\n    props.dispatch <- dispatch\r\n    from layoutWithStyles props []\r\n'},function(e,t){e.exports='module Layout.Menu\r\n\r\nopen Elmish.React.Common\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nopen App.Types\r\nopen Global\r\nopen Utils\r\n\r\nmodule Mui = Fable.Helpers.MaterialUI\r\n\r\n\r\ntype MenuClasses =\r\n    abstract member root: string\r\n    abstract member toolbar: string\r\n    abstract member headerLink: string\r\n    abstract member title: string\r\n    inherit Mui.IClasses\r\n\r\n\r\ntype MenuProps =\r\n    abstract member currentPage : Page with get, set\r\n    abstract member dispatch : (Msg->unit) with get,set\r\n    inherit Mui.IClassesProps\r\n\r\nlet menuStyles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Title [\r\n            CSSProp.Color theme.palette.text.secondary\r\n            CSSProp.MarginBottom (theme.spacing.unit / 2)\r\n        ]\r\n        Styles.Root [ Width 250 ]\r\n        Styles.Custom ("toolbar", [\r\n            Display "flex"\r\n            FlexDirection "column"\r\n            JustifyContent "center"\r\n            CSSProp.AlignItems "flex-start"\r\n        ])\r\n        Styles.Custom ("headerLink", [\r\n            CSSProp.Transition "color .2s ease-in-out"\r\n            customCss "&:hover" [\r\n                CSSProp.Color theme.palette.primary.main\r\n                TextDecoration "underline"\r\n            ]\r\n        ])\r\n    ]\r\nlet menu (props : MenuProps) =\r\n    let classes : MenuClasses = !!props.classes\r\n    div [ Class classes.root ] [\r\n        Mui.toolbar [ Class classes.toolbar ] [\r\n            a [\r\n                Class classes.title\r\n                Href (toHash Home)\r\n                OnClick (fun _ -> OpenMenu false |> props.dispatch)\r\n            ] [\r\n                Mui.typography\r\n                    [ TypographyProp.Variant TypographyVariant.H6\r\n                      Class classes.headerLink\r\n                      TypographyProp.Color TypographyColor.Inherit ]\r\n                    [ str "Fable Material-UI" ]\r\n            ]\r\n            a [\r\n                Target "_blank"\r\n                Rel "noopener noreferrer"\r\n                Href "https://github.com/mvsmal/fable-material-ui/releases"\r\n            ] [\r\n                Mui.typography\r\n                    [ TypographyProp.Variant TypographyVariant.Caption\r\n                      Class classes.headerLink ]\r\n                    [ str libVersion ]\r\n            ]\r\n        ]\r\n        Mui.divider []\r\n        lazyView2 Layout.Navigation.view props.currentPage props.dispatch\r\n    ]\r\n\r\nlet menuWithStyles<\'a> = Mui.withStyles (StyleType.Func menuStyles) [] menu\r\n\r\nlet view currentPage dispatch =\r\n    let props = createEmpty<MenuProps>\r\n    props.currentPage <- currentPage\r\n    props.dispatch <- dispatch\r\n    from menuWithStyles props []\r\n'},function(e,t){e.exports='module Layout.Navigation\r\n\r\nopen Global\r\n\r\nmodule Mui = Fable.Helpers.MaterialUI\r\nmodule MColors = Fable.MaterialUI.Colors\r\n\r\nlet navItems = [\r\n    {\r\n        Title = "Getting Started"\r\n        Href = None\r\n        Children =\r\n            [\r\n                { Title = "Installation"; Href = Some Page.Installation; Children = [] }\r\n                { Title = "Usage"; Href = Some Page.Usage; Children = [] }\r\n                { Title = "Migration to version 2"; Href = Some Page.MigrationToV2; Children = [] }\r\n            ]\r\n    }\r\n    {\r\n        Title = "Component demos"\r\n        Href = None\r\n        Children =\r\n            [\r\n                { Title = "App Bar"; Href = Some Page.AppBar; Children = [] }\r\n                { Title = "Buttons"; Href = Some Page.Buttons; Children = [] }\r\n                { Title = "Text Fields"; Href = Some Page.TextFields; Children = [] }\r\n                // { Title = "Avatars"; Href = Some Page.Avatars; Children = [] }\r\n            ]\r\n    }\r\n    {\r\n        Title = "Customization"\r\n        Href = None\r\n        Children =\r\n            [\r\n                { Title = "Themes"; Href = Some Page.Themes; Children = [] }\r\n                { Title = "Overrides"; Href = Some Page.Overrides; Children = [] }\r\n                { Title = "CSS in JS (F#)"; Href = Some Page.CssInJs; Children = [] }\r\n                { Title = "Default Theme"; Href = Some Page.DefaultTheme; Children = [] }\r\n            ]\r\n    }\r\n    {\r\n        Title = "Page layout demos"\r\n        Href = None\r\n        Children =\r\n            [\r\n                { Title = "Sign-in"; Href = Some Page.SignIn; Children = [] }\r\n            ]\r\n    }\r\n]\r\n\r\nlet rec mapNavigation currentPage dispatch (depth: int) =\r\n    fun item ->\r\n        let opened =\r\n            if not (item.Children |> List.isEmpty)\r\n            then item.Children |> List.exists (fun i -> i.Href = Some currentPage)\r\n            else false\r\n        let childItems = item.Children |> List.map (mapNavigation currentPage dispatch (depth + 1))\r\n        Layout.NavigationItem.view item depth opened currentPage childItems dispatch\r\n\r\nlet view currentPage dispatch =\r\n    Mui.list [] (navItems |> List.map (mapNavigation currentPage dispatch 0))\r\n\r\n'},function(e,t){e.exports='module Layout.NavigationItem\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Import.React\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\n\r\nopen App.Types\r\nopen Global\r\nopen Utils\r\n\r\nmodule Mui = Fable.Helpers.MaterialUI\r\n\r\nlet subNavStyles (theme: ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [\r\n            CSSProp.JustifyContent "flex-start"\r\n            CSSProp.LetterSpacing 0\r\n            CSSProp.PaddingLeft 24\r\n            CSSProp.TextTransform "none"\r\n            CSSProp.Width "100%"\r\n            CSSProp.FontWeight theme.typography.fontWeightMedium\r\n        ]\r\n        Styles.Custom ("collapse", [\r\n            CSSProp.Padding 0\r\n            CSSProp.Margin 0\r\n        ])\r\n    ]\r\n\r\n\r\ntype SubNavProps =\r\n    abstract member title: string with get, set\r\n    abstract member opened: bool with get, set\r\n    abstract member childItems: ReactElement list with get, set\r\n    inherit Mui.IClassesProps\r\n\r\n\r\ntype SubNavState = {\r\n    opened: bool\r\n}\r\n\r\ntype SubNav (p) =\r\n    inherit PureComponent<SubNavProps,SubNavState>(p)\r\n    do\r\n        base.setInitState { opened = p.opened }\r\n    member this.Toggle _ =\r\n        this.setState (fun s p -> { s with opened = not s.opened })\r\n\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n        fragment [] [\r\n            Mui.button [\r\n                OnClick this.Toggle\r\n                MaterialProp.Classes [ ClassNames.Root !!classes?button ]\r\n            ] [ str this.props.title ]\r\n            Mui.collapse [\r\n                In this.state.opened\r\n                UnmountOnExit true\r\n                Class !!classes?collapse\r\n            ] [\r\n                Mui.list [] this.props.childItems ]\r\n        ]\r\n\r\nlet subNav props =\r\n    ofType<SubNav, SubNavProps, SubNavState> props []\r\nlet subNavWithStyles<\'a> = Mui.withStyles (StyleType.Func subNavStyles) [] subNav\r\n\r\nlet navItemStyles (theme: ITheme) : IStyles list =\r\n    [\r\n        Styles.Custom ("listItem", [\r\n            CSSProp.Display "block"\r\n            CSSProp.PaddingTop 0\r\n            CSSProp.PaddingBottom 0\r\n        ])\r\n        Styles.Custom ("bold", [\r\n            CSSProp.FontWeight 500\r\n        ])\r\n        Styles.Button [\r\n            CSSProp.JustifyContent "flex-start"\r\n            CSSProp.LetterSpacing 0\r\n            CSSProp.TextTransform "none"\r\n            CSSProp.Width "100%"\r\n            CSSProp.FontWeight theme.typography.fontWeightRegular\r\n        ]\r\n        Styles.Selected [\r\n            CSSProp.Color theme.palette.primary.main\r\n            CSSProp.FontWeight theme.typography.fontWeightMedium\r\n        ]\r\n    ]\r\n\r\n\r\ntype NavItemProps =\r\n    abstract member title : string with get,set\r\n    abstract member href : Page option with get,set\r\n    abstract member depth : int with get,set\r\n    abstract member currentPage : Page with get,set\r\n    abstract member opened : bool with get,set\r\n    abstract member childItems : ReactElement list with get,set\r\n    abstract member dispatch : (Msg->unit) with get,set\r\n    inherit Mui.IClassesProps\r\n\r\nlet navItem (props : NavItemProps) =\r\n    let style = [ CSSProp.PaddingLeft (8 * (3 + 2 * props.depth)) ]\r\n    match props.href with\r\n    | Some page ->\r\n        let buttonClasses =\r\n            [ (!!props.classes?selected, props.currentPage = page) ] |> classNames\r\n        Mui.listItem [\r\n            DisableGutters true\r\n            Class !!props.classes?listItem\r\n        ] [\r\n            Mui.button [\r\n                DisableRipple true\r\n                MaterialProp.Component ("a" |> U3.Case1)\r\n                Style style\r\n                Class buttonClasses\r\n                MaterialProp.Classes [ ClassNames.Root !!props.classes?button ]\r\n                HTMLAttr.Href (toHash page)\r\n                OnClick (fun _ -> OpenMenu false |> props.dispatch)\r\n            ] [ str props.title ]\r\n        ]\r\n    | None ->\r\n        let subNavProps = createEmpty<SubNavProps>\r\n        subNavProps.opened <- props.opened\r\n        subNavProps.title <- props.title\r\n        subNavProps.childItems <- props.childItems\r\n        Mui.listItem [\r\n            DisableGutters true\r\n            Class !!props.classes?listItem\r\n        ] [ from subNavWithStyles subNavProps [] ]\r\n\r\nlet navItemWithStyles = Mui.withStyles (StyleType.Func navItemStyles) [] navItem\r\n\r\nlet view item depth opened currentPage childItems dispatch =\r\n    let props = createEmpty<NavItemProps>\r\n    props.title <- item.Title\r\n    props.href <- item.Href\r\n    props.depth <- depth\r\n    props.currentPage <- currentPage\r\n    props.opened <- opened\r\n    props.childItems <- childItems\r\n    props.dispatch <- dispatch\r\n    from navItemWithStyles props []\r\n'},function(e,t){e.exports='module PageLayoutDemos.SignIn\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nmodule Mui = Fable.Helpers.MaterialUI\r\n\r\nlet toObj = keyValueList CaseRules.LowerFirst\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    // In Fable 2 you don\'t need to create a seperate variable.\r\n    let breakPoint = theme.breakpoints.up( U2.Case2 <| 400 + theme.spacing.unit * 3 * 2 )\r\n\r\n    [\r\n        Styles.Layout [\r\n            Width "auto"\r\n            Display "block"\r\n            MarginLeft (theme.spacing.unit * 3)\r\n            MarginRight (theme.spacing.unit * 3)\r\n            CSSProp.Custom(\r\n                breakPoint, [\r\n                    Width 400\r\n                    MarginLeft "auto"\r\n                    MarginRight "auto"\r\n                ] |> toObj)\r\n        ]\r\n        Styles.Paper [\r\n            MarginTop (theme.spacing.unit * 8)\r\n            Display "Flex"\r\n            FlexDirection "column"\r\n            CSSProp.AlignItems "center"\r\n            CSSProp.Padding (sprintf "%ipx %ipx %ipx" (theme.spacing.unit * 2) (theme.spacing.unit * 3) (theme.spacing.unit * 3))            \r\n        ]\r\n\r\n        Styles.Avatar [\r\n            CSSProp.Margin theme.spacing.unit\r\n            BackgroundColor theme.palette.secondary.main\r\n        ]\r\n\r\n        Styles.Form [\r\n            Width "100%"\r\n            MarginTop theme.spacing.unit\r\n        ]\r\n\r\n        Styles.Custom (\r\n            "submit",\r\n            [MarginTop (theme.spacing.unit * 3)]\r\n        )\r\n    ]\r\n\r\nlet withStyles<\'a> = Mui.withStyles (StyleType.Func styles) []\r\n\r\nlet lockIcon =\r\n    Mui.svgIcon [] [\r\n        path [\r\n            SVGAttr.D "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"\r\n        ] []\r\n    ]\r\n\r\nlet signIn props =\r\n    let classes = props?classes\r\n\r\n    main [Class !!classes?layout ] [\r\n        paper [Class !!classes?paper] [\r\n            avatar [Class !!classes?avatar] [\r\n                lockIcon\r\n            ]\r\n\r\n            typography [Variant TypographyVariant.H5] [ str "Sign in" ]\r\n\r\n            form [Class !!classes?form] [\r\n                formControl [MaterialProp.Margin FormControlMargin.Normal; HTMLAttr.Required true; MaterialProp.FullWidth true] [\r\n                    inputLabel [HtmlFor "email"] [str "Email Address"]\r\n                    input [\r\n                        Id "email"\r\n                        HTMLAttr.Name "email"\r\n                        AutoComplete "email"\r\n                        AutoFocus true\r\n                    ]\r\n                ]\r\n\r\n                formControl [MaterialProp.Margin FormControlMargin.Normal; HTMLAttr.Required true; MaterialProp.FullWidth true] [\r\n                    inputLabel [HtmlFor "password"] [str "Password"]\r\n                    input [\r\n                        HTMLAttr.Name "password"\r\n                        HTMLAttr.Type "password"\r\n                        Id "password"\r\n                        AutoComplete "current-password"\r\n                    ]\r\n                ]\r\n\r\n                button [ HTMLAttr.Type "submit"\r\n                         MaterialProp.FullWidth true\r\n                         ButtonProp.Variant ButtonVariant.Contained\r\n                         MaterialProp.Color ComponentColor.Primary\r\n                         Class !!classes?submit ]  [\r\n                    str "Sign in"\r\n                ]\r\n            ]\r\n        ]        \r\n    ]\r\n\r\nlet root () =\r\n    from (signIn |> withStyles) createEmpty []'},function(e,t){e.exports='module App.State\r\n\r\nopen Elmish\r\nopen Elmish.Browser.Navigation\r\nopen Elmish.Browser.UrlParser\r\nopen Fable.Import.Browser\r\nopen Fable.Import\r\nopen Global\r\nopen Types\r\n\r\nlet pageParser: Parser<Page->Page,Page> =\r\n    oneOf [\r\n        map Home (s "/")\r\n        map Home (s "home")\r\n        map Installation (s "getting-started" </> s "installation")\r\n        map Usage (s "getting-started" </> s "usage")\r\n        map MigrationToV2 (s "getting-started" </> s "migration-to-v2")\r\n        map AppBar (s "demos" </> s "app-bar")\r\n        map Avatars (s "demos" </> s "avatars")\r\n        map Buttons (s "demos" </> s "buttons")\r\n        map TextFields (s "demos" </> s "text-fields")\r\n        map SignIn (s "pagelayout" </> s "signin")\r\n        map Overrides (s "customization" </> s "overrides")\r\n        map Themes (s "customization" </> s "themes")\r\n        map CssInJs (s "customization" </> s "css-in-js")\r\n        map DefaultTheme (s "customization" </> s "default-theme")\r\n    ]\r\n\r\nlet urlUpdate (result: Option<Page>) model =\r\n    match result with\r\n    | None ->\r\n        console.error("Error parsing url")\r\n        model,Navigation.modifyUrl (toHash model.currentPage)\r\n    | Some page ->\r\n        { model with currentPage = page; isLanding = (page = Home) }, []\r\n\r\nlet init result =\r\n    let (model, cmd) =\r\n        urlUpdate result\r\n           { currentPage = Home\r\n             isLanding = true\r\n             menuOpen = false\r\n           }\r\n    model, Cmd.batch [ cmd ]\r\n\r\nlet update (msg: Msg) model =\r\n    match msg with\r\n    | OpenMenu o->\r\n        { model with menuOpen = o}, Cmd.Empty\r\n'},function(e,t){e.exports="module App.Types\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.MaterialUI\r\nopen Global\r\n\r\ntype Msg =\r\n    | OpenMenu of bool\r\n\r\ntype Model = {\r\n    currentPage: Page\r\n    isLanding: bool\r\n    menuOpen: bool\r\n}\r\n\r\n\r\ntype AppProps =\r\n    abstract member model : Model with get,set\r\n    abstract member dispatch : (Msg->unit) with get,set\r\n    inherit IClassesProps\r\n"},function(e,t){e.exports='module Utils\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Helpers.React.Props\r\n\r\nlet toObj list =\r\n    keyValueList CaseRules.LowerFirst list\r\n\r\nlet classNames =\r\n    List.choose (fun (txt,add) -> if add then Some txt else None)\r\n    >> String.concat " "\r\n\r\nlet customCss name styles =\r\n    CSSProp.Custom (name, styles |> toObj)\r\n\r\nlet customAttr name props =\r\n    HTMLAttr.Custom (name, props |> toObj)'},function(e,t){e.exports='module Demos.AppBar.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Demos.AppBar\r\nopen Components\r\n\r\nlet text = importDefault "./AppBar.md"\r\n\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view "## Simple App Bar" "./Demos/AppBar/SimpleAppBar.fs" SimpleAppBar.view\r\n        Demo.view "## App Bar with buttons" "./Demos/AppBar/AppBarWithButtons.fs" AppBarWithButtons.view\r\n    ]'},function(e,t){e.exports='module Demos.AppBar.AppBarWithButtons\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            FlexGrow 1\r\n        ]\r\n        Styles.Custom\r\n            ("flex", [\r\n                FlexGrow 1\r\n            ])\r\n        Styles.Custom\r\n            ("menuButton", [\r\n                CSSProp.MarginLeft -12\r\n                CSSProp.MarginRight 20\r\n            ])\r\n    ]\r\n\r\nlet appBar (props : IClassesProps) =\r\n    let classes = props.classes\r\n    div [ Class !!classes?root ] [\r\n        appBar [\r\n            AppBarProp.Position AppBarPosition.Static\r\n        ] [\r\n            toolbar [] [\r\n                iconButton [\r\n                    Class !!classes?menuButton\r\n                    MaterialProp.Color ComponentColor.Inherit\r\n                    HTMLAttr.Custom ("aria-label", "Menu")\r\n                ] [ icon [] [ str "menu" ] ]\r\n                typography [\r\n                    Class !!classes?flex\r\n                    TypographyProp.Variant TypographyVariant.H6\r\n                    MaterialProp.Color ComponentColor.Inherit\r\n                ] [ str "News" ]\r\n                button [\r\n                    MaterialProp.Color ComponentColor.Inherit\r\n                ] [ str "Login" ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet appBarWithStyles = withStyles<IClassesProps> (StyleType.Styles styles) [] appBar\r\n\r\nlet view () =\r\n    from appBarWithStyles createEmpty []'},function(e,t){e.exports='module Demos.AppBar.SimpleAppBar\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles : IStyles list =\r\n    [ Styles.Root [ CSSProp.FlexGrow 1 ] ]\r\n\r\nlet appBar (props : IClassesProps) =\r\n    div [ Class !!props.classes?root ] [\r\n        appBar [\r\n            AppBarProp.Position AppBarPosition.Static\r\n            MaterialProp.Color ComponentColor.Default\r\n        ] [\r\n            toolbar [] [\r\n                typography [\r\n                    TypographyProp.Variant TypographyVariant.H6\r\n                    MaterialProp.Color ComponentColor.Inherit\r\n                ] [ str "Photos" ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet appBarWithStyles = withStyles<IClassesProps> (StyleType.Styles styles) [] appBar\r\n\r\nlet view () =\r\n    from appBarWithStyles createEmpty []'},function(e,t){e.exports='module Demos.Avatars.View\r\nopen Fable.Helpers.React\r\n\r\nlet root () =\r\n    div [] [ str "avatars" ]\r\n'},function(e,t){e.exports='module Demos.Buttons.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Demos.Buttons\r\nopen Components\r\n\r\nlet text = importDefault "./Buttons.md"\r\n\r\nlet textButtonsText = """\r\n## Text Buttons\r\n\r\n[Text buttons](https://material.io/design/components/buttons.html#text-button)\r\nare typically used for less-pronounced actions, including those located:\r\n\r\n- In dialogs\r\n- In cards\r\n\r\nIn cards, text buttons help maintain an emphasis on card content.\r\n"""\r\n\r\nlet outlinedButtonsText = """\r\n## Outlined Buttons\r\n\r\n[Outlined buttons](https://material.io/design/components/buttons.html#outlined-button)\r\nare medium-emphasis buttons. They contain actions that are important,\r\nbut aren’t the primary action in an app.\r\n\r\n### Alternatives\r\n\r\nOutlined buttons are also a lower emphasis alternative to contained buttons,\r\nor a higher emphasis alternative to text buttons.\r\n"""\r\n\r\nlet containedButtonsText = """\r\n## Contained Buttons\r\n\r\n[Contained buttons](https://material.io/design/components/buttons.html#contained-button)\r\nare high-emphasis, distinguished by their use of elevation and fill.\r\nThey contain actions that are primary to your app.\r\n\r\nThe last example of this demo show how to use an upload button.\r\n"""\r\n\r\nlet floatingButtonsText = """\r\n## Floating Action Buttons\r\n\r\nA [floating action button](https://material.io/design/components/buttons-floating-action-button.html)\r\n(FAB) performs the primary, or most common, action on a screen.\r\nIt appears in front of all screen content, typically as a circular shape with an icon in its center.\r\nFABs come in three types: regular, mini, and extended.\r\n\r\nOnly use a FAB if it is the most suitable way to present a screen’s primary action.\r\n\r\nOnly one floating action button is recommended per screen to represent the most common action.\r\n"""\r\n\r\nlet floatingButtonZoomText = """\r\nThe floating action button animates onto the screen as an expanding piece of material, by default.\r\n\r\nA floating action button that spans multiple lateral screens (such as tabbed screens) should briefly disappear,\r\nthen reappear if its action changes.\r\n\r\nThe Zoom transition can be used to achieve this. Note that since both the exiting and entering\r\nanimations are triggered at the same time, we use `enterDelay` to allow the outgoing Floating Action Button\'s\r\nanimation to finish before the new one enters.\r\n"""\r\n\r\nlet buttonSizesText = """\r\n## Sizes\r\n\r\nFancy larger or smaller buttons? Use the `ButtonProp.Size` or the `ButtonProp.Mini` property.\r\n"""\r\n\r\nlet iconButtonsText = """\r\n## Icon Buttons\r\n\r\nIcon buttons are commonly found in app bars and toolbars.\r\n\r\nIcons are also appropriate for toggle buttons that allow a single choice to be selected or\r\ndeselected, such as adding or removing a star to an item.\r\n"""\r\n\r\nlet iconLabelButtonsText = """\r\n### Buttons with icons and label\r\n\r\nSometimes you might want to have icons for certain button to enhance the UX of the application as we recognize logos more easily than plain text. For example, if you have a delete button you can label it with a dustbin icon.\r\n"""\r\n\r\nlet customizedButtonsText = """\r\n## Customized Buttons\r\n\r\nIf you have been reading the [overrides documentation page](#/customization/overrides)\r\nbut you are not confident jumping in,\r\nhere are examples of how you can change the main color of a Button using classes,\r\nand using a theme; and of a Bootstrap style Button.\r\n"""\r\n\r\nlet complexButtonsText = """\r\n## Complex Buttons\r\n\r\nThe Text Buttons, Contained Buttons, Floating Action Buttons and Icon Buttons are built on top of the same component: the `ButtonBase`.\r\nYou can take advantage of this lower level component to build custom interactions.\r\n"""\r\n\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view textButtonsText "./Demos/Buttons/TextButtons.fs" TextButtons.view\r\n        Demo.view outlinedButtonsText "./Demos/Buttons/OutlinedButtons.fs" OutlinedButtons.view\r\n        Demo.view containedButtonsText "./Demos/Buttons/ContainedButtons.fs" ContainedButtons.view\r\n        Demo.view floatingButtonsText "./Demos/Buttons/FloatingActionButtons.fs" FloatingActionButtons.view\r\n        Demo.view floatingButtonZoomText "./Demos/Buttons/FloatingActionButtonZoom.fs" FloatingActionButtonZoom.view\r\n        Demo.view buttonSizesText "./Demos/Buttons/ButtonSizes.fs" ButtonSizes.view\r\n        Demo.view iconButtonsText "./Demos/Buttons/IconButtons.fs" IconButtons.view\r\n        Demo.view iconLabelButtonsText "./Demos/Buttons/IconLabelButtons.fs" IconLabelButtons.view\r\n        Demo.view customizedButtonsText "./Demos/Buttons/CustomizedButtons.fs" CustomizedButtons.view\r\n    ]\r\n'},function(e,t){e.exports='module Demos.Buttons.ButtonSizes\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [ Styles.Button [ CSSProp.Margin theme.spacing.unit ] ]\r\n\r\nlet buttons props =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        R.div [] [\r\n            button [\r\n                ButtonProp.Size ButtonSize.Small\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Small" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Medium\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Medium" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Large\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Large" ]\r\n        ]\r\n        R.div [] [\r\n            button [\r\n                ButtonProp.Size ButtonSize.Small\r\n                ButtonProp.Variant ButtonVariant.Outlined\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Small" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Medium\r\n                ButtonProp.Variant ButtonVariant.Outlined\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Medium" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Large\r\n                ButtonProp.Variant ButtonVariant.Outlined\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Large" ]\r\n        ]\r\n        R.div [] [\r\n            button [\r\n                ButtonProp.Size ButtonSize.Small\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Small" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Medium\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Medium" ]\r\n            button [\r\n                ButtonProp.Size ButtonSize.Large\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Large" ]\r\n        ]\r\n        R.div [] [\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Fab\r\n                ButtonProp.Mini true\r\n                MaterialProp.Color ComponentColor.Secondary\r\n                HTMLAttr.Class !!classes?button\r\n                HTMLAttr.Custom ("aria-label", "Add")\r\n            ] [ icon [] [ R.str "add_icon" ]]\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Fab\r\n                MaterialProp.Color ComponentColor.Secondary\r\n                HTMLAttr.Class !!classes?button\r\n                HTMLAttr.Custom ("aria-label", "Add")\r\n            ] [ icon [] [ R.str "add_icon" ]]\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []\r\n'},function(e,t){e.exports="module Demos.Buttons.ComplexButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\n"},function(e,t){e.exports='module Demos.Buttons.ContainedButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Input [ CSSProp.Display "none" ]\r\n    ]\r\n\r\nlet buttons props =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Default" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Primary" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Secondary" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Disabled" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            HTMLAttr.Href "#/demos/buttons"\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Link" ]\r\n        R.input [\r\n            HTMLAttr.Accept "image/*"\r\n            HTMLAttr.Class !!classes?input\r\n            HTMLAttr.Id "contained-button-file"\r\n            HTMLAttr.Multiple true\r\n            HTMLAttr.Type "file"\r\n        ]\r\n        R.label [ HTMLAttr.HtmlFor "contained-button-file" ] [\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Component ("span" |> U3.Case1)\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Upload" ]\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []'},function(e,t){e.exports='module Demos.Buttons.CustomizedButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI\r\nmodule R = Fable.Helpers.React\r\n\r\nlet toObj = keyValueList CaseRules.LowerFirst\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [ CSSProp.Margin theme.spacing.unit])\r\n        Styles.Custom\r\n            ("cssRoot", [\r\n                CSSProp.Color (theme.palette.getContrastText(Colors.purple.``500``))\r\n                CSSProp.BackgroundColor Colors.purple.``500``\r\n                CSSProp.Custom\r\n                    ("&:hover", [ CSSProp.BackgroundColor Colors.purple.``700`` ] |> toObj)\r\n            ])\r\n        Styles.Custom\r\n            ("boostrapRoot", [\r\n                CSSProp.BoxShadow "none"\r\n                CSSProp.TextTransform "none"\r\n                CSSProp.FontSize 16\r\n                CSSProp.Padding "6px 12px"\r\n                CSSProp.Border "1px solid"\r\n                CSSProp.BackgroundColor "#007bff"\r\n                CSSProp.BorderColor "#007bff"\r\n                CSSProp.FontFamily\r\n                    ([ "-apple-system"\r\n                       "BlinkMacSystemFont"\r\n                       @"""Segoe UI"""\r\n                       "Roboto"\r\n                       @"""Helvetica Neue"""\r\n                       "Arial"\r\n                       "sans-serif"\r\n                       @"""Apple Color Emoji"""\r\n                       @"""Segoe UI Emoji"""\r\n                       @"""Segoe UI Symbol"""] |> String.concat ",")\r\n                CSSProp.Custom\r\n                    ("&:hover", [\r\n                        CSSProp.BackgroundColor "#0069d9"\r\n                        CSSProp.BorderColor "#0069d9"\r\n                    ] |> toObj)\r\n                CSSProp.Custom\r\n                    ("&:active", [\r\n                        CSSProp.BoxShadow "none"\r\n                        CSSProp.BackgroundColor "#0062cc"\r\n                        CSSProp.BorderColor "#0062cc"\r\n                    ] |> toObj)\r\n                CSSProp.Custom\r\n                    ("&:focus", [\r\n                        CSSProp.BoxShadow "0 0 0 0.2rem rgba(0,123,255,.5)"\r\n                    ] |> toObj)\r\n            ])\r\n    ]\r\n\r\nlet theme = createMuiTheme [\r\n                Typography [\r\n                    // Needed until Material-UI v4 to avoid deprecation warning: https://material-ui.com/style/typography#migration-to-typography-v2\r\n                    UseNextVariants true\r\n                ]\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [ PaletteIntentionProp.Main Colors.green.``500`` ]\r\n                ]\r\n            ]\r\n\r\n\r\nlet buttons (props : IClassesProps) =\r\n    let classes = props.classes\r\n    R.div [ HTMLAttr.Class !!classes?container ] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class ([!!classes?margin; !!classes?cssRoot] |> String.concat " ")\r\n        ] [ R.str "Custom CSS" ]\r\n        muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Contained\r\n                MaterialProp.Color ComponentColor.Primary\r\n                HTMLAttr.Class !!classes?margin\r\n            ] [ R.str "MuiThemeProvider" ]\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Primary\r\n            MaterialProp.DisableRipple true\r\n            HTMLAttr.Class ([!!classes?margin; !!classes?bootstrapRoot] |> String.concat " ")\r\n        ] [ R.str "Bootstrap" ]\r\n    ]\r\n\r\nlet buttonsWithStyles = withStyles<IClassesProps> (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []\r\n'},function(e,t){e.exports='module Demos.Buttons.FloatingActionButtonZoom\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Import.React\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI\r\nmodule R = Fable.Helpers.React\r\n\r\nlet tabContainer children =\r\n    typography [\r\n        MaterialProp.Component ("div" |> U3.Case1)\r\n        Style [ CSSProp.Padding (8 * 3) ]\r\n    ] children\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.BackgroundColor theme.palette.background.paper\r\n            CSSProp.Width 500\r\n            CSSProp.Position "relative"\r\n            CSSProp.MinHeight 200\r\n        ]\r\n        Styles.Fab [\r\n            CSSProp.Position "absolute"\r\n            CSSProp.Bottom (theme.spacing.unit * 2)\r\n            CSSProp.Right (theme.spacing.unit * 2)\r\n        ]\r\n        Styles.Custom (\r\n            "fabGreen",\r\n            [\r\n                CSSProp.Color theme.palette.common.white\r\n                CSSProp.BackgroundColor Colors.green.``500``\r\n            ]\r\n        )\r\n    ]\r\n\r\n\r\ntype Fab = {\r\n    color : ComponentColor\r\n    className : string\r\n    icon : ReactElement\r\n}\r\n\r\n\r\ntype ButtonsProps =\r\n    inherit IClassesProps\r\n\r\n\r\ntype ButtonsState = {\r\n    value : int\r\n}\r\n\r\ntype FloatingActionButtonZoom (props) =\r\n    inherit Component<ButtonsProps,ButtonsState>(props)\r\n    do base.setInitState { value = 0 }\r\n\r\n    member this.handleChange _ index =\r\n        this.setState (fun s _ -> { s with value = index })\r\n\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n        let theme : ITheme = !!this.props?theme\r\n        let transitionExit = theme.transitions.duration.leavingScreen\r\n        let transitionsDuration = [\r\n            TransitionDurationProp.Enter theme.transitions.duration.enteringScreen\r\n            TransitionDurationProp.Exit transitionExit\r\n        ]\r\n        let fabs = [\r\n            {\r\n                color = ComponentColor.Primary\r\n                className = !!classes?fab\r\n                icon = icon [] [ R.str "add_icon" ]\r\n            }\r\n            {\r\n                color = ComponentColor.Secondary\r\n                className = !!classes?fab\r\n                icon = icon [] [ R.str "edit_icon" ]\r\n            }\r\n            {\r\n                color = ComponentColor.Inherit\r\n                className = !!classes?fab + " " + !!classes?fabGreen\r\n                icon = icon [] [ R.str "keyboard_arrow_up_icon" ]\r\n            }\r\n        ]\r\n\r\n        R.div [ Class !!classes?root ] [\r\n            yield appBar [\r\n                AppBarProp.Position AppBarPosition.Static\r\n                MaterialProp.Color ComponentColor.Default\r\n            ] [\r\n                tabs [\r\n                    MaterialProp.Value this.state.value\r\n                    TabsProp.OnChange this.handleChange\r\n                    TabsProp.IndicatorColor TabsIndicatorColor.Primary\r\n                    TabsProp.TextColor TabsTextColor.Primary\r\n                    MaterialProp.FullWidth true\r\n                ] [\r\n                    tab [ MaterialProp.Label (R.str "Item One" |> U2.Case1 |> U3.Case1)]\r\n                    tab [ MaterialProp.Label (R.str "Item Two" |> U2.Case1 |> U3.Case1)]\r\n                    tab [ MaterialProp.Label (R.str "Item Three" |> U2.Case1 |> U3.Case1)]\r\n                ]\r\n            ]\r\n            yield (match this.state.value with\r\n                   | 1 -> tabContainer [ R.str "Item Two"]\r\n                   | 2 -> tabContainer [ R.str "Item Three"]\r\n                   | _ -> tabContainer [ R.str "Item One" ] )\r\n            yield! fabs |> List.mapi (fun i f ->\r\n                zoom [\r\n                    Key (f.color |> string)\r\n                    MaterialProp.In (this.state.value = i)\r\n                    MaterialProp.Timeout (transitionsDuration |> U2.Case2)\r\n                    Style [\r\n                        CSSProp.TransitionDelay\r\n                            ((if this.state.value = i then transitionExit else 0.) |> sprintf "%.0fms")\r\n                    ]\r\n                    TransitionProp.UnmountOnExit true\r\n                ] [\r\n                    button [\r\n                        ButtonProp.Variant ButtonVariant.Fab\r\n                        HTMLAttr.Class f.className\r\n                        MaterialProp.Color f.color\r\n                    ] [ f.icon ]\r\n                ])\r\n        ]\r\n\r\nlet floatingButtonsZoom props =\r\n    R.ofType<FloatingActionButtonZoom,_,_> props []\r\n\r\nlet floatingButtonsZoomWithStyles =\r\n    withStyles<ButtonsProps> (StyleType.Func styles) [ StyleOption.WithTheme true ] floatingButtonsZoom\r\n\r\nlet view () =\r\n    R.from floatingButtonsZoomWithStyles createEmpty []\r\n'},function(e,t){e.exports='module Demos.Buttons.FloatingActionButtons\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Custom ("extendedIcon", [ CSSProp.MarginRight theme.spacing.unit ])\r\n    ]\r\n\r\nlet buttons (props : IClassesProps) =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Fab\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "add_icon" ]]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Fab\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "edit_icon" ]]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.ExtendedFab\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ \r\n            icon [] [ R.str "navigation_icon" ]\r\n            R.str "Extended"\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Fab\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "delete_icon" ]]\r\n    ]\r\n\r\nlet buttonsWithStyles = withStyles<IClassesProps> (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []'},function(e,t){e.exports='module Demos.Buttons.IconButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Input [ CSSProp.Display "none" ]\r\n    ]\r\n\r\nlet buttons props =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        iconButton [\r\n            HTMLAttr.Custom ("aria-label", "Delete")\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "delete_icon" ] ]\r\n        iconButton [\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Custom ("aria-label", "Delete")\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "delete_icon" ] ]\r\n        iconButton [\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Custom ("aria-label", "Add an alarm")\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "alarm_icon" ] ]\r\n        iconButton [\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Custom ("aria-label", "Add to shopping cart")\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ icon [] [ R.str "add_shopping_cart_icon" ] ]\r\n        R.input [\r\n            HTMLAttr.Accept "image/*"\r\n            HTMLAttr.Class !!classes?input\r\n            HTMLAttr.Id "icon-button-file"\r\n            HTMLAttr.Type "file"\r\n        ]\r\n        R.label [ HTMLAttr.HtmlFor "icon-button-file" ] [\r\n            iconButton [\r\n                MaterialProp.Color ComponentColor.Primary\r\n                MaterialProp.Component ("span" |> U3.Case1)\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ icon [] [ R.str "photo_camera_icon" ] ]\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []\r\n'},function(e,t){e.exports='module Demos.Buttons.IconLabelButtons\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Custom ("leftIcon", [ CSSProp.MarginRight theme.spacing.unit ])\r\n        Styles.Custom ("rightIcon", [ CSSProp.MarginLeft theme.spacing.unit ])\r\n        Styles.Custom ("iconSmall", [ CSSProp.FontSize 20 ])\r\n    ]\r\n\r\nlet buttons (props : IClassesProps) =\r\n    let classes = props.classes\r\n    R.div [] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            R.str "Delete"\r\n            icon [ HTMLAttr.Class !!classes?rightIcon ] [ R.str "delete_icon" ]\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            R.str "Send"\r\n            icon [ HTMLAttr.Class !!classes?rightIcon ] [ R.str "send" ]\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Default\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            R.str "Upload"\r\n            icon [ HTMLAttr.Class !!classes?rightIcon ] [ R.str "cloud_up" ]\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            icon [ HTMLAttr.Class !!classes?leftIcon ] [ R.str "keyboard_voice" ]\r\n            R.str "Talk"\r\n        ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Contained\r\n            ButtonProp.Size ButtonSize.Small\r\n            HTMLAttr.Class !!classes?button\r\n        ] [\r\n            icon [\r\n                HTMLAttr.Class (!!classes?leftIcon + " " + !!classes?iconSmall)\r\n            ] [ R.str "save" ]\r\n            R.str "Save"\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles = withStyles<IClassesProps> (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []\r\n'},function(e,t){e.exports='module Demos.Buttons.OutlinedButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI.Props\r\nmodule R = Fable.Helpers.React\r\n\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [ CSSProp.Margin theme.spacing.unit ]\r\n        Styles.Input [ CSSProp.Display "none" ]\r\n    ]\r\n\r\nlet buttons props =\r\n    let classes = props?classes\r\n    R.div [] [\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Default" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            MaterialProp.Color ComponentColor.Primary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Primary" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Secondary" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            HTMLAttr.Disabled true\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Disabled" ]\r\n        button [\r\n            ButtonProp.Variant ButtonVariant.Outlined\r\n            HTMLAttr.Href "#/demos/buttons"\r\n            HTMLAttr.Class !!classes?button\r\n        ] [ R.str "Link" ]\r\n        R.input [\r\n            HTMLAttr.Accept "image/*"\r\n            HTMLAttr.Class !!classes?input\r\n            HTMLAttr.Id "outlined-button-file"\r\n            HTMLAttr.Multiple true\r\n            HTMLAttr.Type "file"\r\n        ]\r\n        R.label [ HTMLAttr.HtmlFor "outlined-button-file" ] [\r\n            button [\r\n                ButtonProp.Variant ButtonVariant.Outlined\r\n                MaterialProp.Component ("span" |> U3.Case1)\r\n                HTMLAttr.Class !!classes?button\r\n            ] [ R.str "Upload" ]\r\n        ]\r\n    ]\r\n\r\nlet buttonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] buttons\r\n\r\nlet view () =\r\n    R.from buttonsWithStyles createEmpty []'},function(e,t){e.exports='module Demos.Buttons.TextButtons\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nmodule R = Fable.Helpers.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Button [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ]\r\n        Styles.Input [\r\n            Display "none"\r\n        ]\r\n    ]\r\nlet textButtons (props : IClassesProps) =\r\n    let classes = props.classes\r\n    R.div [] [\r\n        button [ Class !!classes?button ] [ R.str "Default" ]\r\n        button [\r\n            MaterialProp.Color ComponentColor.Primary\r\n            Class !!classes?button\r\n        ] [ R.str "Primary" ]\r\n        button [\r\n            MaterialProp.Color ComponentColor.Secondary\r\n            Class !!classes?button\r\n        ] [ R.str "Secondary" ]\r\n        button [\r\n            HTMLAttr.Disabled true\r\n            Class !!classes?button\r\n        ] [ R.str "Disabled" ]\r\n        button [\r\n            Href "#/demos/buttons"\r\n            Class !!classes?button\r\n        ] [ R.str "Link" ]\r\n        R.input [\r\n            Accept "image/*"\r\n            Class !!classes?input\r\n            Id "flat-button-file"\r\n            Multiple true\r\n            HTMLAttr.Type "file"\r\n        ]\r\n        R.label [\r\n            HtmlFor "flat-button-file"\r\n        ] [\r\n            button [\r\n                MaterialProp.Component ("span" |> U3.Case1)\r\n                Class !!classes?button\r\n            ] [ R.str "Upload" ]\r\n        ]\r\n    ]\r\n\r\nlet textButtonsWithStyles<\'a> = withStyles (StyleType.Func styles) [] textButtons\r\n\r\nlet view () =\r\n    R.from textButtonsWithStyles createEmpty []'},function(e,t){e.exports='module Demos.TextFields.View\r\n\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\n\r\nopen Demos.TextFields\r\nopen Components\r\n\r\nlet text = importDefault "./TextFields.md"\r\nlet textFieldText = """\r\n## TextField\r\n\r\nThe `TextField` wrapper component is a complete form control including a label, input and help text.\r\n"""\r\n\r\nlet outlinedText = """\r\n## Outlined\r\n\r\n`TextField` supports outlined styling.\r\n"""\r\n\r\nlet filledText = """\r\n## Filled\r\n\r\n`TextField` supports filled styling.\r\n"""\r\n\r\nlet composedText = """\r\n## Components\r\n\r\n`TextField` is composed of smaller components (\r\n`FormControl`,\r\n`Input`,\r\n`InputLabel`,\r\nand `FormHelperText`\r\n) that you can leverage directly to significantly customize your form inputs.\r\n\r\nYou might also have noticed that some native HTML input properties are missing from the `TextField` component.\r\nThis is on purpose.\r\nThe component takes care of the most used properties, then it\'s up to the user to use the underlying component shown in the following demo. Still, you can use `inputProps` (and `InputProps`, `InputLabelProps` properties) if you want to avoid some boilerplate.\r\n"""\r\n\r\nlet layoutText = """\r\n## Layout\r\n\r\n`TextField`, `FormControl` allow the specification of `margin` to alter the vertical spacing of inputs. Using\r\n`none` (default) will not apply margins to the `FormControl`, whereas `dense` and `normal` will as well as alter\r\nother styles to meet the specification.\r\n"""\r\n\r\nlet inputAdornmentsText = """\r\n## Input Adornments\r\n\r\n`Input` allows the provision of `InputAdornment`.\r\nThese can be used to add a prefix, a suffix or an action to an input.\r\nFor instance, you can use an icon button to hide or reveal the password.\r\n"""\r\n\r\nlet customizedText = """\r\n## Customized inputs\r\n\r\nIf you have been reading the overrides documentation page\r\nbut you are not confident jumping in, here\'s an example of how you can change the main color of an Input.\r\n"""\r\n\r\nlet withIconText = """\r\n## With icon\r\n\r\nIcons can be specified as prepended or appended.\r\n"""\r\nlet view () =\r\n    div [] [\r\n        Markdown.view text\r\n        Demo.view textFieldText "./Demos/TextFields/TextField.fs" TextField.view\r\n        Demo.view outlinedText "./Demos/TextFields/Outlined.fs" Outlined.view\r\n        Demo.view filledText "./Demos/TextFields/Filled.fs" Filled.view\r\n        Demo.view composedText "./Demos/TextFields/Composed.fs" Composed.view\r\n        Demo.view "## Input" "./Demos/TextFields/Input.fs" Input.view\r\n        Demo.view layoutText "./Demos/TextFields/Layout.fs" Layout.view\r\n        Demo.view inputAdornmentsText "./Demos/TextFields/InputAdornments.fs" InputAdornments.view\r\n        Demo.view "## Filled Input Adornments" "./Demos/TextFields/FilledInputAdornments.fs" FilledInputAdornments.view\r\n        Demo.view "## Outlined Input Adornments" "./Demos/TextFields/OutlinedInputAdornments.fs" OutlinedInputAdornments.view\r\n        Demo.view customizedText "./Demos/TextFields/Customized.fs" Customized.view\r\n        Demo.view withIconText "./Demos/TextFields/WithIcon.fs" WithIcon.view\r\n    ]\r\n'},function(e,t){e.exports='module Demos.TextFields.Composed\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.FormControl [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ]\r\n    ]\r\n\r\ntype ComposedTextFieldState = {\r\n    name : string\r\n}\r\n\r\ntype ComposedTextField(p) =\r\n    inherit Component<IClassesProps,ComposedTextFieldState>(p)\r\n    do\r\n        base.setInitState { name = "Composed TextField" }\r\n\r\n    member private this.handleChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with name = value })\r\n    \r\n    override this.render() =\r\n        let classes = this.props.classes\r\n        div [ HTMLAttr.Class !!classes?container ] [\r\n            formControl [ HTMLAttr.Class !!classes?formControl ] [\r\n                inputLabel [ HtmlFor "component-simple" ] [ str "Name" ]\r\n                input [\r\n                    HTMLAttr.Id "component-simple"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ]\r\n            ]\r\n            formControl [\r\n                HTMLAttr.Class !!classes?formControl\r\n                HTMLAttr.Custom ("aria-describedby", "component-helper-text")\r\n            ] [\r\n                inputLabel [ HtmlFor "component-helper" ] [ str "Name" ]\r\n                input [\r\n                    HTMLAttr.Id "component-helper"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ]\r\n                formHelperText [ HTMLAttr.Id "component-helper-text" ] [\r\n                    str "Some important helper text"\r\n                ]\r\n            ]\r\n            formControl [\r\n                HTMLAttr.Class !!classes?formControl\r\n                HTMLAttr.Disabled true\r\n            ] [\r\n                inputLabel [ HtmlFor "component-disabled" ] [ str "Name" ]\r\n                input [\r\n                    HTMLAttr.Id "component-disabled"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ]\r\n                formHelperText [ ] [ str "Disabled" ]\r\n            ]\r\n            formControl [\r\n                HTMLAttr.Class !!classes?formControl\r\n                HTMLAttr.Custom ("aria-describedby", "component-error-text")\r\n                MaterialProp.Error true\r\n            ] [\r\n                inputLabel [ HtmlFor "component-error" ] [ str "Name" ]\r\n                input [\r\n                    HTMLAttr.Id "component-error"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ]\r\n                formHelperText [ HTMLAttr.Id "component-error-text" ] [ str "Error" ]\r\n            ]\r\n            formControl [\r\n                HTMLAttr.Class !!classes?formControl\r\n                FormControlProp.Variant FormControlVariant.Filled\r\n            ] [\r\n                inputLabel [ HtmlFor "component-filled" ] [ str "Name" ]\r\n                filledInput [\r\n                    HTMLAttr.Id "component-filled"\r\n                    HTMLAttr.Value this.state.name\r\n                    DOMAttr.OnChange this.handleChange\r\n                ] []\r\n            ]\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<ComposedTextField,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n\r\n\r\n'},function(e,t){e.exports='module Demos.TextFields.Customized\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.MaterialUI\r\n\r\nlet toObj props = keyValueList CaseRules.LowerFirst props\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n        Styles.Custom ("cssLabel", [\r\n            CSSProp.Custom ("&$cssFocused",\r\n                [\r\n                    CSSProp.Color Colors.purple.``500``\r\n                ] |> toObj)\r\n        ])\r\n        Styles.Custom ("cssFocused", [])\r\n        Styles.Custom ("cssUnderline", [\r\n            CSSProp.Custom ("&:after", [\r\n                CSSProp.BorderBottomColor Colors.purple.``500``\r\n            ] |> toObj)\r\n        ])\r\n        Styles.Custom ("bootstrapRoot", [\r\n            CSSProp.Custom ("label + &", [\r\n                CSSProp.MarginTop (theme.spacing.unit * 3)\r\n            ] |> toObj)\r\n        ])\r\n        Styles.Custom ("bootstrapInput", [\r\n            CSSProp.BorderRadius 4\r\n            CSSProp.BackgroundColor theme.palette.common.white\r\n            CSSProp.Border "1px solid #ced4da"\r\n            CSSProp.FontSize 16\r\n            CSSProp.Padding "10px 12px"\r\n            CSSProp.Transition (theme.transitions.create(["border-color"; "box-shadow"] |> U2.Case2))\r\n            CSSProp.FontFamily (\r\n                [ "-apple-system"\r\n                  "BlinkMacSystemFont"\r\n                  "\\"Segou UI\\""\r\n                  "Roboto"\r\n                  "\\"Helvetica Neue\\""\r\n                  "Arial"\r\n                  "sans-serif"\r\n                  "\\"Apple Color Emoji\\""\r\n                  "\\"Segoe UI Emoji\\""\r\n                  "\\"Segoe UI Symbol\\"" ] |> String.concat(","))\r\n            CSSProp.Custom ("&:focus", [\r\n                CSSProp.BorderColor "#80bdff"\r\n                CSSProp.BoxShadow "0 0 0 0.2rem rgba(0,123,255,.25)"\r\n            ] |> toObj)\r\n        ])\r\n        Styles.Custom ("bootstrapFormLabel", [\r\n            CSSProp.FontSize 18\r\n        ])\r\n    ]\r\n\r\nlet theme = createMuiTheme([\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [\r\n                        PaletteIntentionProp.Main Colors.green.``500``\r\n                    ]\r\n                ]\r\n            ])\r\n\r\nlet customizedInputs (props : IClassesProps) =\r\n    let classes = props.classes\r\n\r\n    div [ Class !!classes?container ] [\r\n        formControl [ Class !!classes?margin ] [\r\n            inputLabel [\r\n                HTMLAttr.HtmlFor "custom-css-input"\r\n                ChildrenProp.FormLabelClasses [\r\n                    ClassNames.Root !!classes?cssLabel\r\n                    ClassNames.Focused !!classes?cssFocused\r\n                ]\r\n            ] [ str "Custom CSS" ]\r\n            input [\r\n                HTMLAttr.Id "custom-css-input"\r\n                MaterialProp.Classes [\r\n                    ClassNames.Underline !!classes?cssUnderline\r\n                ]\r\n            ]\r\n        ]\r\n        muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n            textField [\r\n                HTMLAttr.Class !!classes?margin\r\n                HTMLAttr.Label "MuiThemeProvider"\r\n                HTMLAttr.Id "mui-theme-provider-input"\r\n            ] []\r\n        ]\r\n        formControl [ Class !!classes?margin ] [\r\n            inputLabel [\r\n                InputLabelProp.Shrink true\r\n                HTMLAttr.HtmlFor "bootstrap-input"\r\n                HTMLAttr.Class !!classes?bootstrapFormLabel\r\n            ] [ str "Bootstrap" ]\r\n            inputBase [\r\n                HTMLAttr.Id "bootstrap-input"\r\n                HTMLAttr.DefaultValue "react-bootstrap"\r\n                MaterialProp.Classes [\r\n                    ClassNames.Root !!classes?bootstrapRoot\r\n                    ClassNames.Input !!classes?bootstrapInput\r\n                ]\r\n            ]\r\n        ]\r\n        inputBase [\r\n            HTMLAttr.Class !!classes?margin\r\n            HTMLAttr.DefaultValue "Naked input"\r\n        ]\r\n    ]\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] customizedInputs\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.Filled\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("textField", [\r\n            CSSProp.MarginLeft theme.spacing.unit\r\n            CSSProp.MarginRight theme.spacing.unit\r\n            CSSProp.Width 200\r\n        ])\r\n        Styles.Dense [\r\n            CSSProp.MarginTop 19\r\n        ]\r\n        Styles.Custom("menu", [\r\n            CSSProp.Width 200\r\n        ])\r\n    ]\r\n\r\nlet currencies = [\r\n    ("$", "USD")\r\n    ("€", "EUR")\r\n    ("฿", "BTC")\r\n    ("¥", "JPY")\r\n]\r\n\r\ntype TextFieldState = {\r\n    name : string\r\n    age : string\r\n    multiline : string\r\n    currency : string\r\n}\r\n\r\ntype TextFields (p) =\r\n    inherit React.Component<IClassesProps,TextFieldState>(p)\r\n    do\r\n        base.setInitState {\r\n            name = "Cat in the Hat"\r\n            age = ""\r\n            multiline = "Controlled"\r\n            currency = "EUR"\r\n        }\r\n    \r\n    member private this.handleNameChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with name = value })\r\n    \r\n    member private this.handleMultilineChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with multiline = value })\r\n\r\n    member private this.handleAgeChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with age = value })\r\n    \r\n    member private this.handleCurrencyChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with currency = value })\r\n    \r\n    override this.render() =\r\n        form [\r\n            HTMLAttr.Class !!this.props.classes?container\r\n            HTMLAttr.NoValidate true\r\n            HTMLAttr.AutoComplete "off"\r\n        ] [\r\n            textField [\r\n                HTMLAttr.Id "filled-name"\r\n                HTMLAttr.Label "Name"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Value this.state.name\r\n                DOMAttr.OnChange this.handleNameChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-uncontrolled"\r\n                HTMLAttr.Label "Uncontrolled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "foo"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-required"\r\n                HTMLAttr.Label "Required"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                HTMLAttr.Required true\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-error"\r\n                HTMLAttr.Label "Error"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                MaterialProp.Error true\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Disabled true\r\n                HTMLAttr.Id "filled-disabled"\r\n                HTMLAttr.Label "Disabled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-email-input"\r\n                HTMLAttr.Label "Email"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "email"\r\n                HTMLAttr.AutoComplete "email"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-password-input"\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "password"\r\n                HTMLAttr.AutoComplete "current-password"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-read-only-input"\r\n                HTMLAttr.Label "Read Only"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                ChildrenProp.InputProps [\r\n                    HTMLAttr.ReadOnly true\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-dense"\r\n                HTMLAttr.Label "Dense"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                classList [\r\n                    (!!this.props.classes?textField, true)\r\n                    (!!this.props.classes?dense, true)\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Dense\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-multiline-flexible"\r\n                HTMLAttr.Label "Multiline"\r\n                MaterialProp.Multiline true\r\n                MaterialProp.RowsMax 4\r\n                HTMLAttr.Value this.state.multiline\r\n                DOMAttr.OnChange this.handleMultilineChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-multiline-static"\r\n                HTMLAttr.Label "Multiline"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Rows 4\r\n                MaterialProp.Multiline true\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-helperText"\r\n                HTMLAttr.Label "Helper text"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-with-placeholder"\r\n                HTMLAttr.Label "With placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-textarea"\r\n                HTMLAttr.Label "Multiline placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Multiline true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-number"\r\n                HTMLAttr.Label "Number"\r\n                HTMLAttr.Value this.state.age\r\n                HTMLAttr.Type "number"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                DOMAttr.OnChange this.handleAgeChange\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-search"\r\n                HTMLAttr.Label "Search field"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-select-currency"\r\n                HTMLAttr.Label "Select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> menuItem [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "filled-select-currency-native"\r\n                HTMLAttr.Label "Native select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    SelectProp.Native true\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> option [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "filled-full-width"\r\n                HTMLAttr.Label "Label"\r\n                Style [ CSSProp.Margin 8 ]\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                MaterialProp.FullWidth true\r\n                TextFieldProp.HelperText ("Full width!" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                // HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-bare"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Bare"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<TextFields,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.FilledInputAdornments\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n        Styles.Custom ("textField", [\r\n            CSSProp.FlexBasis 200\r\n        ])\r\n    ]\r\n\r\nlet ranges = [\r\n    "0-20", "0 to 20"\r\n    "21-50", "21 to 50"\r\n    "51-100", "51 to 100"\r\n]\r\n\r\ntype InputAdornmentsProps = {\r\n    amount : string\r\n    password : string\r\n    weight : string\r\n    weightRange : string\r\n    showPassword : bool\r\n}\r\n\r\ntype InputAdornments(p) =\r\n    inherit Component<IClassesProps, InputAdornmentsProps>(p)\r\n    do\r\n        base.setInitState {\r\n            amount = ""\r\n            password = ""\r\n            weight = ""\r\n            weightRange = ""\r\n            showPassword = false\r\n        }\r\n    member private this.handleWeightChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weight = value })\r\n    member private this.handleWeightRangeChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weightRange = value })\r\n    member private this.handleAmountChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with amount = value })\r\n    member private this.handlePasswordChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with password = value })\r\n    \r\n    member private this.handleClickShowPassword _ =\r\n        this.setState (fun s _ -> { s with showPassword = not s.showPassword })\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n\r\n        div [ Class !!classes?root ] [\r\n            textField [\r\n                HTMLAttr.Label "With filled TextField"\r\n                HTMLAttr.Id "filled-simple-start-adornment"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [ \r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                TextFieldProp.Select true\r\n                HTMLAttr.Label "With Select"\r\n                HTMLAttr.Value this.state.weightRange\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                DOMAttr.OnChange this.handleWeightRangeChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] (ranges |> List.map (fun (k,l) -> menuItem [ Prop.Key k; HTMLAttr.Value k] [ str l ]))\r\n            textField [\r\n                HTMLAttr.Id "filled-adornment-amount"\r\n                HTMLAttr.Value this.state.amount\r\n                HTMLAttr.Label "Amount"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                DOMAttr.OnChange this.handleAmountChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [ str "$" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-adornment-weight"\r\n                HTMLAttr.Value this.state.weight\r\n                HTMLAttr.Label "Weight"\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                TextFieldProp.HelperText ("Weight" |> str |> U2.Case1 |> U3.Case1)\r\n                DOMAttr.OnChange this.handleWeightChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.End\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "filled-adornment-password"\r\n                HTMLAttr.Value this.state.password\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Type (if this.state.showPassword then "text" else "password")\r\n                TextFieldProp.Variant TextFieldVariant.Filled\r\n                DOMAttr.OnChange this.handlePasswordChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.End\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Filled\r\n                        ] [\r\n                            iconButton [\r\n                                HTMLAttr.Custom("aria-label", "Toggle password visibility")\r\n                                DOMAttr.OnClick this.handleClickShowPassword\r\n                            ] [\r\n                                icon [] [\r\n                                    str (if this.state.showPassword then "visibility_off"\r\n                                         else "visibility")\r\n                                ]\r\n                            ]\r\n                        ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<InputAdornments,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n\r\n'},function(e,t){e.exports='module Demos.TextFields.Input\r\n\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Input [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ]\r\n    ]\r\n\r\nlet inputTextFields (props : IClassesProps) =\r\n    let classes = props.classes\r\n\r\n    div [ Class !!classes?container ] [\r\n        input [\r\n            HTMLAttr.DefaultValue "Hello world"\r\n            HTMLAttr.Class !!classes?input\r\n            MaterialProp.InputProps [\r\n                HTMLAttr.Custom ("aria-label", "Description")\r\n            ]\r\n        ]\r\n        input [\r\n            HTMLAttr.Placeholder "Placeholder"\r\n            HTMLAttr.Class !!classes?input\r\n            MaterialProp.InputProps [\r\n                HTMLAttr.Custom ("aria-label", "Description")\r\n            ]\r\n        ]\r\n        input [\r\n            HTMLAttr.Value "Disabled"\r\n            HTMLAttr.Class !!classes?input\r\n            HTMLAttr.Disabled true\r\n            MaterialProp.InputProps [\r\n                HTMLAttr.Custom ("aria-label", "Description")\r\n            ]\r\n        ]\r\n        input [\r\n            HTMLAttr.DefaultValue "Error"\r\n            HTMLAttr.Class !!classes?input\r\n            MaterialProp.Error true\r\n            MaterialProp.InputProps [\r\n                HTMLAttr.Custom ("aria-label", "Description")\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] inputTextFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []'},function(e,t){e.exports='module Demos.TextFields.InputAdornments\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n        Styles.Custom ("withoutLabel", [\r\n            CSSProp.MarginTop (theme.spacing.unit * 3)\r\n        ])\r\n        Styles.Custom ("textField", [\r\n            CSSProp.FlexBasis 200\r\n        ])\r\n    ]\r\n\r\nlet ranges = [\r\n    "0-20", "0 to 20"\r\n    "21-50", "21 to 50"\r\n    "51-100", "51 to 100"\r\n]\r\n\r\ntype InputAdornmentsProps = {\r\n    amount : string\r\n    password : string\r\n    weight : string\r\n    weightRange : string\r\n    showPassword : bool\r\n}\r\n\r\ntype InputAdornments(p) =\r\n    inherit Component<IClassesProps, InputAdornmentsProps>(p)\r\n    do\r\n        base.setInitState {\r\n            amount = ""\r\n            password = ""\r\n            weight = ""\r\n            weightRange = ""\r\n            showPassword = false\r\n        }\r\n    member private this.handleWeightChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weight = value })\r\n    member private this.handleWeightRangeChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weightRange = value })\r\n    member private this.handleAmountChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with amount = value })\r\n    member private this.handlePasswordChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with password = value })\r\n    \r\n    member private this.handleClickShowPassword _ =\r\n        this.setState (fun s _ -> { s with showPassword = not s.showPassword })\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n\r\n        div [ Class !!classes?root ] [\r\n            textField [\r\n                HTMLAttr.Label "With normal TextField"\r\n                HTMLAttr.Id "simple-start-adornment"\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.Start ]\r\n                            [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                TextFieldProp.Select true\r\n                HTMLAttr.Label "With Select"\r\n                HTMLAttr.Value this.state.weightRange\r\n                DOMAttr.OnChange this.handleWeightRangeChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.Start ]\r\n                            [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] (ranges |> List.map (fun (k,l) -> menuItem [ Prop.Key k; HTMLAttr.Value k] [ str l ]))\r\n            formControl [\r\n                MaterialProp.FullWidth true\r\n                HTMLAttr.Class !!classes?margin\r\n            ] [\r\n                inputLabel [ HTMLAttr.HtmlFor "adornment-amount" ] [ str "Amount" ]\r\n                input [\r\n                    HTMLAttr.Id "adornment-amount"\r\n                    HTMLAttr.Value this.state.amount\r\n                    DOMAttr.OnChange this.handleAmountChange\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.Start ]\r\n                            [ str "$" ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ]\r\n            formControl [\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?withoutLabel, true\r\n                    !!classes?textField, true\r\n                ]\r\n                HTMLAttr.Custom("aria-describedby", "weight-helper-text")\r\n            ] [\r\n                input [\r\n                    HTMLAttr.Id "adornment-weight"\r\n                    HTMLAttr.Value this.state.weight\r\n                    DOMAttr.OnChange this.handleWeightChange\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.End ]\r\n                            [ str "Kg" ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                    MaterialProp.InputProps [ HTMLAttr.Custom ("aria-label", "Weight") ]\r\n                ]\r\n                formHelperText [ HTMLAttr.Id "weight-helper-text" ] [ str "Weight" ]\r\n            ]\r\n            formControl [\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n            ] [\r\n                inputLabel [ HTMLAttr.HtmlFor "adornment-password" ] [ str "Password" ]\r\n                input [\r\n                    HTMLAttr.Id "adornment-password"\r\n                    HTMLAttr.Type (if this.state.showPassword then "text" else "password")\r\n                    HTMLAttr.Value this.state.password\r\n                    DOMAttr.OnChange this.handlePasswordChange\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment\r\n                            [ InputAdornmentProp.Position InputAdornmentPosition.End ]\r\n                            [\r\n                                iconButton [\r\n                                    HTMLAttr.Custom("aria-label", "Toggle password visibility")\r\n                                    DOMAttr.OnClick this.handleClickShowPassword\r\n                                ] [\r\n                                    icon [] [\r\n                                        str (if this.state.showPassword then "visibility_off"\r\n                                             else "visibility")\r\n                                    ]\r\n                                ]\r\n                             ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ]\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<InputAdornments,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.Layout\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("textField", [\r\n            CSSProp.MarginLeft theme.spacing.unit\r\n            CSSProp.MarginRight theme.spacing.unit\r\n            CSSProp.Width 200\r\n        ])\r\n    ]\r\n\r\nlet layoutTextFields (props : IClassesProps) =\r\n    let classes = props?classes\r\n\r\n    div [ Class !!classes?container ] [\r\n        textField [\r\n            HTMLAttr.Label "None"\r\n            HTMLAttr.Id "margin-none"\r\n            HTMLAttr.DefaultValue "Default value"\r\n            HTMLAttr.Class !!classes?textField\r\n            TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n        ] []\r\n        textField [\r\n            HTMLAttr.Label "Dense"\r\n            HTMLAttr.Id "margin-dense"\r\n            HTMLAttr.DefaultValue "Default value"\r\n            HTMLAttr.Class !!classes?textField\r\n            TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n            MaterialProp.Margin FormControlMargin.Dense\r\n        ] []\r\n        textField [\r\n            HTMLAttr.Label "Normal"\r\n            HTMLAttr.Id "margin-normal"\r\n            HTMLAttr.DefaultValue "Default value"\r\n            HTMLAttr.Class !!classes?textField\r\n            TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n            MaterialProp.Margin FormControlMargin.Normal\r\n        ] []\r\n    ]\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] layoutTextFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.Outlined\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("textField", [\r\n            CSSProp.MarginLeft theme.spacing.unit\r\n            CSSProp.MarginRight theme.spacing.unit\r\n            CSSProp.Width 200\r\n        ])\r\n        Styles.Dense [\r\n            CSSProp.MarginTop 19\r\n        ]\r\n        Styles.Custom("menu", [\r\n            CSSProp.Width 200\r\n        ])\r\n    ]\r\n\r\nlet currencies = [\r\n    ("$", "USD")\r\n    ("€", "EUR")\r\n    ("฿", "BTC")\r\n    ("¥", "JPY")\r\n]\r\n\r\ntype TextFieldState = {\r\n    name : string\r\n    age : string\r\n    multiline : string\r\n    currency : string\r\n}\r\n\r\ntype TextFields (p) =\r\n    inherit React.Component<IClassesProps,TextFieldState>(p)\r\n    do\r\n        base.setInitState {\r\n            name = "Cat in the Hat"\r\n            age = ""\r\n            multiline = "Controlled"\r\n            currency = "EUR"\r\n        }\r\n    \r\n    member private this.handleNameChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with name = value })\r\n    \r\n    member private this.handleMultilineChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with multiline = value })\r\n\r\n    member private this.handleAgeChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with age = value })\r\n    \r\n    member private this.handleCurrencyChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with currency = value })\r\n    \r\n    override this.render() =\r\n        form [\r\n            HTMLAttr.Class !!this.props.classes?container\r\n            HTMLAttr.NoValidate true\r\n            HTMLAttr.AutoComplete "off"\r\n        ] [\r\n            textField [\r\n                HTMLAttr.Id "outlined-name"\r\n                HTMLAttr.Label "Name"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Value this.state.name\r\n                DOMAttr.OnChange this.handleNameChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-uncontrolled"\r\n                HTMLAttr.Label "Uncontrolled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "foo"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-required"\r\n                HTMLAttr.Label "Required"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                HTMLAttr.Required true\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-error"\r\n                HTMLAttr.Label "Error"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                MaterialProp.Error true\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Disabled true\r\n                HTMLAttr.Id "outlined-disabled"\r\n                HTMLAttr.Label "Disabled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-email-input"\r\n                HTMLAttr.Label "Email"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "email"\r\n                HTMLAttr.AutoComplete "email"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-password-input"\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "password"\r\n                HTMLAttr.AutoComplete "current-password"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-read-only-input"\r\n                HTMLAttr.Label "Read Only"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                ChildrenProp.InputProps [\r\n                    HTMLAttr.ReadOnly true\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-dense"\r\n                HTMLAttr.Label "Dense"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                classList [\r\n                    (!!this.props.classes?textField, true)\r\n                    (!!this.props.classes?dense, true)\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Dense\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-multiline-flexible"\r\n                HTMLAttr.Label "Multiline"\r\n                MaterialProp.Multiline true\r\n                MaterialProp.RowsMax 4\r\n                HTMLAttr.Value this.state.multiline\r\n                DOMAttr.OnChange this.handleMultilineChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-multiline-static"\r\n                HTMLAttr.Label "Multiline"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Rows 4\r\n                MaterialProp.Multiline true\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-helperText"\r\n                HTMLAttr.Label "Helper text"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-with-placeholder"\r\n                HTMLAttr.Label "With placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-textarea"\r\n                HTMLAttr.Label "Multiline placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Multiline true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-number"\r\n                HTMLAttr.Label "Number"\r\n                HTMLAttr.Value this.state.age\r\n                HTMLAttr.Type "number"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                DOMAttr.OnChange this.handleAgeChange\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-search"\r\n                HTMLAttr.Label "Search field"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-select-currency"\r\n                HTMLAttr.Label "Select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> menuItem [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "outlined-select-currency-native"\r\n                HTMLAttr.Label "Native select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    SelectProp.Native true\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> option [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "outlined-full-width"\r\n                HTMLAttr.Label "Label"\r\n                Style [ CSSProp.Margin 8 ]\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                MaterialProp.FullWidth true\r\n                TextFieldProp.HelperText ("Full width!" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                // HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-bare"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Bare"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<TextFields,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.OutlinedInputAdornments\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Root [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n        Styles.Custom ("textField", [\r\n            CSSProp.FlexBasis 200\r\n        ])\r\n    ]\r\n\r\nlet ranges = [\r\n    "0-20", "0 to 20"\r\n    "21-50", "21 to 50"\r\n    "51-100", "51 to 100"\r\n]\r\n\r\ntype InputAdornmentsProps = {\r\n    amount : string\r\n    password : string\r\n    weight : string\r\n    weightRange : string\r\n    showPassword : bool\r\n}\r\n\r\ntype InputAdornments(p) =\r\n    inherit Component<IClassesProps, InputAdornmentsProps>(p)\r\n    do\r\n        base.setInitState {\r\n            amount = ""\r\n            password = ""\r\n            weight = ""\r\n            weightRange = ""\r\n            showPassword = false\r\n        }\r\n    member private this.handleWeightChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weight = value })\r\n    member private this.handleWeightRangeChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with weightRange = value })\r\n    member private this.handleAmountChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with amount = value })\r\n    member private this.handlePasswordChange (e : FormEvent) =\r\n        let value = e.Value\r\n        this.setState (fun s _ -> { s with password = value })\r\n    \r\n    member private this.handleClickShowPassword _ =\r\n        this.setState (fun s _ -> { s with showPassword = not s.showPassword })\r\n    override this.render() =\r\n        let classes = this.props.classes\r\n\r\n        div [ Class !!classes?root ] [\r\n            textField [\r\n                HTMLAttr.Label "With outlined TextField"\r\n                HTMLAttr.Id "outlined-simple-start-adornment"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [ \r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                TextFieldProp.Select true\r\n                HTMLAttr.Label "With Select"\r\n                HTMLAttr.Value this.state.weightRange\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                DOMAttr.OnChange this.handleWeightRangeChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] (ranges |> List.map (fun (k,l) -> menuItem [ Prop.Key k; HTMLAttr.Value k] [ str l ]))\r\n            textField [\r\n                HTMLAttr.Id "outlined-adornment-amount"\r\n                HTMLAttr.Value this.state.amount\r\n                HTMLAttr.Label "Amount"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                DOMAttr.OnChange this.handleAmountChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.StartAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.Start\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [ str "$" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-adornment-weight"\r\n                HTMLAttr.Value this.state.weight\r\n                HTMLAttr.Label "Weight"\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                TextFieldProp.HelperText ("Weight" |> str |> U2.Case1 |> U3.Case1)\r\n                DOMAttr.OnChange this.handleWeightChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.End\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [ str "Kg" ]\r\n                        |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "outlined-adornment-password"\r\n                HTMLAttr.Value this.state.password\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Type (if this.state.showPassword then "text" else "password")\r\n                TextFieldProp.Variant TextFieldVariant.Outlined\r\n                DOMAttr.OnChange this.handlePasswordChange\r\n                classList [\r\n                    !!classes?margin, true\r\n                    !!classes?textField, true\r\n                ]\r\n                ChildrenProp.InputProps [\r\n                    InputProp.EndAdornment (\r\n                        inputAdornment [\r\n                            InputAdornmentProp.Position InputAdornmentPosition.End\r\n                            InputAdornmentProp.Variant InputAdornmentVariant.Outlined\r\n                        ] [\r\n                            iconButton [\r\n                                HTMLAttr.Custom("aria-label", "Toggle password visibility")\r\n                                DOMAttr.OnClick this.handleClickShowPassword\r\n                            ] [\r\n                                icon [] [\r\n                                    str (if this.state.showPassword then "visibility_off"\r\n                                         else "visibility")\r\n                                ]\r\n                            ]\r\n                        ]\r\n                    |> U2.Case1 |> U3.Case1)\r\n                ]\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<InputAdornments,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n\r\n'},function(e,t){e.exports='module Demos.TextFields.TextField\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\nopen Fable.Import.React\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Container [\r\n            CSSProp.Display "flex"\r\n            CSSProp.FlexWrap "wrap"\r\n        ]\r\n        Styles.Custom ("textField", [\r\n            CSSProp.MarginLeft theme.spacing.unit\r\n            CSSProp.MarginRight theme.spacing.unit\r\n            CSSProp.Width 200\r\n        ])\r\n        Styles.Dense [\r\n            CSSProp.MarginTop 19\r\n        ]\r\n        Styles.Custom("menu", [\r\n            CSSProp.Width 200\r\n        ])\r\n    ]\r\n\r\nlet currencies = [\r\n    ("$", "USD")\r\n    ("€", "EUR")\r\n    ("฿", "BTC")\r\n    ("¥", "JPY")\r\n]\r\n\r\ntype TextFieldState = {\r\n    name : string\r\n    age : string\r\n    multiline : string\r\n    currency : string\r\n}\r\n\r\ntype TextFields (p) =\r\n    inherit React.Component<IClassesProps,TextFieldState>(p)\r\n    do\r\n        base.setInitState {\r\n            name = "Cat in the Hat"\r\n            age = ""\r\n            multiline = "Controlled"\r\n            currency = "EUR"\r\n        }\r\n    \r\n    member private this.handleNameChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with name = value })\r\n    \r\n    member private this.handleMultilineChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with multiline = value })\r\n\r\n    member private this.handleAgeChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with age = value })\r\n    \r\n    member private this.handleCurrencyChange (event : FormEvent) =\r\n        let value = event.Value\r\n        this.setState (fun s _ -> { s with currency = value })\r\n    \r\n    override this.render() =\r\n        form [\r\n            HTMLAttr.Class !!this.props.classes?container\r\n            HTMLAttr.NoValidate true\r\n            HTMLAttr.AutoComplete "off"\r\n        ] [\r\n            textField [\r\n                HTMLAttr.Id "standard-name"\r\n                HTMLAttr.Label "Name"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Value this.state.name\r\n                DOMAttr.OnChange this.handleNameChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-uncontrolled"\r\n                HTMLAttr.Label "Uncontrolled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "foo"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-required"\r\n                HTMLAttr.Label "Required"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                HTMLAttr.Required true\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-error"\r\n                HTMLAttr.Label "Error"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                MaterialProp.Error true\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Disabled true\r\n                HTMLAttr.Id "standard-disabled"\r\n                HTMLAttr.Label "Disabled"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-password-input"\r\n                HTMLAttr.Label "Password"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "password"\r\n                HTMLAttr.AutoComplete "current-password"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-read-only-input"\r\n                HTMLAttr.Label "Read Only"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Hello World"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.InputProps [\r\n                    HTMLAttr.ReadOnly true\r\n                ]\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-dense"\r\n                HTMLAttr.Label "Dense"\r\n                classList [\r\n                    (!!this.props.classes?textField, true)\r\n                    (!!this.props.classes?dense, true)\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Dense\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-multiline-flexible"\r\n                HTMLAttr.Label "Multiline"\r\n                MaterialProp.Multiline true\r\n                MaterialProp.RowsMax 4\r\n                HTMLAttr.Value this.state.multiline\r\n                DOMAttr.OnChange this.handleMultilineChange\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-multiline-static"\r\n                HTMLAttr.Label "Multiline"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Rows 4\r\n                MaterialProp.Multiline true\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-helperText"\r\n                HTMLAttr.Label "Helper text"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Default Value"\r\n                TextFieldProp.HelperText ("Some important text" |> str |> U2.Case1 |> U3.Case1)\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-with-placeholder"\r\n                HTMLAttr.Label "With placeholder"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-textarea"\r\n                HTMLAttr.Label "With placeholder multiline"\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Multiline true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-number"\r\n                HTMLAttr.Label "Number"\r\n                HTMLAttr.Value this.state.age\r\n                HTMLAttr.Type "number"\r\n                DOMAttr.OnChange this.handleAgeChange\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-search"\r\n                HTMLAttr.Label "Search field"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-select-currency"\r\n                HTMLAttr.Label "Select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> menuItem [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "standard-select-currency-native"\r\n                HTMLAttr.Label "Native select"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.Type "search"\r\n                HTMLAttr.Value this.state.currency\r\n                DOMAttr.OnChange this.handleCurrencyChange\r\n                TextFieldProp.HelperText ("Please select your currency" |> str |> U2.Case1 |> U3.Case1)\r\n                TextFieldProp.Select true\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n                ChildrenProp.SelectProps [\r\n                    SelectProp.Native true\r\n                    ChildrenProp.MenuProps [\r\n                        HTMLAttr.Class !!this.props.classes?menu\r\n                    ]\r\n                ]\r\n            ] (currencies |> List.map (fun (k,v) -> option [ Prop.Key v; HTMLAttr.Value v ] [ str k ]))\r\n            textField [\r\n                HTMLAttr.Id "standard-full-width"\r\n                HTMLAttr.Label "Label"\r\n                Style [ CSSProp.Margin 8 ]\r\n                HTMLAttr.Placeholder "Placeholder"\r\n                MaterialProp.FullWidth true\r\n                TextFieldProp.HelperText ("Full width!" |> str |> U2.Case1 |> U3.Case1)\r\n                ChildrenProp.InputLabelProps [\r\n                    InputLabelProp.Shrink true\r\n                ]\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n            textField [\r\n                HTMLAttr.Id "standard-bare"\r\n                HTMLAttr.Class !!this.props.classes?textField\r\n                HTMLAttr.DefaultValue "Bare"\r\n                MaterialProp.Margin FormControlMargin.Normal\r\n            ] []\r\n        ]\r\n\r\nlet textFields props =\r\n    ofType<TextFields,_,_> props []\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] textFields\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []\r\n'},function(e,t){e.exports='module Demos.TextFields.WithIcon\r\n\r\nopen Fable.Core\r\nopen Fable.Helpers.React\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.Helpers.React.Props\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI.Themes\r\n\r\nlet styles (theme : ITheme) : IStyles list =\r\n    [\r\n        Styles.Custom("margin", [\r\n            CSSProp.Margin theme.spacing.unit\r\n        ])\r\n    ]\r\n\r\nlet inputWithIcon (props : IClassesProps) =\r\n    let classes = props.classes\r\n\r\n    div [] [\r\n        formControl [ Class !!classes?margin ] [\r\n            inputLabel [ HTMLAttr.HtmlFor "input-with-icon-adornment" ] [\r\n                str "With a start adornment"\r\n            ]\r\n            input [ \r\n                HTMLAttr.Id "input-with-icon-adornment"\r\n                InputProp.StartAdornment (\r\n                    inputAdornment [ InputAdornmentProp.Position InputAdornmentPosition.Start ] [\r\n                        icon [] [ str "account_circle" ]\r\n                    ] |> U2.Case1 |> U3.Case1\r\n                )\r\n            ]\r\n        ]\r\n        textField [\r\n            HTMLAttr.Class !!classes?margin\r\n            HTMLAttr.Id "input-with-icon-textfield"\r\n            HTMLAttr.Label "TextField"\r\n            ChildrenProp.InputProps [\r\n                InputProp.StartAdornment (\r\n                    inputAdornment [ InputAdornmentProp.Position InputAdornmentPosition.Start ] [\r\n                        icon [] [ str "account_circle" ]\r\n                    ] |> U2.Case1 |> U3.Case1\r\n                )\r\n            ]\r\n        ] []\r\n        div [ Class !!classes?margin ] [\r\n            grid [\r\n                GridProp.Container true\r\n                GridProp.Spacing GridSpacing.``8``\r\n                GridProp.AlignItems GridAlignItems.FlexEnd\r\n            ] [\r\n                grid [ GridProp.Item true ] [\r\n                    icon [] [ str "account_circle" ]\r\n                ]\r\n                grid [ GridProp.Item true ] [\r\n                    textField [\r\n                        HTMLAttr.Id "input-with-icon-grid"\r\n                        HTMLAttr.Label "With a grid"\r\n                    ] []\r\n                ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet textFieldsWithStyles = withStyles (StyleType.Func styles) [] inputWithIcon\r\n\r\nlet view () =\r\n    from textFieldsWithStyles createEmpty<IClassesProps> []'},function(e,t){e.exports='// <auto-generated>\n//     Generated by the FSharp WriteCodeFragment class.\n// </auto-generated>\nnamespace FSharp\n\nopen System\nopen System.Reflection\n\r\n\r\n[<assembly: System.Reflection.AssemblyCompanyAttribute("Fable.MaterialUI.Docs")>]\r\n[<assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")>]\r\n[<assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")>]\r\n[<assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0")>]\r\n[<assembly: System.Reflection.AssemblyProductAttribute("Fable.MaterialUI.Docs")>]\r\n[<assembly: System.Reflection.AssemblyTitleAttribute("Fable.MaterialUI.Docs")>]\r\n[<assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")>]\r\ndo()\r\n'},function(e,t){e.exports='// <auto-generated>\n//     Generated by the FSharp WriteCodeFragment class.\n// </auto-generated>\nnamespace FSharp\n\nopen System\nopen System.Reflection\n\r\n\r\n[<assembly: System.Reflection.AssemblyCompanyAttribute("Fable.MaterialUI.Docs")>]\r\n[<assembly: System.Reflection.AssemblyConfigurationAttribute("Release")>]\r\n[<assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")>]\r\n[<assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0")>]\r\n[<assembly: System.Reflection.AssemblyProductAttribute("Fable.MaterialUI.Docs")>]\r\n[<assembly: System.Reflection.AssemblyTitleAttribute("Fable.MaterialUI.Docs")>]\r\n[<assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")>]\r\ndo()\r\n'},function(e,t,n){"use strict";n.r(t);n(527);function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t&&a(e.prototype,t),n&&a(e,n),e}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e){return null!=e&&"function"==typeof e.Dispose}function l(e,t){for(var n=e.toString(10);n.length<t;)n="0"+n;return n}function p(e){var t=e;return"number"==typeof t.offset?t.offset:1===e.kind?0:-6e4*e.getTimezoneOffset()}function c(e){var t=e<0,n=(e=Math.abs(e))%36e5/6e4;return(t?"-":"+")+l(~~(e/36e5),2)+":"+l(n,2)}function u(e,t){var n=e.toISOString();return"first"===t?n.substring(0,n.indexOf("T")):n.substring(n.indexOf("T")+1,n.length-1)}function d(e,t,n){return t.replace(/(\w)\1*/g,function(t){var r=t;switch(t.substring(0,1)){case"y":var a=n?e.getUTCFullYear():e.getFullYear();r=t.length<4?a%100:a;break;case"M":r=(n?e.getUTCMonth():e.getMonth())+1;break;case"d":r=n?e.getUTCDate():e.getDate();break;case"H":r=n?e.getUTCHours():e.getHours();break;case"h":var o=n?e.getUTCHours():e.getHours();r=o>12?o%12:o;break;case"m":r=n?e.getUTCMinutes():e.getMinutes();break;case"s":r=n?e.getUTCSeconds():e.getSeconds()}return r!==t&&r<10&&t.length>1&&(r="0"+r),r})}function m(e,t){var n=new Date(e.getTime()+e.offset);if("string"!=typeof t)return n.toISOString().replace(/\.\d+/,"").replace(/[A-Z]|\.\d+/g," ")+c(e.offset);if(1!==t.length)return d(n,t,!0);switch(t){case"D":case"d":return u(n,"first");case"T":case"t":return u(n,"second");case"O":case"o":return function(e,t){var n=e.toISOString();return n.substring(0,n.length-1)+c(t)}(n,e.offset);default:throw new Error("Unrecognized Date print format")}}function h(e,t){var n=1===e.kind;if("string"!=typeof t)return n?e.toUTCString():e.toLocaleString();if(1!==t.length)return d(e,t,n);switch(t){case"D":case"d":return n?u(e,"first"):e.toLocaleDateString();case"T":case"t":return n?u(e,"second"):e.toLocaleTimeString();case"O":case"o":return function(e,t){if(t)return e.toISOString();var n=null==e.kind||2===e.kind;return l(e.getFullYear(),4)+"-"+l(e.getMonth()+1,2)+"-"+l(e.getDate(),2)+"T"+l(e.getHours(),2)+":"+l(e.getMinutes(),2)+":"+l(e.getSeconds(),2)+"."+l(e.getMilliseconds(),3)+(n?c(-6e4*e.getTimezoneOffset()):"")}(e,n);default:throw new Error("Unrecognized Date print format")}}function y(e,t){return null!=e.offset?m(e,t):h(e,t)}function g(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];switch(r(e)){case"string":return t?JSON.stringify(e):e;case"function":return e.name;case"object":if(!function(e){return null!=e&&Object.getPrototypeOf(e).constructor===Object}(e)&&!Array.isArray(e))return e instanceof Date?y(e):String(e);try{return JSON.stringify(e,function(e,t){if(null!=t){if(t instanceof Date)return y(t);if(function(e){return null!=e&&"object"===r(e)&&Symbol.iterator in e}(t)&&!Array.isArray(t)&&"string"!=typeof t)return Array.from(t)}return String(t)})}catch(t){return"{"+Object.keys(e).map(function(t){return t+": "+String(e[t])}).join(", ")+"}"}default:return String(e)}}var f=function(){function e(){s(this,e)}return o(e,null,[{key:"id",value:function(t){return e.idMap.has(t)||e.idMap.set(t,++e.count),e.idMap.get(t)}}]),e}();function b(e){for(var t=0,n=5381,r=e.length;t<r;)n=33*n^e.charCodeAt(t++);return n}function C(e){return 2654435761*e|0}function T(e){return 0===e.length?0:e.reduce(function(e,t){return(e<<5)+e^t})}function P(e){if(null==e)return 0;switch(r(e)){case"boolean":return e?1:0;case"number":return C(e);case"string":return b(e);default:if("function"==typeof e.GetHashCode)return e.GetHashCode();if(S(e)){for(var t=e,n=t.length,a=new Array(n),o=0;o<n;o++)a[o]=P(t[o]);return T(a)}return b(g(e))}}function S(e){return Array.isArray(e)||ArrayBuffer.isView(e)}function w(e,t){return function(e,t,n){if(null==e)return null==t;if(null==t)return!1;if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(!n(e[r],t[r]))return!1;return!0}(e,t,v)}function v(e,t){return e===t||(null==e?null==t:null!=t&&("object"===r(e)&&("function"==typeof e.Equals?e.Equals(t):S(e)?S(t)&&w(e,t):e instanceof Date&&(t instanceof Date&&0===M(e,t)))))}function M(e,t){var n,r;return"offset"in e&&"offset"in t?(n=e.getTime(),r=t.getTime()):(n=e.getTime()+p(e),r=t.getTime()+p(t)),n===r?0:n<r?-1:1}function F(e,t){return e===t?0:e<t?-1:1}function x(e,t){return function(e,t,n){if(null==e)return null==t?0:1;if(null==t)return-1;if(e.length!==t.length)return e.length<t.length?-1:1;for(var r=0,a=0;r<e.length;r++)if(0!==(a=n(e[r],t[r])))return a;return 0}(e,t,A)}function A(e,t){return e===t?0:null==e?null==t?0:-1:null==t?1:"object"!==r(e)?e<t?-1:1:"function"==typeof e.CompareTo?e.CompareTo(t):S(e)?S(t)&&x(e,t):e instanceof Date?t instanceof Date&&M(e,t):1}f.idMap=new WeakMap,f.count=0;var I={None:0,LowerFirst:1};function L(e,t){switch(t){case I.LowerFirst:return e.charAt(0).toLowerCase()+e.slice(1);case I.None:default:return e}}function H(e){function t(e){throw new Error("Cannot infer key and value of "+g(e))}var n={},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:I.None,a=!0,o=!1,s=void 0;try{for(var i,l=e[Symbol.iterator]();!(a=(i=l.next()).done);a=!0){var p=i.value,c=I.None;if(null==p&&t(p),"function"==typeof p.toJSON&&(p=p.toJSON(),c=r),Array.isArray(p))switch(p.length){case 0:t(p);break;case 1:n[L(p[0],c)]=!0;break;case 2:var u=p[1];n[L(p[0],c)]=u;break;default:n[L(p[0],c)]=p.slice(1)}else"string"==typeof p?n[L(p,c)]=!0:t(p)}}catch(e){o=!0,s=e}finally{try{a||null==l.return||l.return()}finally{if(o)throw s}}return n}function B(e,t){return null!=t&&Object.getPrototypeOf(e).constructor===Object.getPrototypeOf(t).constructor}function E(e,t){return function(e,t){e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}(e,t||R),e}function R(){}function D(e,t){if(e===t)return 0;if(null==t)return-1;for(;null!=e.tail;){if(null==t.tail)return 1;var n=A(e.head,t.head);if(0!==n)return n;e=e.tail,t=t.tail}return null==t.tail?0:-1}function V(e,t){this.head=e,this.tail=t}function k(e,t){return new V(e,t)}function U(e,t){this.tag=0|e,this.name=t;for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];this.fields=r}function O(e,t){for(var n={},r=null==t?Object.keys(e):t(e),a=0;a<r.length;a++)n[r[a]]=e[r[a]];return n}function N(e,t,n){if(e===t)return!0;if(B(e,t)){for(var r=null==n?Object.keys(e):n(e),a=0;a<r.length;a++)if(!v(e[r[a]],t[r[a]]))return!1;return!0}return!1}function W(e,t,n){if(e===t)return 0;if(B(e,t)){for(var r=null==n?Object.keys(e):n(e),a=0;a<r.length;a++){var o=A(e[r[a]],t[r[a]]);if(0!==o)return o}return 0}return-1}function z(){}R.prototype.toString=function(){var e=this;return"{"+Object.keys(this).map(function(t){return t+" = "+g(e[t])}).join(";\n ")+"}"},R.prototype.GetHashCode=function(){return function(e){if(null==e)return 0;switch(r(e)){case"boolean":return e?1:0;case"number":return C(e);case"string":return b(e);default:return C(f.id(e))}}(this)},R.prototype.Equals=function(e){return this===e},V.prototype.toString=function(){return"["+Array.from(this).map(function(e){return g(e)}).join("; ")+"]"},V.prototype.toJSON=function(){return Array.from(this)},V.prototype[Symbol.iterator]=function(){var e=this;return{next:function(){var t=e;return e=e.tail,{done:null==t.tail,value:t.head}}}},V.prototype.GetHashCode=function(){return T(Array.from(this).map(P))},V.prototype.Equals=function(e){return 0===D(this,e)},V.prototype.CompareTo=function(e){return D(this,e)},U.prototype.toString=function(){var e=this.fields.length;return 0===e?this.name:1===e?this.name+" "+g(this.fields[0]):this.name+" ("+this.fields.map(g).join(",")+")"},U.prototype.toJSON=function(){return 0===this.fields.length?this.name:[this.name].concat(this.fields)},U.prototype.GetHashCode=function(){var e=this.fields.map(P);return e.splice(0,0,C(this.tag)),T(e)},U.prototype.Equals=function(e){return this===e||B(this,e)&&this.tag===e.tag&&w(this.fields,e.fields)},U.prototype.CompareTo=function(e){return this===e?0:B(this,e)?this.tag===e.tag?x(this.fields,e.fields):this.tag<e.tag?-1:1:-1},z.prototype.toString=function(){var e=this;return"{"+Object.keys(this).map(function(t){return t+" = "+g(e[t])}).join(";\n ")+"}"},z.prototype.toJSON=function(){return O(this)},z.prototype.GetHashCode=function(){var e=this;return T(Object.keys(this).map(function(t){return P(e[t])}))},z.prototype.Equals=function(e){return N(this,e)},z.prototype.CompareTo=function(e){return W(this,e)};E(function(e){this.contents=e},z);var j=E(function(e){this.stack=Error().stack,this.message=e});function _(e){return Object.keys(e).filter(function(e){return"message"!==e&&"stack"!==e})}var J=E(function(){j.call(this)},j);J.prototype.toString=function(){var e=this,t=_(this),n=t.length;return 0===n?this.message:1===n?this.message+" "+String(this[t[0]]):this.message+" ("+t.map(function(t){return String(e[t])}).join(",")+")"},J.prototype.toJSON=function(){return O(this,_)},J.prototype.GetHashCode=function(){var e=this;return T(_(this).map(function(t){return P(e[t])}))},J.prototype.Equals=function(e){return N(this,e,_)},J.prototype.CompareTo=function(e){return W(this,e,_)};E(function(e,t,n){this.arg1=e,this.arg2=0|t,this.arg3=0|n},J),E(function(){});var G=n(71),q=n.n(G),Y=n(72),K=n.n(Y),$=n(126),Z=n.n($),X=n(127),Q=n.n(X),ee=n(73),te=n.n(ee),ne=n(128),re=n.n(ne),ae=n(129),oe=n.n(ae),se=n(130),ie=n.n(se),le=n(131),pe=n.n(le),ce=n(132),ue=n.n(ce),de=n(133),me=n.n(de),he=n(134),ye=n.n(he),ge=n(135),fe=n.n(ge),be=n(136),Ce=n.n(be),Te=n(137),Pe=n.n(Te),Se=n(138),we=n.n(Se),ve=n(139),Me=n.n(ve),Fe=n(74),xe=n.n(Fe),Ae=n(140),Ie=n.n(Ae);E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U);function Le(e,t){return[e,H(t,1)]}q.a;var He=K.a,Be=Z.a,Ee=(Q.a,te.a,re.a),Re=(oe.a,ie.a,pe.a,ue.a),De=(me.a,ye.a,fe.a,Ce.a,Pe.a),Ve=(we.a,Me.a,xe.a,Ie.a,E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U)),ke=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),Ue=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),Oe=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),Ne=(E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U)),We=(E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t,n,r,a,o,s){this.value__=0|e,this[0]=t,this[8]=n,this[16]=r,this[24]=a,this[32]=o,this[40]=s},z),E(function(e,t,n,r,a,o,s,i,l,p,c,u,d){this.value__=0|e,this[1]=t,this[2]=n,this[3]=r,this[4]=a,this[5]=o,this[6]=s,this[7]=i,this[8]=l,this[9]=p,this[10]=c,this[11]=u,this[12]=d},z),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){this.left=0|e,this.top=0|t},z),E(function(e,t){this.horizontal=e,this.vertical=t},z),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){this.vertical=e,this.horizontal=t},z),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U)),ze=(E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U)),je=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U);E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U);E(function(){});var _e=n(141),Je=n.n(_e),Ge=n(143),qe=n.n(Ge),Ye=n(75),Ke=n.n(Ye),$e=n(144),Ze=n.n($e),Xe=n(145),Qe=n.n(Xe),et=n(146),tt=n.n(et),nt=n(42),rt=n.n(nt),at=n(19),ot=n.n(at),st=n(147),it=n.n(st),lt=n(148),pt=n.n(lt),ct=n(149),ut=n.n(ct),dt=n(150),mt=n.n(dt),ht=n(151),yt=n.n(ht),gt=n(152),ft=n.n(gt),bt=n(153),Ct=n.n(bt),Tt=n(154),Pt=n.n(Tt),St=n(155),wt=n.n(St),vt=n(77),Mt=n.n(vt),Ft=n(55),xt=n.n(Ft),At=n(156),It=n.n(At),Lt=n(157),Ht=n.n(Lt),Bt=n(158),Et=n.n(Bt),Rt=n(159),Dt=n.n(Rt),Vt=n(160),kt=n.n(Vt),Ut=n(161),Ot=n.n(Ut),Nt=n(162),Wt=n.n(Nt),zt=n(163),jt=n.n(zt),_t=n(164),Jt=n.n(_t),Gt=n(165),qt=n.n(Gt),Yt=n(166),Kt=n.n(Yt),$t=n(167),Zt=n.n($t),Xt=n(54),Qt=n.n(Xt),en=n(78),tn=n.n(en),nn=n(79),rn=n.n(nn),an=n(168),on=n.n(an),sn=n(80),ln=n.n(sn),pn=n(81),cn=n.n(pn),un=n(82),dn=n.n(un),mn=n(169),hn=n.n(mn),yn=n(170),gn=n.n(yn),fn=n(171),bn=n.n(fn),Cn=n(172),Tn=n.n(Cn),Pn=n(59),Sn=n.n(Pn),wn=n(173),vn=n.n(wn),Mn=n(174),Fn=n.n(Mn),xn=n(43),An=n.n(xn),In=n(45),Ln=n.n(In),Hn=n(175),Bn=n.n(Hn),En=n(37),Rn=n.n(En),Dn=n(83),Vn=n.n(Dn),kn=n(84),Un=n.n(kn),On=n(85),Nn=n.n(On),Wn=n(86),zn=n.n(Wn),jn=n(176),_n=n.n(jn),Jn=n(177),Gn=n.n(Jn),qn=n(178),Yn=n.n(qn),Kn=n(179),$n=n.n(Kn),Zn=n(180),Xn=n.n(Zn),Qn=n(181),er=n.n(Qn),tr=n(89),nr=n.n(tr),rr=n(88),ar=n.n(rr),or=n(182),sr=n.n(or),ir=n(44),lr=n.n(ir),pr=n(183),cr=n.n(pr),ur=n(90),dr=n.n(ur),mr=n(21),hr=n.n(mr),yr=n(87),gr=n.n(yr),fr=n(91),br=n.n(fr),Cr=n(57),Tr=n.n(Cr),Pr=n(184),Sr=n.n(Pr),wr=n(185),vr=n.n(wr),Mr=n(56),Fr=n.n(Mr),xr=n(60),Ar=n.n(xr),Ir=n(58),Lr=n.n(Ir),Hr=n(186),Br=n.n(Hr),Er=n(92),Rr=n.n(Er),Dr=n(187),Vr=n.n(Dr),kr=n(188),Ur=n.n(kr),Or=n(95),Nr=n.n(Or),Wr=n(189),zr=n.n(Wr),jr=n(94),_r=n.n(jr),Jr=n(93),Gr=n.n(Jr),qr=n(190),Yr=n.n(qr),Kr=n(17),$r=n.n(Kr),Zr=n(191),Xr=n.n(Zr),Qr=n(192),ea=n.n(Qr),ta=n(193),na=n.n(ta),ra=n(194),aa=n.n(ra),oa=n(195),sa=n.n(oa),ia=n(196),la=n.n(ia),pa=n(96),ca=n.n(pa),ua=n(197),da=n.n(ua),ma=n(198),ha=n.n(ma),ya=n(199),ga=n.n(ya),fa=n(200),ba=n.n(fa),Ca=n(201),Ta=n.n(Ca),Pa=n(202),Sa=n.n(Pa),wa=n(97),va=n.n(wa),Ma=n(203),Fa=n.n(Ma),xa=n(76),Aa=n.n(xa),Ia=n(22),La=n.n(Ia),Ha=n(204),Ba=n.n(Ha),Ea=n(27),Ra=n(38),Da=n(15),Va=Je.a,ka=qe.a,Ua=(Ke.a,Ze.a,Qe.a,tt.a,rt.a),Oa=(ot.a,it.a,pt.a,ut.a,mt.a,yt.a,ft.a,Ct.a),Na=(Pt.a,wt.a,Mt.a,xt.a),Wa=(It.a,Ht.a,Et.a,Dt.a,kt.a,Ot.a,Wt.a),za=jt.a,ja=(Jt.a,qt.a,Kt.a,Zt.a,Qt.a,tn.a),_a=rn.a,Ja=(on.a,ln.a,cn.a),Ga=(dn.a,hn.a),qa=(gn.a,bn.a,Tn.a,Sn.a,vn.a),Ya=Fn.a,Ka=An.a,$a=Ln.a,Za=Bn.a,Xa=Rn.a,Qa=Vn.a,eo=(Un.a,Nn.a),to=zn.a,no=(_n.a,Gn.a,Yn.a,$n.a,Xn.a,er.a,nr.a),ro=(ar.a,sr.a,lr.a,cr.a,dr.a,hr.a),ao=(gr.a,br.a,Tr.a,Sr.a,vr.a,Fr.a,Ar.a,Lr.a,Br.a,Rr.a,Vr.a,Ur.a,Nr.a,zr.a,_r.a,Gr.a,Yr.a,$r.a),oo=Xr.a,so=(ea.a,na.a),io=aa.a,lo=(sa.a,la.a,ca.a,da.a,ha.a,ga.a,ba.a,Ta.a,Sa.a),po=va.a,co=Fa.a,uo=(Aa.a,La.a),mo=Ba.a;function ho(e,t,n){var r;if("function"==typeof e){var a=e;r=function(e){return H(a(e),1)}}else{r=H(e,1)}return function(e,t,n){return Object(Ea.withStyles)(e,t)(n)}(r,H(t,1),n)}var yo=Ea.MuiThemeProvider;Ea.createMuiTheme;function go(e){return Object(Ea.createMuiTheme)(H(e,1))}Ea.withTheme;function fo(e){return Object(Ea.withTheme)()(e)}Ra.isWidthUp,Ra.isWidthDown,Da.recomposeColor,Da.convertHexToRGB,Da.rbgToHex,Da.decomposeColor,Da.getContrastRatio,Da.getLuminance,Da.emphasize,Da.fade;var bo=Da.darken,Co=(Da.lighten,n(0));function To(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Po=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.value=t}return function(e,t,n){t&&To(e.prototype,t),n&&To(e,n)}(e,[{key:"toString",value:function(){return g(this.value)}},{key:"toJSON",value:function(){return this.value}},{key:"GetHashCode",value:function(){return P(this.value)}},{key:"Equals",value:function(t){return null!=t&&v(this.value,t instanceof e?t.value:t)}},{key:"CompareTo",value:function(t){return null==t?1:A(this.value,t instanceof e?t.value:t)}}]),e}();function So(e){return null==e||e instanceof Po?new Po(e):e}function wo(e,t){if(null==e){if(!t)throw new Error("Option has no value");return null}return e instanceof Po?e.value:e}E(function(e,t,n){U.call(this,e,t,n)},U);E(function(e,t,n){U.call(this,e,t,n)},U);function vo(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,a=!1,o=void 0;try{for(var s,i=e[Symbol.iterator]();!(r=(s=i.next()).done)&&(n.push(s.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw o}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var Mo=/^\s*([\+\-])?(0[xXoObB])?([0-9a-fA-F]+)\s*$/,Fo=/[^0-1]/,xo=/[^0-7]/,Ao=/[^0-9]/,Io=/[^0-9a-fA-F]/;function Lo(e,t){var n=vo(e,4),r=(n[0],n[1]),a=n[2],o=n[3];return{sign:r||"",prefix:a,digits:o,radix:t}}function Ho(e,t){var n=Mo.exec(e);if(null!=n){if(null==t)switch(n[2]){case"0b":case"0B":t=2;break;case"0o":case"0O":t=8;break;case"0x":case"0X":t=16;break;default:t=10}switch(t){case 2:return Fo.test(n[3])?null:Lo(n,2);case 8:return xo.test(n[3])?null:Lo(n,8);case 10:return Ao.test(n[3])?null:Lo(n,10);case 16:return Io.test(n[3])?null:Lo(n,16);default:throw new Error("Invalid Base.")}}return null}var Bo=null;try{Bo=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function Eo(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}Eo.prototype.GetHashCode=function(){return T([this.unsigned?1:0,this.high,this.low])},Eo.prototype.Equals=function(e){return is(this,e)},Eo.prototype.CompareTo=function(e){return us(this,e)},Eo.prototype.toString=function(e){return rs(this,e)},Eo.prototype.toJSON=function(){return rs(this)};function Ro(e){return!0===(e&&e.__isLong__)}Eo.prototype.__isLong__,Object.defineProperty(Eo.prototype,"__isLong__",{value:!0});var Do={},Vo={};function ko(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=Vo[e])?r:(n=Oo(e,(0|e)<0?-1:0,!0),a&&(Vo[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=Do[e])?r:(n=Oo(e,e<0?-1:0,!1),a&&(Do[e]=n),n)}function Uo(e,t){if(isNaN(e))return t?Yo:qo;if(t){if(e<0)return Yo;if(e>=_o)return Qo}else{if(e<=-Jo)return es;if(e+1>=Jo)return Xo}return e<0?ds(Uo(-e,t)):Oo(e%jo|0,e/jo|0,t)}function Oo(e,t,n){return new Eo(e,t,n)}var No=Math.pow;function Wo(e,t,n){var r=Ho(e,n);if(null===r)throw new Error("Input string was not in a correct format.");if(e=r.sign+r.digits,n=r.radix,0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return qo;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a=e.indexOf("-");if(a>0)throw Error("interior hyphen");if(0===a)return ds(Wo(e.substring(1),t,n));for(var o=Uo(No(n,8)),s=qo,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),p=parseInt(e.substring(i,i+l),n);if(l<8)s=ms(ys(s,Uo(No(n,l))),Uo(p));else s=ms(s=ys(s,o),Uo(p))}return s.unsigned=t,s}function zo(e,t){return"number"==typeof e?Uo(e,t):"string"==typeof e?Wo(e,t):Oo(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}var jo=4294967296,_o=jo*jo,Jo=_o/2,Go=ko(1<<24),qo=ko(0),Yo=ko(0,!0),Ko=ko(1),$o=ko(1,!0),Zo=ko(-1),Xo=Oo(-1,2147483647,!1),Qo=Oo(-1,-1,!0),es=Oo(0,-2147483648,!1);function ts(e){return e.unsigned?e.low>>>0:e.low}function ns(e){return e.unsigned?(e.high>>>0)*jo+(e.low>>>0):e.high*jo+(e.low>>>0)}function rs(e,t){if((t=t||10)<2||36<t)throw RangeError("radix");if(as(e))return"0";if(os(e)){if(is(e,es)){var n=Uo(t),r=gs(e,n),a=hs(ys(r,n),e);return rs(r,t)+ts(a).toString(t)}return"-"+rs(ds(e),t)}for(var o=Uo(No(t,6),e.unsigned),s=e,i="";;){var l=gs(s,o),p=(ts(hs(s,ys(l,o)))>>>0).toString(t);if(as(s=l))return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}}function as(e){return 0===e.high&&0===e.low}function os(e){return!e.unsigned&&e.high<0}function ss(e){return 1==(1&e.low)}function is(e,t){return Ro(t)||(t=zo(t)),(e.unsigned===t.unsigned||e.high>>>31!=1||t.high>>>31!=1)&&(e.high===t.high&&e.low===t.low)}function ls(e,t){return us(e,t)<0}function ps(e,t){return us(e,t)>0}function cs(e,t){return us(e,t)>=0}function us(e,t){if(Ro(t)||(t=zo(t)),is(e,t))return 0;var n=os(e),r=os(t);return n&&!r?-1:!n&&r?1:e.unsigned?t.high>>>0>e.high>>>0||t.high===e.high&&t.low>>>0>e.low>>>0?-1:1:os(hs(e,t))?-1:1}function ds(e){return!e.unsigned&&is(e,es)?es:ms(fs(e),Ko)}function ms(e,t){Ro(t)||(t=zo(t));var n=e.high>>>16,r=65535&e.high,a=e.low>>>16,o=65535&e.low,s=t.high>>>16,i=65535&t.high,l=t.low>>>16,p=0,c=0,u=0,d=0;return u+=(d+=o+(65535&t.low))>>>16,c+=(u+=a+l)>>>16,p+=(c+=r+i)>>>16,p+=n+s,Oo((u&=65535)<<16|(d&=65535),(p&=65535)<<16|(c&=65535),e.unsigned)}function hs(e,t){return Ro(t)||(t=zo(t)),ms(e,ds(t))}function ys(e,t){if(as(e))return e.unsigned?Yo:qo;if(Ro(t)||(t=zo(t)),Bo)return Oo(Bo.mul(e.low,e.high,t.low,t.high),Bo.get_high(),e.unsigned);if(as(t))return e.unsigned?Yo:qo;if(is(e,es))return ss(t)?es:qo;if(is(t,es))return ss(e)?es:qo;if(os(e))return os(t)?ys(ds(e),ds(t)):ds(ys(ds(e),t));if(os(t))return ds(ys(e,ds(t)));if(ls(e,Go)&&ls(t,Go))return Uo(ns(e)*ns(t),e.unsigned);var n=e.high>>>16,r=65535&e.high,a=e.low>>>16,o=65535&e.low,s=t.high>>>16,i=65535&t.high,l=t.low>>>16,p=65535&t.low,c=0,u=0,d=0,m=0;return d+=(m+=o*p)>>>16,u+=(d+=a*p)>>>16,d&=65535,u+=(d+=o*l)>>>16,c+=(u+=r*p)>>>16,u&=65535,c+=(u+=a*l)>>>16,u&=65535,c+=(u+=o*i)>>>16,c+=n*p+r*l+a*i+o*s,Oo((d&=65535)<<16|(m&=65535),(c&=65535)<<16|(u&=65535),e.unsigned)}function gs(e,t){if(Ro(t)||(t=zo(t)),as(t))throw Error("division by zero");var n,r,a;if(Bo)return e.unsigned||-2147483648!==e.high||-1!==t.low||-1!==t.high?Oo((e.unsigned?Bo.div_u:Bo.div_s)(e.low,e.high,t.low,t.high),Bo.get_high(),e.unsigned):e;if(as(e))return e.unsigned?Yo:qo;if(e.unsigned){if(t.unsigned||(t=function(e){return e.unsigned?e:Oo(e.low,e.high,!0)}(t)),ps(t,e))return Yo;if(ps(t,function(e,t){Ro(t)&&(t=ts(t));if(0==(t&=63))return e;var n=e.high;if(t<32){var r=e.low;return Oo(r>>>t|n<<32-t,n>>>t,e.unsigned)}return Oo(32===t?n:n>>>t-32,0,e.unsigned)}(e,1)))return $o;a=Yo}else{if(is(e,es))return is(t,Ko)||is(t,Zo)?es:is(t,es)?Ko:is(n=bs(gs(Cs(e,1),t),1),qo)?os(t)?Ko:Zo:a=ms(n,gs(r=hs(e,ys(t,n)),t));else if(is(t,es))return e.unsigned?Yo:qo;if(os(e))return os(t)?gs(ds(e),ds(t)):ds(gs(ds(e),t));if(os(t))return ds(gs(e,ds(t)));a=qo}for(r=e;cs(r,t);){n=Math.max(1,Math.floor(ns(r)/ns(t)));for(var o=Math.ceil(Math.log(n)/Math.LN2),s=o<=48?1:No(2,o-48),i=Uo(n),l=ys(i,t);os(l)||ps(l,r);)l=ys(i=Uo(n-=s,e.unsigned),t);as(i)&&(i=Ko),a=ms(a,i),r=hs(r,l)}return a}function fs(e){return Oo(~e.low,~e.high,e.unsigned)}function bs(e,t){return Ro(t)&&(t=ts(t)),0==(t&=63)?e:t<32?Oo(e.low<<t,e.high<<t|e.low>>>32-t,e.unsigned):Oo(0,e.low<<t-32,e.unsigned)}function Cs(e,t){return Ro(t)&&(t=ts(t)),0==(t&=63)?e:t<32?Oo(e.low>>>t|e.high<<32-t,e.high>>t,e.unsigned):Oo(e.high>>t-32,e.high>=0?0:-1,e.unsigned)}function Ts(e,t,n){return n?function(e,t){return new Eo(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)}(e,t):function(e,t){return new Eo(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}(e,t)}function Ps(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ss(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var ws=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.iter=t}return function(e,t,n){t&&Ss(e.prototype,t),n&&Ss(e,n)}(e,[{key:"MoveNext",value:function(){var e=this.iter.next();return this.current=e.value,!e.done}},{key:"Reset",value:function(){throw new Error("JS iterators cannot be reset")}},{key:"Dispose",value:function(){}},{key:"Current",get:function(){return this.current}}]),e}();function vs(e){return new ws(e[Symbol.iterator]())}function Ms(e){return{next:function(){return e.MoveNext()?{done:!1,value:e.Current}:{done:!0,value:null}}}}function Fs(e,t){return As(function(){var n=!1,r=[e[Symbol.iterator](),null];return Es(function(){var e;if(!n){if(!(e=r[0].next()).done)return[e.value,r];n=!0,r=[null,t[Symbol.iterator]()]}return(e=r[1].next()).done?null:[e.value,r]},r)})}function xs(e){return As(function(){var t=e[Symbol.iterator](),n={value:null};return Es(function(e){for(var r=!1;!r;)if(null==e){var a=t.next();a.done?r=!0:e=a.value[Symbol.iterator]()}else{var o=e.next();o.done?e=null:(n={value:o.value},r=!0)}return null!=e&&null!=n?[n.value,e]:null},null)})}function As(e){return Ps({},Symbol.iterator,function(){return e()[Symbol.iterator]()})}function Is(){return Es(function(){})}function Ls(e,t,n){if(Array.isArray(n)||ArrayBuffer.isView(n))return n.reduce(e,t);for(var r,a=0,o=n[Symbol.iterator]();!(r=o.next()).done;a++)t=e(t,r.value,a);return t}function Hs(e,t){return As(function(){return Es(function(t){var n=t.next();return n.done?null:[e(n.value),t]},t[Symbol.iterator]())})}function Bs(e){return[e]}function Es(e,t){return Ps({},Symbol.iterator,function(){var n=t;return{next:function(){var t=e(n);return null!=t?(n=t[1],{done:!1,value:t[0]}):{done:!0}}}})}var Rs=/(^|[^%])%([0+ ]*)(-?\d+)?(?:\.(\d+))?(\w)/;function Ds(e){return e instanceof Eo?rs(e.unsigned?e:Ts(function(e,t){return t?function(e){var t=e.high,n=e.low;return[255&n,n>>>8&255,n>>>16&255,n>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]}(e):function(e){var t=e.high,n=e.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,n>>>24,n>>>16&255,n>>>8&255,255&n]}(e)}(e),!0),16):(Number(e)>>>0).toString(16)}function Vs(e){return{input:e,cont:function(e){return function(t){return Rs.test(e)?function e(t,n){return function(){for(var r=t,a=arguments.length,o=new Array(a),s=0;s<a;s++)o[s]=arguments[s];for(var i=0;i<o.length;i++){var l=o[i];r=Us(r,l)}return Rs.test(r)?e(r,n):n(r.replace(/%%/g,"%"))}}(e,t):t(e)}}(e)}}function ks(e){return e.cont(function(e){return e})}function Us(e,t){return e.replace(Rs,function(e,n,r,a,o,s){switch(s){case"f":case"F":t=Number(t).toFixed(o||6);break;case"g":case"G":t=Number(t).toPrecision(o);break;case"e":case"E":t=Number(t).toExponential(o);break;case"O":t=g(t);break;case"A":t=g(t,!0);break;case"x":t=Ds(t);break;case"X":t=Ds(t).toUpperCase()}var i=r.indexOf("+")>=0&&parseInt(t,10)>=0;if(a=parseInt(a,10),!isNaN(a)){var l=a>=0&&r.indexOf("0")>=0?"0":" ";t=Ns(String(t),Math.abs(a)-(i?1:0),l,a<0)}return(n+(i?"+"+t:t)).replace(/%/g,"%%")})}function Os(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return n.map(function(e){return String(e)}).join(e)}function Ns(e,t,n,r){n=n||" ",t-=e.length;for(var a=0;a<t;a++)e=r?e+n:n+e;return e}function Ws(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var zs=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U);function js(){return new zs(0,"MapEmpty")}function _s(e){switch(e.tag){case 1:return 1;case 2:return 0|(0|e.fields[4]);default:return 0}}function Js(e,t,n,r){var a=[e,r];switch(0===a[0].tag&&0===a[1].tag?0:1){case 0:return new zs(1,"MapOne",t,n);case 1:var o=0|_s(e),s=0|_s(r);return new zs(2,"MapNode",t,n,e,r,(0|(o<s?s:o))+1)}}function Gs(e,t,n,r){var a=0|_s(e),o=0|_s(r);if(o>a+2){if(2===r.tag){var s=r.fields[1],i=r.fields[3],l=r.fields[2],p=r.fields[0];if(_s(l)>a+1){if(2===l.tag){var c=l.fields[1],u=l.fields[3],d=l.fields[2],m=l.fields[0];return Js(Js(e,t,n,d),m,c,Js(u,p,s,i))}throw new Error("rebalance")}return Js(Js(e,t,n,l),p,s,i)}throw new Error("rebalance")}if(a>o+2){if(2===e.tag){var h=e.fields[1],y=e.fields[3],g=e.fields[2],f=e.fields[0];if(_s(y)>o+1){if(2===y.tag){var b=y.fields[1],C=y.fields[3],T=y.fields[2],P=y.fields[0];return Js(Js(g,f,h,T),P,b,Js(C,t,n,r))}throw new Error("re  balance")}return Js(g,f,h,Js(y,t,n,r))}throw new Error("rebalance")}return Js(e,t,n,r)}function qs(e,t,n,r){switch(r.tag){case 1:var a=r.fields[0],o=0|e.Compare(t,a);return o<0?new zs(2,"MapNode",t,n,new zs(0,"MapEmpty"),r,2):0===o?new zs(1,"MapOne",t,n):new zs(2,"MapNode",t,n,r,new zs(0,"MapEmpty"),2);case 2:var s=r.fields[1],i=r.fields[3],l=r.fields[2],p=r.fields[0],c=0|r.fields[4],u=0|e.Compare(t,p);return u<0?Gs(qs(e,t,n,l),p,s,i):0===u?new zs(2,"MapNode",t,n,l,i,c):Gs(l,p,s,qs(e,t,n,i));default:return new zs(1,"MapOne",t,n)}}function Ys(e,t){var n=vs(t);try{return function(e,t,n){for(;;){if(!n.MoveNext())return t;var r=n.Current,a=e;t=qs(e,r[0],r[1],t),n=n,e=a}}(e,js(),n)}finally{i(n)&&n.Dispose()}}var Ks=E(function(e,t){this.stack=e,this.started=t},z);function $s(e){for(;;){if(null==e.tail)return k();if(1===e.head.tag)return e;2!==e.head.tag?e=e.tail:e=k(e.head.fields[2],k(new zs(1,"MapOne",e.head.fields[0],e.head.fields[1]),k(e.head.fields[3],e.tail)))}}function Zs(e){return new Ks($s(k(e,k())),!1)}function Xs(e){if(e.started){var t=e.stack;if(null==t.tail)return function(){throw new Error("enumeration already finished")}();if(1===t.head.tag)return[t.head.fields[0],t.head.fields[1]];throw new Error("Please report error: Map iterator, unexpected stack for current")}return function(){throw new Error("enumeration not started")}()}var Qs=E(function(e){this.s=e,this.i=Zs(this.s)});function ei(e){return function(e){return null!=this?Qs.call(this,e):new Qs(e)}(e)}Object.defineProperty(Qs.prototype,"Current",{get:function(){return Xs(this.i)}}),Qs.prototype.MoveNext=function(){return function(e){if(e.started){var t=e.stack;if(null==t.tail)return!1;if(1===t.head.tag)return e.stack=$s(t.tail),!(null==e.stack.tail);throw new Error("Please report error: Map iterator, unexpected stack for moveNext")}return e.started=!0,!(null==e.stack.tail)}(this.i)},Qs.prototype.Reset=function(){this.i=Zs(this.s)},Qs.prototype.Dispose=function(){};var ti=E(function(e,t){this.comparer=e,this.tree=t});function ni(e,t){return null!=this?ti.call(this,e,t):new ti(e,t)}function ri(e){return e.tree}function ai(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}ti.prototype.toString=function(){return"map ["+Os.apply(void 0,["; "].concat(Ws(Hs(function(e){return ks(Vs("(%A, %A)"))(e[0])(e[1])},this))))+"]"},ti.prototype.GetHashCode=function(){for(var e=function(e,t){return(e<<1)+t+631},t=0,n=ei(ri(this));n.MoveNext();){var r=n.Current;t=e(t=e(t,P(r[0])),P(r[1]))}return 0|Math.abs(t)},ti.prototype.Equals=function(e){return 0===this.CompareTo(e)},ti.prototype[Symbol.iterator]=function(){return Ms(ei(this.tree))},ti.prototype.CompareTo=function(e){var t=e,n=0,r=!1,a=ei(ri(this));try{var o=ei(ri(t));try{for(;!r&&0===n;){var s=[a.MoveNext(),o.MoveNext()];if(s[0])if(s[1]){var l=a.Current,p=o.Current,c=0|this.comparer.Compare(l[0],p[0]);n=0!==c?c:A(l[1],p[1])}else n=1;else s[1]?n=-1:r=!0}return 0|n}finally{i(o)&&o.Dispose()}}finally{i(a)&&a.Dispose()}};var oi=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U);function si(e){return new oi(2,"SetOne",e)}function ii(e,t,n,r){return new oi(1,"SetNode",e,t,n,r)}var li=E(function(e,t){this.stack=e,this.started=t},z);function pi(e){for(;;){if(null==e.tail)return k();if(2===e.head.tag)return e;1!==e.head.tag?e=e.tail:e=k(e.head.fields[1],k(si(e.head.fields[0]),k(e.head.fields[2],e.tail)))}}function ci(e){return new li(pi(k(e,k())),!1)}function ui(e){if(e.started){var t=e.stack;if(null==t.tail)return function(){throw new Error("Enumeration already started")}();if(2===t.head.tag)return t.head.fields[0];throw new Error("Please report error: Set iterator, unexpected stack for current")}return function(){throw new Error("Enumeration not started")}()}var di=E(function(e){this.s=e,this.i=ci(this.s)});function mi(e){return function(e){return null!=this?di.call(this,e):new di(e)}(e)}function hi(e,t,n){var r=[t,n];return 0===r[0].tag?0===r[1].tag?0:-1:0===r[1].tag?1:0|function(e,t,n){e:for(;;){var r,a,o,s,i,l,p,c,u,d,m,h,y,g,f,b,C,T,P,S,w,v,M,F,x,A,I,L,H,B,E,R,D,V,U,O,N=[t,n];switch(null!=N[0].tail?null!=N[1].tail?2===N[1].head.tag?2===N[0].head.tag?(r=4,s=N[0].head.fields[0],i=N[1].head.fields[0],l=N[0].tail,p=N[1].tail):1===N[0].head.tag?0===N[0].head.fields[1].tag?(r=6,y=N[0].head.fields[1],g=N[0].head.fields[0],f=N[0].head.fields[2],b=N[1].head.fields[0],C=N[0].tail,T=N[1].tail):(r=9,I=N[0].head.fields[0],L=N[0].head.fields[1],H=N[0].head.fields[2],B=N[0].tail):(r=10,E=N[1].head.fields[0],R=N[1].tail):1===N[1].head.tag?0===N[1].head.fields[1].tag?2===N[0].head.tag?(r=5,c=N[0].head.fields[0],u=N[1].head.fields[0],d=N[1].head.fields[2],m=N[0].tail,h=N[1].tail):1===N[0].head.tag?0===N[0].head.fields[1].tag?(r=7,P=N[0].head.fields[0],S=N[0].head.fields[2],w=N[1].head.fields[0],v=N[1].head.fields[2],M=N[0].tail,F=N[1].tail):(r=9,I=N[0].head.fields[0],L=N[0].head.fields[1],H=N[0].head.fields[2],B=N[0].tail):(r=11,D=N[1].head.fields[0],V=N[1].head.fields[1],U=N[1].head.fields[2],O=N[1].tail):2===N[0].head.tag?(r=8,x=N[0].head.fields[0],A=N[0].tail):1===N[0].head.tag?(r=9,I=N[0].head.fields[0],L=N[0].head.fields[1],H=N[0].head.fields[2],B=N[0].tail):(r=11,D=N[1].head.fields[0],V=N[1].head.fields[1],U=N[1].head.fields[2],O=N[1].tail):2===N[0].head.tag?(r=8,x=N[0].head.fields[0],A=N[0].tail):1===N[0].head.tag?(r=9,I=N[0].head.fields[0],L=N[0].head.fields[1],H=N[0].head.fields[2],B=N[0].tail):(r=3,a=N[0].tail,o=N[1].tail):r=2:r=null!=N[1].tail?1:0,r){case 0:return 0;case 1:return-1;case 2:return 1;case 3:e=e,t=a,n=o;continue e;case 4:var W=0|e.Compare(s,i);if(0!==W)return 0|W;e=e,t=l,n=p;continue e;case 5:var z=0|e.Compare(c,u);if(0!==z)return 0|z;e=e,t=k(new oi(0,"SetEmpty"),m),n=k(d,h);continue e;case 6:var j=0|e.Compare(g,b);if(0!==j)return 0|j;e=e,t=k(f,C),n=k(y,T);continue e;case 7:var _=0|e.Compare(P,w);if(0!==_)return 0|_;e=e,t=k(S,M),n=k(v,F);continue e;case 8:e=e,t=k(new oi(0,"SetEmpty"),k(si(x),A)),n=n;continue e;case 9:e=e,t=k(L,k(ii(I,new oi(0,"SetEmpty"),H,0),B)),n=n;continue e;case 10:e=e,t=t,n=k(new oi(0,"SetEmpty"),k(si(E),R));continue e;case 11:e=e,t=t,n=k(V,k(ii(D,new oi(0,"SetEmpty"),U,0),O));continue e}}}(e,k(t,k()),k(n,k()))}Object.defineProperty(di.prototype,"Current",{get:function(){return ui(this.i)}}),di.prototype.MoveNext=function(){return function(e){if(e.started){var t=e.stack;if(null==t.tail)return!1;if(2===t.head.tag)return e.stack=pi(t.tail),!(null==e.stack.tail);throw new Error("Please report error: Set iterator, unexpected stack for moveNext")}return e.started=!0,!(null==e.stack.tail)}(this.i)},di.prototype.Reset=function(){this.i=ci(this.s)},di.prototype.Dispose=function(){};var yi=E(function(e,t){this.comparer=e,this.tree=t});function gi(e){return e.comparer}function fi(e){return e.tree}function bi(e,t,n){return function(e,t,n,r){for(;;){var a=e,o=t,s=n,i=r;if(null==i.tail)return s;var l=i.tail;e=a,t=o+1,n=a(o,s,i.head),r=l}}(e,0,t,n)}function Ci(e,t,n){for(;;){var r=e,a=t,o=n;if(null==o.tail)return a;var s=o.tail;e=r,t=r(a,o.head),n=s}}function Ti(e){return Ci(function(e,t){return k(t,e)},k(),e)}function Pi(e){return Ti(Ls(function(e,t){return k(t,e)},k(),e))}function Si(e,t){return Pi(function(e,t){return xs(Hs(e,t))}(e,t))}function wi(e,t){return Ti(Ci(function(t,n){return k(e(n),t)},k(),t))}function vi(e,t){return Ti(bi(function(t,n,r){return k(e(t,r),n)},k(),t))}function Mi(e,t){Ci(function(t,n){e(n)},null,t)}function Fi(e){return function(e,t,n){return t.reduceRight(function(t,n){return e(n,t)},n)}(function(e,t){return k(e,t)},e,k())}yi.prototype.toString=function(){return"set ["+Os.apply(void 0,["; "].concat(ai(Hs(g,this))))+"]"},yi.prototype.GetHashCode=function(){for(var e=function(e,t){return(e<<1)+t+631},t=0,n=mi(fi(this));n.MoveNext();)t=e(t,P(n.Current));return 0|Math.abs(t)},yi.prototype.Equals=function(e){return 0===hi(gi(this),fi(this),fi(e))},yi.prototype.CompareTo=function(e){return 0|hi(gi(this),fi(this),fi(e))},yi.prototype[Symbol.iterator]=function(){return Ms(mi(fi(this)))};E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U);var xi=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),Ai=E(function(e){this.__html=e},z),Ii=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),Li=(E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U)),Hi=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U);Co.createElement;function Bi(e){return function(e,t){return new Li(22,"ClassName",Ci(function(e,t){return t[1]?e+" "+t[0]:e},e,t))}("",e)}function Ei(e){return e.target.value}E(function(e,t,n,r,a){this.key=e,this.props=t,this.update=n,this.view=r,this.init=a},z);var Ri=E(function(e){this.value=e},z),Di=E(function(e,t,n){this.props=e,this.state=t,this.children=n},z),Vi=E(function(e){Co.Component.call(this,e),this.state=new Ri(e.init(e.props))},Co.Component);function ki(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Ui(e){return H(e,1)}function Oi(e){return Os.apply(void 0,[" "].concat(ki(function(e,t){return Ti(Ci(function(t,n){var r=e(n);return null==r?t:k(wo(r),t)},k(),t))}(function(e){return e[1]?e[0]:null},e))))}function Ni(e,t){return[e,Ui(t)]}Vi.prototype.render=function(){var e=this,t=new Di(e.props.props,e.state.value,Array.prototype.concat(e.props.children||[]));return e.props.view(t,function(t){var n=e.props.update(t,e.state.value);e.setState(function(e,t){return new Ri(n)})})};var Wi=n(205),zi=n.n(Wi),ji=n(98),_i=n.n(ji),Ji=n(206),Gi=n.n(Ji),qi=(n(421),n(422),n(423),n(424),n(425),n(426),n(427),n(532),Gi.a);var Yi=new _i.a.Renderer;Yi.link=function(e,t,n){return 0===e.indexOf("http")?ks(Vs('<a href="%s" target="_blank" title="%s">%s</a>'))(e)(t)(n):ks(Vs('<a href="%s" title="%s">%s</a>'))(e)(t)(n)};var Ki={};Ki.gfm=!0,Ki.tables=!0,Ki.breaks=!1,Ki.pedantic=!1,Ki.sanitize=!1,Ki.smartLists=!0,Ki.smartypants=!1,Ki.highlight=function(e,t){return qi.highlight(e,function(e){var t;switch(e){case"fsharp":t=0;break;case"js":case"jsx":t=1;break;case"css":t=2;break;case"shell":case"sh":t=3;break;default:t=4}switch(t){case 0:return qi.languages.fsharp;case 1:return qi.languages.javascript;case 2:return qi.languages.css;case 3:return qi.languages.shell;case 4:return qi.languages.fsharp}}(t))},Ki.renderer=Yi;var $i=ho(function(e){return k(Le("markdown",k(new Hi(149,"FontFamily",e.typography.fontFamily),k(new Hi(153,"FontSize",16),k(new Hi(103,"Color",e.palette.text.primary),k(Ni("& .anchor-link",[new Hi(225,"MarginTop",-96),new Hi(291,"Position","absolute")]),k(Ni('& pre, & pre[class*="language-"]',[new Hi(217,"Margin","24px 0"),new Hi(273,"Padding","12px 18px"),new Hi(21,"BackgroundColor",e.palette.background.paper),new Hi(69,"BorderRadius",e.shape.borderRadius),new Hi(268,"Overflow","auto"),["WebkitOverflowScrolling","touch"]]),k(Ni("& code",[new Hi(125,"Display","inline-block"),new Hi(212,"LineHeight",1.6),new Hi(149,"FontFamily",'Consolas, "Liberation Mono", Menlo, Courier, monospace'),new Hi(273,"Padding","3px 6px"),new Hi(103,"Color",e.palette.text.primary),new Hi(21,"BackgroundColor",e.palette.background.paper),new Hi(153,"FontSize",14)]),k(Ni("& p code, & ul code, & pre code",[new Hi(153,"FontSize",14),new Hi(212,"LineHeight",1.6)]),k(Ni("& h1",[new Hi(149,"FontFamily",e.typography.display2.fontFamily),new Hi(153,"FontSize",e.typography.display2.fontSize),new Hi(165,"FontWeight",e.typography.display2.fontWeight),new Hi(212,"LineHeight",e.typography.display2.lineHeight),new Hi(208,"LetterSpacing",e.typography.display2.letterSpacing),new Hi(362,"TextTransform",e.typography.display2.textTransform),new Hi(103,"Color",e.palette.text.secondary),new Hi(217,"Margin","32px 0 16px")]),k(Ni("& .description",[new Hi(149,"FontFamily",e.typography.headline.fontFamily),new Hi(153,"FontSize",e.typography.headline.fontSize),new Hi(165,"FontWeight",e.typography.headline.fontWeight),new Hi(212,"LineHeight",e.typography.headline.lineHeight),new Hi(208,"LetterSpacing",e.typography.headline.letterSpacing),new Hi(362,"TextTransform",e.typography.headline.textTransform),new Hi(217,"Margin","0 0 40px")]),k(Ni("& h2",[new Hi(149,"FontFamily",e.typography.display1.fontFamily),new Hi(153,"FontSize",e.typography.display1.fontSize),new Hi(165,"FontWeight",e.typography.display1.fontWeight),new Hi(212,"LineHeight",e.typography.display1.lineHeight),new Hi(208,"LetterSpacing",e.typography.display1.letterSpacing),new Hi(362,"TextTransform",e.typography.display1.textTransform),new Hi(103,"Color",e.palette.text.secondary),new Hi(217,"Margin","32px 0 24px")]),k(Ni("& h3",[new Hi(149,"FontFamily",e.typography.headline.fontFamily),new Hi(153,"FontSize",e.typography.headline.fontSize),new Hi(165,"FontWeight",e.typography.headline.fontWeight),new Hi(212,"LineHeight",e.typography.headline.lineHeight),new Hi(208,"LetterSpacing",e.typography.headline.letterSpacing),new Hi(362,"TextTransform",e.typography.headline.textTransform),new Hi(103,"Color",e.palette.text.secondary),new Hi(217,"Margin","32px 0 24px")]),k(Ni("& h4",[new Hi(149,"FontFamily",e.typography.title.fontFamily),new Hi(153,"FontSize",e.typography.title.fontSize),new Hi(165,"FontWeight",e.typography.title.fontWeight),new Hi(212,"LineHeight",e.typography.title.lineHeight),new Hi(208,"LetterSpacing",e.typography.title.letterSpacing),new Hi(362,"TextTransform",e.typography.title.textTransform),new Hi(103,"Color",e.palette.text.secondary),new Hi(217,"Margin","24px 0 16px")]),k(Ni("& p, & ul, & ol",[new Hi(212,"LineHeight",1.6)]),k(Ni("& h1, & h2, & h3, & h4",[Ni("& code",[new Hi(153,"FontSize","inherit"),new Hi(212,"LineHeight","inherit"),new Hi(396,"WordBreak","break-word")]),Ni("& .anchor-link-style",[new Hi(260,"Opacity",0),new Hi(125,"Display","none")]),Ni("&:hover .anchor-link-style",[new Hi(125,"Display","inline-block"),new Hi(260,"Opacity",1),new Hi(273,"Padding","0 8px"),new Hi(103,"Color",e.palette.text.hint),Ni("&:hover",[new Hi(103,"Color",e.palette.text.secondary)]),Ni("& svg",[new Hi(394,"Width","0.55em"),new Hi(189,"Height","0.55em"),new Hi(129,"Fill","currentColor")])])]),k(Ni("& strong",[new Hi(165,"FontWeight",e.typography.fontWeightMedium)]),k(Ni("& blockquote",[new Hi(65,"BorderLeft","5px solid "+e.palette.text.hint),new Hi(21,"BackgroundColor",e.palette.background.paper),new Hi(273,"Padding","4px 24px"),new Hi(217,"Margin","24px 0")]),k(Ni("& a, & a code",[new Hi(103,"Color",e.palette.secondary.main),new Hi(329,"TextDecoration","none"),Ni("&:hover",[new Hi(329,"TextDecoration","underline")])]),k(Ni("& img",[new Hi(248,"MaxWidth","100%")]),k()))))))))))))))))))),k())},k(new Ve(2,"Flip",!1),k()),function(e){var t=_i()(e.text,Ki);return Co.createElement.apply(void 0,["div",{className:e.classes.markdown,dangerouslySetInnerHTML:new Ai(t)}].concat([]))});function Zi(e){var t={};return t.text=e,Co.createElement.apply(void 0,[$i,t].concat([]))}var Xi=zi.a;var Qi=n(207),el=n.n(Qi).a;var tl=n(208),nl=n.n(tl).a;var rl=n(209),al=n.n(rl);var ol=ho(k(Le("root",k(new Hi(138,"FlexGrow",1),k())),k()),k(),function(e){return Co.createElement.apply(void 0,["div",{className:e.classes.root}].concat([Co.createElement.apply(void 0,[Va,{position:"static",color:"default"}].concat([Co.createElement.apply(void 0,[po,{}].concat([Co.createElement.apply(void 0,[uo,{variant:"h6",color:"inherit"}].concat(["Photos"]))]))]))]))});function sl(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var il=n(428);var ll=E(function(e){this.expanded=e},z);var pl=E(function(e){Co.PureComponent.call(this,e),this.state=new ll(!1)},Co.PureComponent);pl.prototype.render=function(){var e,t=this,n=il(t.props.demoPath),r=t.props.classes;return Co.createElement.apply(void 0,[Co.Fragment,{}].concat([Zi(t.props.title),Co.createElement.apply(void 0,["div",{className:r.root}].concat([Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,["div",{className:r.header}].concat([Co.createElement.apply(void 0,[co,{placement:"top",title:t.state.expanded?"Hide source":"Show source"}].concat([Co.createElement.apply(void 0,[Ka,(e={},sl(e,"aria-label","Source of demo"),sl(e,"onClick",function(e){!function(e,t){e.setState(function(e,t){return new ll(!e.expanded)})}(t)}),e)].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["code"]))]))]))])),Co.createElement.apply(void 0,[Na,{in:t.state.expanded,unmountOnExit:!0}].concat([Co.createElement.apply(void 0,["div",{className:r.code}].concat([Zi(function(e){return ks(Vs("\r\n```fsharp\r\n%s\r\n```\r\n    "))(e)}(n))]))]))])),Co.createElement.apply(void 0,["div",{className:r.demo}].concat([t.props.demoElement()]))]))]))};var cl=ho(function(e){var t=e.breakpoints.up("sm"),n=e.mixins.gutters(Ui([new Hi(69,"BorderRadius",e.shape.borderRadius),new Hi(21,"BackgroundColor",e.palette.grey[200]),new Hi(125,"Display","flex"),new Hi(200,"JustifyContent","center"),new Hi(281,"PaddingTop",2*e.spacing.unit),new Hi(276,"PaddingBottom",2*e.spacing.unit),Ni(t,[new Hi(279,"PaddingLeft",3*e.spacing.unit),new Hi(280,"PaddingRight",3*e.spacing.unit),new Hi(281,"PaddingTop",6*e.spacing.unit),new Hi(276,"PaddingBottom",3*e.spacing.unit)])]));return k(Le("root",k(new Hi(291,"Position","relative"),k(new Hi(220,"MarginBottom",40),k(new Hi(223,"MarginLeft",2*-e.spacing.unit),k(new Hi(224,"MarginRight",2*-e.spacing.unit),k(Ni(t,[new Hi(273,"Padding",ks(Vs("0 %ipx"))(e.spacing.unit)),new Hi(223,"MarginLeft",0),new Hi(224,"MarginRight",0)]),k())))))),k(["demo",n],k(Le("header",k(new Hi(125,"Display","none"),k(Ni(t,[new Hi(125,"Display","flex"),["flip",!1],new Hi(291,"Position","absolute"),new Hi(365,"Top",0),new Hi(298,"Right",e.spacing.unit)]),k()))),k(Le("code",k(new Hi(125,"Display","none"),k(new Hi(273,"Padding",0),k(new Hi(217,"Margin",0),k(Ni(t,[new Hi(125,"Display","block")]),k(Ni("& pre",[new Hi(268,"Overflow","auto"),new Hi(217,"Margin","0px !important"),new Hi(69,"BorderRadius","0px !important")]),k())))))),k()))))},k(),function(e){return Co.createElement.apply(void 0,[pl,e].concat([]))});function ul(e,t,n){var r={};return r.demoPath=t,r.title=e,r.demoElement=n,Co.createElement.apply(void 0,[cl,r].concat([]))}var dl=ho(k(Le("root",k(new Hi(138,"FlexGrow",1),k())),k(Le("flex",k(new Hi(138,"FlexGrow",1),k())),k(Le("menuButton",k(new Hi(223,"MarginLeft",-12),k(new Hi(224,"MarginRight",20),k()))),k()))),k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{className:t.root}].concat([Co.createElement.apply(void 0,[Va,{position:"static"}].concat([Co.createElement.apply(void 0,[po,{}].concat([Co.createElement.apply(void 0,[Ka,function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({className:t.menuButton,color:"inherit"},"aria-label","Menu")].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["menu"]))])),Co.createElement.apply(void 0,[uo,{className:t.flex,variant:"h6",color:"inherit"}].concat(["News"])),Co.createElement.apply(void 0,[Ua,{color:"inherit"}].concat(["Login"]))]))]))]))});var ml=al.a;function hl(){return Co.createElement.apply(void 0,["div",{}].concat([Zi(ml),ul("## Simple App Bar","./Demos/AppBar/SimpleAppBar.fs",function(){return Co.createElement.apply(void 0,[ol,{}].concat([]))}),ul("## App Bar with buttons","./Demos/AppBar/AppBarWithButtons.fs",function(){return Co.createElement.apply(void 0,[dl,{}].concat([]))})]))}var yl=n(210),gl=n.n(yl);function fl(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function bl(e){return k(Le("button",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("input",k(new Hi(125,"Display","none"),k())),k()))}function Cl(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,{className:t.button}].concat(["Default"])),Co.createElement.apply(void 0,[Ua,{color:"primary",className:t.button}].concat(["Primary"])),Co.createElement.apply(void 0,[Ua,{color:"secondary",className:t.button}].concat(["Secondary"])),Co.createElement.apply(void 0,[Ua,{disabled:!0,className:t.button}].concat(["Disabled"])),Co.createElement.apply(void 0,[Ua,{href:"#/demos/buttons",className:t.button}].concat(["Link"])),Co.createElement.apply(void 0,["input",{accept:"image/*",className:t.input,id:"flat-button-file",multiple:!0,type:"file"}].concat(fl(k()))),Co.createElement.apply(void 0,["label",{htmlFor:"flat-button-file"}].concat([Co.createElement.apply(void 0,[Ua,{component:"span",className:t.button}].concat(["Upload"]))]))]))}function Tl(){return Co.createElement.apply(void 0,[ho(bl,k(),Cl),{}].concat([]))}function Pl(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Sl(e){return k(Le("button",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("input",k(new Hi(125,"Display","none"),k())),k()))}function wl(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,{variant:"outlined",className:t.button}].concat(["Default"])),Co.createElement.apply(void 0,[Ua,{variant:"outlined",color:"primary",className:t.button}].concat(["Primary"])),Co.createElement.apply(void 0,[Ua,{variant:"outlined",color:"secondary",className:t.button}].concat(["Secondary"])),Co.createElement.apply(void 0,[Ua,{variant:"outlined",disabled:!0,className:t.button}].concat(["Disabled"])),Co.createElement.apply(void 0,[Ua,{variant:"outlined",href:"#/demos/buttons",className:t.button}].concat(["Link"])),Co.createElement.apply(void 0,["input",{accept:"image/*",className:t.input,id:"outlined-button-file",multiple:!0,type:"file"}].concat(Pl(k()))),Co.createElement.apply(void 0,["label",{htmlFor:"outlined-button-file"}].concat([Co.createElement.apply(void 0,[Ua,{variant:"outlined",component:"span",className:t.button}].concat(["Upload"]))]))]))}function vl(){return Co.createElement.apply(void 0,[ho(Sl,k(),wl),{}].concat([]))}function Ml(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Fl(e){return k(Le("button",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("input",k(new Hi(125,"Display","none"),k())),k()))}function xl(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,{variant:"contained",className:t.button}].concat(["Default"])),Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"primary",className:t.button}].concat(["Primary"])),Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"secondary",className:t.button}].concat(["Secondary"])),Co.createElement.apply(void 0,[Ua,{variant:"contained",disabled:!0,className:t.button}].concat(["Disabled"])),Co.createElement.apply(void 0,[Ua,{variant:"contained",href:"#/demos/buttons",className:t.button}].concat(["Link"])),Co.createElement.apply(void 0,["input",{accept:"image/*",className:t.input,id:"contained-button-file",multiple:!0,type:"file"}].concat(Ml(k()))),Co.createElement.apply(void 0,["label",{htmlFor:"contained-button-file"}].concat([Co.createElement.apply(void 0,[Ua,{variant:"contained",component:"span",className:t.button}].concat(["Upload"]))]))]))}function Al(){return Co.createElement.apply(void 0,[ho(Fl,k(),xl),{}].concat([]))}var Il=ho(function(e){return k(Le("button",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("extendedIcon",k(new Hi(224,"MarginRight",e.spacing.unit),k())),k()))},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,{variant:"fab",color:"primary",className:t.button}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["add_icon"]))])),Co.createElement.apply(void 0,[Ua,{variant:"fab",color:"secondary",className:t.button}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["edit_icon"]))])),Co.createElement.apply(void 0,[Ua,{variant:"extendedFab",className:t.button}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["navigation_icon"])),"Extended"])),Co.createElement.apply(void 0,[Ua,{variant:"fab",disabled:!0,className:t.button}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["delete_icon"]))]))]))});function Ll(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Hl(e){return Co.createElement.apply(void 0,[uo,H([new Ue(4,"Component","div"),["style",{padding:24}]],1)].concat(Ll(e)))}var Bl=E(function(e,t,n){this.color=e,this.className=t,this.icon=n},z),El=E(function(e){this.value=0|e},z),Rl=E(function(e){Co.Component.call(this,e),this.state=new El(0)},Co.Component);Rl.prototype.render=function(){var e=this,t=e.props.classes,n=e.props.theme,r=n.transitions.duration.leavingScreen,a=k(new ke(0,"Enter",n.transitions.duration.enteringScreen),k(new ke(1,"Exit",r),k())),o=k(new Bl("primary",t.fab,Co.createElement.apply(void 0,[Ya,{}].concat(["add_icon"]))),k(new Bl("secondary",t.fab,Co.createElement.apply(void 0,[Ya,{}].concat(["edit_icon"]))),k(new Bl("inherit",t.fab+" "+t.fabGreen,Co.createElement.apply(void 0,[Ya,{}].concat(["keyboard_arrow_up_icon"]))),k())));return Co.createElement.apply(void 0,["div",{className:t.root}].concat(Ll(Pi(As(function(){return Fs(Bs(Co.createElement.apply(void 0,[Va,{position:"static",color:"default"}].concat([Co.createElement.apply(void 0,[io,{value:e.state.value,onChange:function(t,n){!function(e,t,n){e.setState(function(e,t){return new El(n)})}(e,0,n)},indicatorColor:"primary",textColor:"primary",fullWidth:!0}].concat([Co.createElement.apply(void 0,[so,{label:"Item One"}].concat([])),Co.createElement.apply(void 0,[so,{label:"Item Two"}].concat([])),Co.createElement.apply(void 0,[so,{label:"Item Three"}].concat([]))]))]))),As(function(){return Fs(Bs(1===e.state.value?Hl(["Item Two"]):2===e.state.value?Hl(["Item Three"]):Hl(["Item One"])),As(function(){return vi(function(t,n){return Co.createElement.apply(void 0,[mo,H([new xi(0,"Key",String(n.color)),new Ue(15,"In",e.state.value===t),function(e){return["timeout",e instanceof V?H(e,1):e]}(a),["style",{transitionDelay:ks(Vs("%.0fms"))(e.state.value===t?r:0)}],new Oe(1,"UnmountOnExit",!0)],1)].concat([Co.createElement.apply(void 0,[Ua,{variant:"fab",className:n.className,color:n.color}].concat([n.icon]))]))},o)}))}))})))))};var Dl=ho(function(e){return k(Le("root",k(new Hi(21,"BackgroundColor",e.palette.background.paper),k(new Hi(394,"Width",500),k(new Hi(291,"Position","relative"),k(new Hi(250,"MinHeight",200),k()))))),k(Le("fab",k(new Hi(291,"Position","absolute"),k(new Hi(83,"Bottom",2*e.spacing.unit),k(new Hi(298,"Right",2*e.spacing.unit),k())))),k(Le("fabGreen",k(new Hi(103,"Color",e.palette.common.white),k(new Hi(21,"BackgroundColor",Re[500]),k()))),k())))},k(new Ve(0,"WithTheme",!0),k()),function(e){return Co.createElement.apply(void 0,[Rl,e].concat([]))});function Vl(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function kl(e){return k(Le("button",k(new Hi(217,"Margin",e.spacing.unit),k())),k())}function Ul(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,{size:"small",className:t.button}].concat(["Small"])),Co.createElement.apply(void 0,[Ua,{size:"medium",className:t.button}].concat(["Medium"])),Co.createElement.apply(void 0,[Ua,{size:"large",className:t.button}].concat(["Large"]))])),Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,{size:"small",variant:"outlined",color:"primary",className:t.button}].concat(["Small"])),Co.createElement.apply(void 0,[Ua,{size:"medium",variant:"outlined",color:"primary",className:t.button}].concat(["Medium"])),Co.createElement.apply(void 0,[Ua,{size:"large",variant:"outlined",color:"primary",className:t.button}].concat(["Large"]))])),Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,{size:"small",variant:"contained",color:"primary",className:t.button}].concat(["Small"])),Co.createElement.apply(void 0,[Ua,{size:"medium",variant:"contained",color:"primary",className:t.button}].concat(["Medium"])),Co.createElement.apply(void 0,[Ua,{size:"large",variant:"contained",color:"primary",className:t.button}].concat(["Large"]))])),Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,Vl({variant:"fab",mini:!0,color:"secondary",className:t.button},"aria-label","Add")].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["add_icon"]))])),Co.createElement.apply(void 0,[Ua,Vl({variant:"fab",color:"secondary",className:t.button},"aria-label","Add")].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["add_icon"]))]))]))]))}function Ol(){return Co.createElement.apply(void 0,[ho(kl,k(),Ul),{}].concat([]))}function Nl(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Wl(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function zl(e){return k(Le("button",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("input",k(new Hi(125,"Display","none"),k())),k()))}function jl(e){var t,n,r,a,o=e.classes;return Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ka,(t={},Wl(t,"aria-label","Delete"),Wl(t,"className",o.button),t)].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["delete_icon"]))])),Co.createElement.apply(void 0,[Ka,(n={color:"primary",disabled:!0},Wl(n,"aria-label","Delete"),Wl(n,"className",o.button),n)].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["delete_icon"]))])),Co.createElement.apply(void 0,[Ka,(r={color:"secondary"},Wl(r,"aria-label","Add an alarm"),Wl(r,"className",o.button),r)].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["alarm_icon"]))])),Co.createElement.apply(void 0,[Ka,(a={color:"primary"},Wl(a,"aria-label","Add to shopping cart"),Wl(a,"className",o.button),a)].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["add_shopping_cart_icon"]))])),Co.createElement.apply(void 0,["input",{accept:"image/*",className:o.input,id:"icon-button-file",type:"file"}].concat(Nl(k()))),Co.createElement.apply(void 0,["label",{htmlFor:"icon-button-file"}].concat([Co.createElement.apply(void 0,[Ka,{color:"primary",component:"span",className:o.button}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["photo_camera_icon"]))]))]))]))}function _l(){return Co.createElement.apply(void 0,[ho(zl,k(),jl),{}].concat([]))}var Jl=ho(function(e){return k(Le("button",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("leftIcon",k(new Hi(224,"MarginRight",e.spacing.unit),k())),k(Le("rightIcon",k(new Hi(223,"MarginLeft",e.spacing.unit),k())),k(Le("iconSmall",k(new Hi(153,"FontSize",20),k())),k()))))},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"secondary",className:t.button}].concat(["Delete",Co.createElement.apply(void 0,[Ya,{className:t.rightIcon}].concat(["delete_icon"]))])),Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"primary",className:t.button}].concat(["Send",Co.createElement.apply(void 0,[Ya,{className:t.rightIcon}].concat(["send"]))])),Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"default",className:t.button}].concat(["Upload",Co.createElement.apply(void 0,[Ya,{className:t.rightIcon}].concat(["cloud_up"]))])),Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"secondary",disabled:!0,className:t.button}].concat([Co.createElement.apply(void 0,[Ya,{className:t.leftIcon}].concat(["keyboard_voice"])),"Talk"])),Co.createElement.apply(void 0,[Ua,{variant:"contained",size:"small",className:t.button}].concat([Co.createElement.apply(void 0,[Ya,{className:t.leftIcon+" "+t.iconSmall}].concat(["save"])),"Save"]))]))});function Gl(e){return H(e,1)}var ql=go(k(["typography",{useNextVariants:!0}],k(["palette",{primary:{main:Re[500]}}],k())));var Yl=ho(function(e){return k(Le("container",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("margin",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("cssRoot",k(new Hi(103,"Color",e.palette.getContrastText(Be[500])),k(new Hi(21,"BackgroundColor",Be[500]),k(["&:hover",Gl(k(new Hi(21,"BackgroundColor",Be[700]),k()))],k())))),k(Le("boostrapRoot",k(new Hi(92,"BoxShadow","none"),k(new Hi(362,"TextTransform","none"),k(new Hi(153,"FontSize",16),k(new Hi(273,"Padding","6px 12px"),k(new Hi(33,"Border","1px solid"),k(new Hi(21,"BackgroundColor","#007bff"),k(new Hi(49,"BorderColor","#007bff"),k(new Hi(149,"FontFamily",Os.apply(void 0,[","].concat(["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"']))),k(["&:hover",Gl(k(new Hi(21,"BackgroundColor","#0069d9"),k(new Hi(49,"BorderColor","#0069d9"),k())))],k(["&:active",Gl(k(new Hi(92,"BoxShadow","none"),k(new Hi(21,"BackgroundColor","#0062cc"),k(new Hi(49,"BorderColor","#0062cc"),k()))))],k(["&:focus",Gl(k(new Hi(92,"BoxShadow","0 0 0 0.2rem rgba(0,123,255,.5)"),k()))],k())))))))))))),k()))))},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{className:t.container}].concat([Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"primary",className:Os.apply(void 0,[" "].concat([t.margin,t.cssRoot]))}].concat(["Custom CSS"])),Co.createElement.apply(void 0,[yo,{theme:ql}].concat([Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"primary",className:t.margin}].concat(["MuiThemeProvider"]))])),Co.createElement.apply(void 0,[Ua,{variant:"contained",color:"primary",disableRipple:!0,className:Os.apply(void 0,[" "].concat([t.margin,t.bootstrapRoot]))}].concat(["Bootstrap"]))]))});var Kl=gl.a,$l="\r\n## Text Buttons\r\n\r\n[Text buttons](https://material.io/design/components/buttons.html#text-button)\r\nare typically used for less-pronounced actions, including those located:\r\n\r\n- In dialogs\r\n- In cards\r\n\r\nIn cards, text buttons help maintain an emphasis on card content.\r\n",Zl="\r\n## Outlined Buttons\r\n\r\n[Outlined buttons](https://material.io/design/components/buttons.html#outlined-button)\r\nare medium-emphasis buttons. They contain actions that are important,\r\nbut aren’t the primary action in an app.\r\n\r\n### Alternatives\r\n\r\nOutlined buttons are also a lower emphasis alternative to contained buttons,\r\nor a higher emphasis alternative to text buttons.\r\n",Xl="\r\n## Contained Buttons\r\n\r\n[Contained buttons](https://material.io/design/components/buttons.html#contained-button)\r\nare high-emphasis, distinguished by their use of elevation and fill.\r\nThey contain actions that are primary to your app.\r\n\r\nThe last example of this demo show how to use an upload button.\r\n",Ql="\r\n## Floating Action Buttons\r\n\r\nA [floating action button](https://material.io/design/components/buttons-floating-action-button.html)\r\n(FAB) performs the primary, or most common, action on a screen.\r\nIt appears in front of all screen content, typically as a circular shape with an icon in its center.\r\nFABs come in three types: regular, mini, and extended.\r\n\r\nOnly use a FAB if it is the most suitable way to present a screen’s primary action.\r\n\r\nOnly one floating action button is recommended per screen to represent the most common action.\r\n",ep="\r\nThe floating action button animates onto the screen as an expanding piece of material, by default.\r\n\r\nA floating action button that spans multiple lateral screens (such as tabbed screens) should briefly disappear,\r\nthen reappear if its action changes.\r\n\r\nThe Zoom transition can be used to achieve this. Note that since both the exiting and entering\r\nanimations are triggered at the same time, we use `enterDelay` to allow the outgoing Floating Action Button's\r\nanimation to finish before the new one enters.\r\n",tp="\r\n## Sizes\r\n\r\nFancy larger or smaller buttons? Use the `ButtonProp.Size` or the `ButtonProp.Mini` property.\r\n",np="\r\n## Icon Buttons\r\n\r\nIcon buttons are commonly found in app bars and toolbars.\r\n\r\nIcons are also appropriate for toggle buttons that allow a single choice to be selected or\r\ndeselected, such as adding or removing a star to an item.\r\n",rp="\r\n### Buttons with icons and label\r\n\r\nSometimes you might want to have icons for certain button to enhance the UX of the application as we recognize logos more easily than plain text. For example, if you have a delete button you can label it with a dustbin icon.\r\n",ap="\r\n## Customized Buttons\r\n\r\nIf you have been reading the [overrides documentation page](#/customization/overrides)\r\nbut you are not confident jumping in,\r\nhere are examples of how you can change the main color of a Button using classes,\r\nand using a theme; and of a Bootstrap style Button.\r\n";function op(){return Co.createElement.apply(void 0,["div",{}].concat([Zi(Kl),ul($l,"./Demos/Buttons/TextButtons.fs",function(){return Tl()}),ul(Zl,"./Demos/Buttons/OutlinedButtons.fs",function(){return vl()}),ul(Xl,"./Demos/Buttons/ContainedButtons.fs",function(){return Al()}),ul(Ql,"./Demos/Buttons/FloatingActionButtons.fs",function(){return Co.createElement.apply(void 0,[Il,{}].concat([]))}),ul(ep,"./Demos/Buttons/FloatingActionButtonZoom.fs",function(){return Co.createElement.apply(void 0,[Dl,{}].concat([]))}),ul(tp,"./Demos/Buttons/ButtonSizes.fs",function(){return Ol()}),ul(np,"./Demos/Buttons/IconButtons.fs",function(){return _l()}),ul(rp,"./Demos/Buttons/IconLabelButtons.fs",function(){return Co.createElement.apply(void 0,[Jl,{}].concat([]))}),ul(ap,"./Demos/Buttons/CustomizedButtons.fs",function(){return Co.createElement.apply(void 0,[Yl,{}].concat([]))})]))}var sp=n(211),ip=n.n(sp);function lp(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var pp=k(["$","USD"],k(["€","EUR"],k(["฿","BTC"],k(["¥","JPY"],k())))),cp=E(function(e,t,n,r){this.name=e,this.age=t,this.multiline=n,this.currency=r},z),up=E(function(e){Co.Component.call(this,e),this.state=new cp("Cat in the Hat","","Controlled","EUR")},Co.Component);function dp(e,t){var n=Ei(t);e.setState(function(e,t){return new cp(e.name,e.age,e.multiline,n)})}up.prototype.render=function(){var e=this;return Co.createElement.apply(void 0,["form",{className:e.props.classes.container,noValidate:!0,autoComplete:"off"}].concat([Co.createElement.apply(void 0,[lo,{id:"standard-name",label:"Name",className:e.props.classes.textField,value:e.state.name,onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new cp(n,e.age,e.multiline,e.currency)})}(e,t)},margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-uncontrolled",label:"Uncontrolled",className:e.props.classes.textField,defaultValue:"foo",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-required",label:"Required",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",required:!0}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-error",label:"Error",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",error:!0}].concat([])),Co.createElement.apply(void 0,[lo,{disabled:!0,id:"standard-disabled",label:"Disabled",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-password-input",label:"Password",className:e.props.classes.textField,type:"password",autoComplete:"current-password",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-read-only-input",label:"Read Only",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",InputProps:{readOnly:!0}}].concat([])),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","standard-dense"),new Li(64,"Label","Dense"),Bi(k([e.props.classes.textField,!0],k([e.props.classes.dense,!0],k()))),new Ue(20,"Margin","dense")],1)].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:4,value:e.state.multiline,onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new cp(e.name,e.age,n,e.currency)})}(e,t)},margin:"normal",className:e.props.classes.textField}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-multiline-static",label:"Multiline",className:e.props.classes.textField,rows:4,multiline:!0,defaultValue:"Default Value",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-helperText",label:"Helper text",className:e.props.classes.textField,defaultValue:"Default Value",helperText:"Some important text",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.props.classes.textField,margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-textarea",label:"With placeholder multiline",placeholder:"Placeholder",className:e.props.classes.textField,multiline:!0,margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-number",label:"Number",value:e.state.age,type:"number",onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new cp(e.name,n,e.multiline,e.currency)})}(e,t)},InputLabelProps:{shrink:!0},className:e.props.classes.textField,margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-search",label:"Search field",className:e.props.classes.textField,type:"search",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-select-currency",label:"Select",className:e.props.classes.textField,type:"search",value:e.state.currency,onChange:function(t){dp(e,t)},helperText:"Please select your currency",select:!0,margin:"normal",SelectProps:{MenuProps:{className:e.props.classes.menu}}}].concat(lp(wi(function(e){return Co.createElement.apply(void 0,[no,{key:e[1],value:e[1]}].concat([e[0]]))},pp)))),Co.createElement.apply(void 0,[lo,{id:"standard-select-currency-native",label:"Native select",className:e.props.classes.textField,type:"search",value:e.state.currency,onChange:function(t){dp(e,t)},helperText:"Please select your currency",select:!0,margin:"normal",SelectProps:{native:!0,MenuProps:{className:e.props.classes.menu}}}].concat(lp(wi(function(e){return Co.createElement.apply(void 0,["option",{key:e[1],value:e[1]}].concat([e[0]]))},pp)))),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","standard-full-width"),new Li(64,"Label","Label"),["style",{margin:8}],new Li(86,"Placeholder","Placeholder"),new Ue(13,"FullWidth",!0),new We(0,"HelperText","Full width!"),["InputLabelProps",{shrink:!0}],new Ue(20,"Margin","normal")],1)].concat([])),Co.createElement.apply(void 0,[lo,{id:"standard-bare",className:e.props.classes.textField,defaultValue:"Bare",margin:"normal"}].concat([]))]))};var mp=ho(function(e){return k(Le("container",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("textField",k(new Hi(223,"MarginLeft",e.spacing.unit),k(new Hi(224,"MarginRight",e.spacing.unit),k(new Hi(394,"Width",200),k())))),k(Le("dense",k(new Hi(225,"MarginTop",19),k())),k(Le("menu",k(new Hi(394,"Width",200),k())),k()))))},k(),function(e){return Co.createElement.apply(void 0,[up,e].concat([]))});function hp(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var yp=k(["$","USD"],k(["€","EUR"],k(["฿","BTC"],k(["¥","JPY"],k())))),gp=E(function(e,t,n,r){this.name=e,this.age=t,this.multiline=n,this.currency=r},z),fp=E(function(e){Co.Component.call(this,e),this.state=new gp("Cat in the Hat","","Controlled","EUR")},Co.Component);function bp(e,t){var n=Ei(t);e.setState(function(e,t){return new gp(e.name,e.age,e.multiline,n)})}fp.prototype.render=function(){var e=this;return Co.createElement.apply(void 0,["form",{className:e.props.classes.container,noValidate:!0,autoComplete:"off"}].concat([Co.createElement.apply(void 0,[lo,{id:"outlined-name",label:"Name",className:e.props.classes.textField,value:e.state.name,onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new gp(n,e.age,e.multiline,e.currency)})}(e,t)},margin:"normal",variant:"outlined"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-uncontrolled",label:"Uncontrolled",className:e.props.classes.textField,defaultValue:"foo",margin:"normal",variant:"outlined"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-required",label:"Required",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",required:!0,variant:"outlined"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-error",label:"Error",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",error:!0,variant:"outlined"}].concat([])),Co.createElement.apply(void 0,[lo,{disabled:!0,id:"outlined-disabled",label:"Disabled",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",variant:"outlined"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-email-input",label:"Email",className:e.props.classes.textField,type:"email",autoComplete:"email",margin:"normal",variant:"outlined"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-password-input",label:"Password",className:e.props.classes.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"outlined"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-read-only-input",label:"Read Only",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",variant:"outlined",InputProps:{readOnly:!0}}].concat([])),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","outlined-dense"),new Li(64,"Label","Dense"),new We(2,"Variant","outlined"),Bi(k([e.props.classes.textField,!0],k([e.props.classes.dense,!0],k()))),new Ue(20,"Margin","dense")],1)].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:4,value:e.state.multiline,onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new gp(e.name,e.age,n,e.currency)})}(e,t)},margin:"normal",variant:"outlined",className:e.props.classes.textField}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-multiline-static",label:"Multiline",className:e.props.classes.textField,rows:4,multiline:!0,defaultValue:"Default Value",variant:"outlined",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-helperText",label:"Helper text",className:e.props.classes.textField,defaultValue:"Default Value",helperText:"Some important text",variant:"outlined",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.props.classes.textField,variant:"outlined",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-textarea",label:"Multiline placeholder",placeholder:"Placeholder",className:e.props.classes.textField,variant:"outlined",multiline:!0,margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-number",label:"Number",value:e.state.age,type:"number",variant:"outlined",onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new gp(e.name,n,e.multiline,e.currency)})}(e,t)},InputLabelProps:{shrink:!0},className:e.props.classes.textField,margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-search",label:"Search field",className:e.props.classes.textField,type:"search",variant:"outlined",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-select-currency",label:"Select",className:e.props.classes.textField,type:"search",value:e.state.currency,onChange:function(t){bp(e,t)},variant:"outlined",helperText:"Please select your currency",select:!0,margin:"normal",SelectProps:{MenuProps:{className:e.props.classes.menu}}}].concat(hp(wi(function(e){return Co.createElement.apply(void 0,[no,{key:e[1],value:e[1]}].concat([e[0]]))},yp)))),Co.createElement.apply(void 0,[lo,{id:"outlined-select-currency-native",label:"Native select",className:e.props.classes.textField,type:"search",value:e.state.currency,onChange:function(t){bp(e,t)},helperText:"Please select your currency",select:!0,variant:"outlined",margin:"normal",SelectProps:{native:!0,MenuProps:{className:e.props.classes.menu}}}].concat(hp(wi(function(e){return Co.createElement.apply(void 0,["option",{key:e[1],value:e[1]}].concat([e[0]]))},yp)))),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","outlined-full-width"),new Li(64,"Label","Label"),["style",{margin:8}],new Li(86,"Placeholder","Placeholder"),new Ue(13,"FullWidth",!0),new We(0,"HelperText","Full width!"),new We(2,"Variant","outlined"),["InputLabelProps",{shrink:!0}],new Ue(20,"Margin","normal")],1)].concat([])),Co.createElement.apply(void 0,[lo,{id:"outlined-bare",className:e.props.classes.textField,defaultValue:"Bare",margin:"normal",variant:"outlined"}].concat([]))]))};var Cp=ho(function(e){return k(Le("container",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("textField",k(new Hi(223,"MarginLeft",e.spacing.unit),k(new Hi(224,"MarginRight",e.spacing.unit),k(new Hi(394,"Width",200),k())))),k(Le("dense",k(new Hi(225,"MarginTop",19),k())),k(Le("menu",k(new Hi(394,"Width",200),k())),k()))))},k(),function(e){return Co.createElement.apply(void 0,[fp,e].concat([]))});function Tp(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Pp=k(["$","USD"],k(["€","EUR"],k(["฿","BTC"],k(["¥","JPY"],k())))),Sp=E(function(e,t,n,r){this.name=e,this.age=t,this.multiline=n,this.currency=r},z),wp=E(function(e){Co.Component.call(this,e),this.state=new Sp("Cat in the Hat","","Controlled","EUR")},Co.Component);function vp(e,t){var n=Ei(t);e.setState(function(e,t){return new Sp(e.name,e.age,e.multiline,n)})}wp.prototype.render=function(){var e=this;return Co.createElement.apply(void 0,["form",{className:e.props.classes.container,noValidate:!0,autoComplete:"off"}].concat([Co.createElement.apply(void 0,[lo,{id:"filled-name",label:"Name",className:e.props.classes.textField,value:e.state.name,onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new Sp(n,e.age,e.multiline,e.currency)})}(e,t)},margin:"normal",variant:"filled"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-uncontrolled",label:"Uncontrolled",className:e.props.classes.textField,defaultValue:"foo",margin:"normal",variant:"filled"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-required",label:"Required",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",required:!0,variant:"filled"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-error",label:"Error",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",error:!0,variant:"filled"}].concat([])),Co.createElement.apply(void 0,[lo,{disabled:!0,id:"filled-disabled",label:"Disabled",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",variant:"filled"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-email-input",label:"Email",className:e.props.classes.textField,type:"email",autoComplete:"email",margin:"normal",variant:"filled"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-password-input",label:"Password",className:e.props.classes.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"filled"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-read-only-input",label:"Read Only",className:e.props.classes.textField,defaultValue:"Hello World",margin:"normal",variant:"filled",InputProps:{readOnly:!0}}].concat([])),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","filled-dense"),new Li(64,"Label","Dense"),new We(2,"Variant","filled"),Bi(k([e.props.classes.textField,!0],k([e.props.classes.dense,!0],k()))),new Ue(20,"Margin","dense")],1)].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:4,value:e.state.multiline,onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new Sp(e.name,e.age,n,e.currency)})}(e,t)},margin:"normal",variant:"filled",className:e.props.classes.textField}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-multiline-static",label:"Multiline",className:e.props.classes.textField,rows:4,multiline:!0,defaultValue:"Default Value",variant:"filled",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-helperText",label:"Helper text",className:e.props.classes.textField,defaultValue:"Default Value",helperText:"Some important text",variant:"filled",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.props.classes.textField,variant:"filled",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-textarea",label:"Multiline placeholder",placeholder:"Placeholder",className:e.props.classes.textField,variant:"filled",multiline:!0,margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-number",label:"Number",value:e.state.age,type:"number",variant:"filled",onChange:function(t){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new Sp(e.name,n,e.multiline,e.currency)})}(e,t)},InputLabelProps:{shrink:!0},className:e.props.classes.textField,margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-search",label:"Search field",className:e.props.classes.textField,type:"search",variant:"filled",margin:"normal"}].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-select-currency",label:"Select",className:e.props.classes.textField,type:"search",value:e.state.currency,onChange:function(t){vp(e,t)},variant:"filled",helperText:"Please select your currency",select:!0,margin:"normal",SelectProps:{MenuProps:{className:e.props.classes.menu}}}].concat(Tp(wi(function(e){return Co.createElement.apply(void 0,[no,{key:e[1],value:e[1]}].concat([e[0]]))},Pp)))),Co.createElement.apply(void 0,[lo,{id:"filled-select-currency-native",label:"Native select",className:e.props.classes.textField,type:"search",value:e.state.currency,onChange:function(t){vp(e,t)},helperText:"Please select your currency",select:!0,variant:"filled",margin:"normal",SelectProps:{native:!0,MenuProps:{className:e.props.classes.menu}}}].concat(Tp(wi(function(e){return Co.createElement.apply(void 0,["option",{key:e[1],value:e[1]}].concat([e[0]]))},Pp)))),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","filled-full-width"),new Li(64,"Label","Label"),["style",{margin:8}],new Li(86,"Placeholder","Placeholder"),new Ue(13,"FullWidth",!0),new We(0,"HelperText","Full width!"),new We(2,"Variant","filled"),["InputLabelProps",{shrink:!0}],new Ue(20,"Margin","normal")],1)].concat([])),Co.createElement.apply(void 0,[lo,{id:"filled-bare",className:e.props.classes.textField,defaultValue:"Bare",margin:"normal",variant:"filled"}].concat([]))]))};var Mp=ho(function(e){return k(Le("container",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("textField",k(new Hi(223,"MarginLeft",e.spacing.unit),k(new Hi(224,"MarginRight",e.spacing.unit),k(new Hi(394,"Width",200),k())))),k(Le("dense",k(new Hi(225,"MarginTop",19),k())),k(Le("menu",k(new Hi(394,"Width",200),k())),k()))))},k(),function(e){return Co.createElement.apply(void 0,[wp,e].concat([]))});function Fp(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var xp=E(function(e){this.name=e},z),Ap=E(function(e){Co.Component.call(this,e),this.state=new xp("Composed TextField")},Co.Component);function Ip(e,t){var n=Ei(t);e.setState(function(e,t){return new xp(n)})}Ap.prototype.render=function(){var e,t=this,n=t.props.classes;return Co.createElement.apply(void 0,["div",{className:n.container}].concat([Co.createElement.apply(void 0,[_a,{className:n.formControl}].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"component-simple"}].concat(["Name"])),Co.createElement.apply(void 0,[$a,{id:"component-simple",value:t.state.name,onChange:function(e){Ip(t,e)}}].concat([]))])),Co.createElement.apply(void 0,[_a,Fp({className:n.formControl},"aria-describedby","component-helper-text")].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"component-helper"}].concat(["Name"])),Co.createElement.apply(void 0,[$a,{id:"component-helper",value:t.state.name,onChange:function(e){Ip(t,e)}}].concat([])),Co.createElement.apply(void 0,[Ja,{id:"component-helper-text"}].concat(["Some important helper text"]))])),Co.createElement.apply(void 0,[_a,{className:n.formControl,disabled:!0}].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"component-disabled"}].concat(["Name"])),Co.createElement.apply(void 0,[$a,{id:"component-disabled",value:t.state.name,onChange:function(e){Ip(t,e)}}].concat([])),Co.createElement.apply(void 0,[Ja,{}].concat(["Disabled"]))])),Co.createElement.apply(void 0,[_a,(e={className:n.formControl},Fp(e,"aria-describedby","component-error-text"),Fp(e,"error",!0),e)].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"component-error"}].concat(["Name"])),Co.createElement.apply(void 0,[$a,{id:"component-error",value:t.state.name,onChange:function(e){Ip(t,e)}}].concat([])),Co.createElement.apply(void 0,[Ja,{id:"component-error-text"}].concat(["Error"]))])),Co.createElement.apply(void 0,[_a,{className:n.formControl,variant:"filled"}].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"component-filled"}].concat(["Name"])),Co.createElement.apply(void 0,[ja,{id:"component-filled",value:t.state.name,onChange:function(e){Ip(t,e)}}].concat([]))]))]))};var Lp=ho(function(e){return k(Le("container",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("formControl",k(new Hi(217,"Margin",e.spacing.unit),k())),k()))},k(),function(e){return Co.createElement.apply(void 0,[Ap,e].concat([]))});function Hp(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Bp=ho(function(e){return k(Le("container",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("input",k(new Hi(217,"Margin",e.spacing.unit),k())),k()))},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{className:t.container}].concat([Co.createElement.apply(void 0,[$a,{defaultValue:"Hello world",className:t.input,inputProps:Hp({},"aria-label","Description")}].concat([])),Co.createElement.apply(void 0,[$a,{placeholder:"Placeholder",className:t.input,inputProps:Hp({},"aria-label","Description")}].concat([])),Co.createElement.apply(void 0,[$a,{value:"Disabled",className:t.input,disabled:!0,inputProps:Hp({},"aria-label","Description")}].concat([])),Co.createElement.apply(void 0,[$a,{defaultValue:"Error",className:t.input,error:!0,inputProps:Hp({},"aria-label","Description")}].concat([]))]))});var Ep=ho(function(e){return k(Le("container",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("textField",k(new Hi(223,"MarginLeft",e.spacing.unit),k(new Hi(224,"MarginRight",e.spacing.unit),k(new Hi(394,"Width",200),k())))),k()))},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{className:t.container}].concat([Co.createElement.apply(void 0,[lo,{label:"None",id:"margin-none",defaultValue:"Default value",className:t.textField,helperText:"Some important text"}].concat([])),Co.createElement.apply(void 0,[lo,{label:"Dense",id:"margin-dense",defaultValue:"Default value",className:t.textField,helperText:"Some important text",margin:"dense"}].concat([])),Co.createElement.apply(void 0,[lo,{label:"Normal",id:"margin-normal",defaultValue:"Default value",className:t.textField,helperText:"Some important text",margin:"normal"}].concat([]))]))});function Rp(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Dp(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Vp=k(["0-20","0 to 20"],k(["21-50","21 to 50"],k(["51-100","51 to 100"],k()))),kp=E(function(e,t,n,r,a){this.amount=e,this.password=t,this.weight=n,this.weightRange=r,this.showPassword=a},z),Up=E(function(e){Co.Component.call(this,e),this.state=new kp("","","","",!1)},Co.Component);Up.prototype.render=function(){var e,t=this,n=t.props.classes;return Co.createElement.apply(void 0,["div",{className:n.root}].concat([Co.createElement.apply(void 0,[lo,H([new Li(64,"Label","With normal TextField"),new Li(57,"Id","simple-start-adornment"),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start"}].concat(["Kg"]))}]],1)].concat([])),Co.createElement.apply(void 0,[lo,H([new We(1,"Select",!0),new Li(64,"Label","With Select"),new Li(119,"Value",t.state.weightRange),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new kp(e.amount,e.password,e.weight,n,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start"}].concat(["Kg"]))}]],1)].concat(Dp(wi(function(e){return Co.createElement.apply(void 0,[no,{key:e[0],value:e[0]}].concat([e[1]]))},Vp)))),Co.createElement.apply(void 0,[_a,{fullWidth:!0,className:n.margin}].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"adornment-amount"}].concat(["Amount"])),Co.createElement.apply(void 0,[$a,{id:"adornment-amount",value:t.state.amount,onChange:function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new kp(n,e.password,e.weight,e.weightRange,e.showPassword)})}(t,e)},startAdornment:Co.createElement.apply(void 0,[Za,{position:"start"}].concat(["$"]))}].concat([]))])),Co.createElement.apply(void 0,[_a,H([Bi(k([n.margin,!0],k([n.withoutLabel,!0],k([n.textField,!0],k())))),["aria-describedby","weight-helper-text"]],1)].concat([Co.createElement.apply(void 0,[$a,{id:"adornment-weight",value:t.state.weight,onChange:function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new kp(e.amount,e.password,n,e.weightRange,e.showPassword)})}(t,e)},endAdornment:Co.createElement.apply(void 0,[Za,{position:"end"}].concat(["Kg"])),inputProps:Rp({},"aria-label","Weight")}].concat([])),Co.createElement.apply(void 0,[Ja,{id:"weight-helper-text"}].concat(["Weight"]))])),Co.createElement.apply(void 0,[_a,H([Bi(k([n.margin,!0],k([n.textField,!0],k())))],1)].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"adornment-password"}].concat(["Password"])),Co.createElement.apply(void 0,[$a,{id:"adornment-password",type:t.state.showPassword?"text":"password",value:t.state.password,onChange:function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new kp(e.amount,n,e.weight,e.weightRange,e.showPassword)})}(t,e)},endAdornment:Co.createElement.apply(void 0,[Za,{position:"end"}].concat([Co.createElement.apply(void 0,[Ka,(e={},Rp(e,"aria-label","Toggle password visibility"),Rp(e,"onClick",function(e){!function(e,t){e.setState(function(e,t){return new kp(e.amount,e.password,e.weight,e.weightRange,!e.showPassword)})}(t)}),e)].concat([Co.createElement.apply(void 0,[Ya,{}].concat([t.state.showPassword?"visibility_off":"visibility"]))]))]))}].concat([]))]))]))};var Op=ho(function(e){return k(Le("root",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("margin",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("withoutLabel",k(new Hi(225,"MarginTop",3*e.spacing.unit),k())),k(Le("textField",k(new Hi(135,"FlexBasis",200),k())),k()))))},k(),function(e){return Co.createElement.apply(void 0,[Up,e].concat([]))});function Np(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Wp(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var zp=k(["0-20","0 to 20"],k(["21-50","21 to 50"],k(["51-100","51 to 100"],k()))),jp=E(function(e,t,n,r,a){this.amount=e,this.password=t,this.weight=n,this.weightRange=r,this.showPassword=a},z),_p=E(function(e){Co.Component.call(this,e),this.state=new jp("","","","",!1)},Co.Component);_p.prototype.render=function(){var e,t=this,n=t.props.classes;return Co.createElement.apply(void 0,["div",{className:n.root}].concat([Co.createElement.apply(void 0,[lo,H([new Li(64,"Label","With filled TextField"),new Li(57,"Id","filled-simple-start-adornment"),new We(2,"Variant","filled"),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start",variant:"filled"}].concat(["Kg"]))}]],1)].concat([])),Co.createElement.apply(void 0,[lo,H([new We(1,"Select",!0),new Li(64,"Label","With Select"),new Li(119,"Value",t.state.weightRange),new We(2,"Variant","filled"),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new jp(e.amount,e.password,e.weight,n,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start",variant:"filled"}].concat(["Kg"]))}]],1)].concat(Wp(wi(function(e){return Co.createElement.apply(void 0,[no,{key:e[0],value:e[0]}].concat([e[1]]))},zp)))),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","filled-adornment-amount"),new Li(119,"Value",t.state.amount),new Li(64,"Label","Amount"),new We(2,"Variant","filled"),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new jp(n,e.password,e.weight,e.weightRange,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start",variant:"filled"}].concat(["$"]))}]],1)].concat([])),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","filled-adornment-weight"),new Li(119,"Value",t.state.weight),new Li(64,"Label","Weight"),new We(2,"Variant","filled"),new We(0,"HelperText","Weight"),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new jp(e.amount,e.password,n,e.weightRange,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{endAdornment:Co.createElement.apply(void 0,[Za,{position:"end",variant:"filled"}].concat(["Kg"]))}]],1)].concat([])),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","filled-adornment-password"),new Li(119,"Value",t.state.password),new Li(64,"Label","Password"),new Li(117,"Type",t.state.showPassword?"text":"password"),new We(2,"Variant","filled"),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new jp(e.amount,n,e.weight,e.weightRange,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{endAdornment:Co.createElement.apply(void 0,[Za,{position:"end",variant:"filled"}].concat([Co.createElement.apply(void 0,[Ka,(e={},Np(e,"aria-label","Toggle password visibility"),Np(e,"onClick",function(e){!function(e,t){e.setState(function(e,t){return new jp(e.amount,e.password,e.weight,e.weightRange,!e.showPassword)})}(t)}),e)].concat([Co.createElement.apply(void 0,[Ya,{}].concat([t.state.showPassword?"visibility_off":"visibility"]))]))]))}]],1)].concat([]))]))};var Jp=ho(function(e){return k(Le("root",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("margin",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("textField",k(new Hi(135,"FlexBasis",200),k())),k())))},k(),function(e){return Co.createElement.apply(void 0,[_p,e].concat([]))});function Gp(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function qp(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Yp=k(["0-20","0 to 20"],k(["21-50","21 to 50"],k(["51-100","51 to 100"],k()))),Kp=E(function(e,t,n,r,a){this.amount=e,this.password=t,this.weight=n,this.weightRange=r,this.showPassword=a},z),$p=E(function(e){Co.Component.call(this,e),this.state=new Kp("","","","",!1)},Co.Component);$p.prototype.render=function(){var e,t=this,n=t.props.classes;return Co.createElement.apply(void 0,["div",{className:n.root}].concat([Co.createElement.apply(void 0,[lo,H([new Li(64,"Label","With outlined TextField"),new Li(57,"Id","outlined-simple-start-adornment"),new We(2,"Variant","outlined"),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start",variant:"outlined"}].concat(["Kg"]))}]],1)].concat([])),Co.createElement.apply(void 0,[lo,H([new We(1,"Select",!0),new Li(64,"Label","With Select"),new Li(119,"Value",t.state.weightRange),new We(2,"Variant","outlined"),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new Kp(e.amount,e.password,e.weight,n,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start",variant:"outlined"}].concat(["Kg"]))}]],1)].concat(qp(wi(function(e){return Co.createElement.apply(void 0,[no,{key:e[0],value:e[0]}].concat([e[1]]))},Yp)))),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","outlined-adornment-amount"),new Li(119,"Value",t.state.amount),new Li(64,"Label","Amount"),new We(2,"Variant","outlined"),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new Kp(n,e.password,e.weight,e.weightRange,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start",variant:"outlined"}].concat(["$"]))}]],1)].concat([])),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","outlined-adornment-weight"),new Li(119,"Value",t.state.weight),new Li(64,"Label","Weight"),new We(2,"Variant","outlined"),new We(0,"HelperText","Weight"),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new Kp(e.amount,e.password,n,e.weightRange,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{endAdornment:Co.createElement.apply(void 0,[Za,{position:"end",variant:"outlined"}].concat(["Kg"]))}]],1)].concat([])),Co.createElement.apply(void 0,[lo,H([new Li(57,"Id","outlined-adornment-password"),new Li(119,"Value",t.state.password),new Li(64,"Label","Password"),new Li(117,"Type",t.state.showPassword?"text":"password"),new We(2,"Variant","outlined"),new Ii(9,"OnChange",function(e){!function(e,t){var n=Ei(t);e.setState(function(e,t){return new Kp(e.amount,n,e.weight,e.weightRange,e.showPassword)})}(t,e)}),Bi(k([n.margin,!0],k([n.textField,!0],k()))),["InputProps",{endAdornment:Co.createElement.apply(void 0,[Za,{position:"end",variant:"outlined"}].concat([Co.createElement.apply(void 0,[Ka,(e={},Gp(e,"aria-label","Toggle password visibility"),Gp(e,"onClick",function(e){!function(e,t){e.setState(function(e,t){return new Kp(e.amount,e.password,e.weight,e.weightRange,!e.showPassword)})}(t)}),e)].concat([Co.createElement.apply(void 0,[Ya,{}].concat([t.state.showPassword?"visibility_off":"visibility"]))]))]))}]],1)].concat([]))]))};var Zp=ho(function(e){return k(Le("root",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("margin",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("textField",k(new Hi(135,"FlexBasis",200),k())),k())))},k(),function(e){return Co.createElement.apply(void 0,[$p,e].concat([]))});function Xp(e){return H(e,1)}var Qp=go(k(["palette",{primary:{main:Re[500]}}],k()));var ec=ho(function(e){return k(Le("container",k(new Hi(125,"Display","flex"),k(new Hi(143,"FlexWrap","wrap"),k()))),k(Le("margin",k(new Hi(217,"Margin",e.spacing.unit),k())),k(Le("cssLabel",k(["&$cssFocused",Xp([new Hi(103,"Color",Be[500])])],k())),k(Le("cssFocused",k()),k(Le("cssUnderline",k(["&:after",Xp([new Hi(43,"BorderBottomColor",Be[500])])],k())),k(Le("bootstrapRoot",k(["label + &",Xp([new Hi(225,"MarginTop",3*e.spacing.unit)])],k())),k(Le("bootstrapInput",k(new Hi(69,"BorderRadius",4),k(new Hi(21,"BackgroundColor",e.palette.common.white),k(new Hi(33,"Border","1px solid #ced4da"),k(new Hi(153,"FontSize",16),k(new Hi(273,"Padding","10px 12px"),k(new Hi(372,"Transition",e.transitions.create(k("border-color",k("box-shadow",k())))),k(new Hi(149,"FontFamily",Os.apply(void 0,[","].concat(["-apple-system","BlinkMacSystemFont",'"Segou UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"']))),k(["&:focus",Xp([new Hi(49,"BorderColor","#80bdff"),new Hi(92,"BoxShadow","0 0 0 0.2rem rgba(0,123,255,.25)")])],k()))))))))),k(Le("bootstrapFormLabel",k(new Hi(153,"FontSize",18),k())),k()))))))))},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{className:t.container}].concat([Co.createElement.apply(void 0,[_a,{className:t.margin}].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"custom-css-input",FormLabelClasses:{root:t.cssLabel,focused:t.cssFocused}}].concat(["Custom CSS"])),Co.createElement.apply(void 0,[$a,{id:"custom-css-input",classes:{underline:t.cssUnderline}}].concat([]))])),Co.createElement.apply(void 0,[yo,{theme:Qp}].concat([Co.createElement.apply(void 0,[lo,{className:t.margin,label:"MuiThemeProvider",id:"mui-theme-provider-input"}].concat([]))])),Co.createElement.apply(void 0,[_a,{className:t.margin}].concat([Co.createElement.apply(void 0,[Qa,{shrink:!0,htmlFor:"bootstrap-input",className:t.bootstrapFormLabel}].concat(["Bootstrap"])),Co.createElement.apply(void 0,[Xa,{id:"bootstrap-input",defaultValue:"react-bootstrap",classes:{root:t.bootstrapRoot,input:t.bootstrapInput}}].concat([]))])),Co.createElement.apply(void 0,[Xa,{className:t.margin,defaultValue:"Naked input"}].concat([]))]))});var tc=ho(function(e){return k(Le("margin",k(new Hi(217,"Margin",e.spacing.unit),k())),k())},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[_a,{className:t.margin}].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"input-with-icon-adornment"}].concat(["With a start adornment"])),Co.createElement.apply(void 0,[$a,{id:"input-with-icon-adornment",startAdornment:Co.createElement.apply(void 0,[Za,{position:"start"}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["account_circle"]))]))}].concat([]))])),Co.createElement.apply(void 0,[lo,{className:t.margin,id:"input-with-icon-textfield",label:"TextField",InputProps:{startAdornment:Co.createElement.apply(void 0,[Za,{position:"start"}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["account_circle"]))]))}}].concat([])),Co.createElement.apply(void 0,["div",{className:t.margin}].concat([Co.createElement.apply(void 0,[Ga,{container:!0,spacing:8,alignItems:"flex-end"}].concat([Co.createElement.apply(void 0,[Ga,{item:!0}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["account_circle"]))])),Co.createElement.apply(void 0,[Ga,{item:!0}].concat([Co.createElement.apply(void 0,[lo,{id:"input-with-icon-grid",label:"With a grid"}].concat([]))]))]))]))]))});var nc=ip.a,rc="\r\n## TextField\r\n\r\nThe `TextField` wrapper component is a complete form control including a label, input and help text.\r\n",ac="\r\n## Outlined\r\n\r\n`TextField` supports outlined styling.\r\n",oc="\r\n## Filled\r\n\r\n`TextField` supports filled styling.\r\n",sc="\r\n## Components\r\n\r\n`TextField` is composed of smaller components (\r\n`FormControl`,\r\n`Input`,\r\n`InputLabel`,\r\nand `FormHelperText`\r\n) that you can leverage directly to significantly customize your form inputs.\r\n\r\nYou might also have noticed that some native HTML input properties are missing from the `TextField` component.\r\nThis is on purpose.\r\nThe component takes care of the most used properties, then it's up to the user to use the underlying component shown in the following demo. Still, you can use `inputProps` (and `InputProps`, `InputLabelProps` properties) if you want to avoid some boilerplate.\r\n",ic="\r\n## Layout\r\n\r\n`TextField`, `FormControl` allow the specification of `margin` to alter the vertical spacing of inputs. Using\r\n`none` (default) will not apply margins to the `FormControl`, whereas `dense` and `normal` will as well as alter\r\nother styles to meet the specification.\r\n",lc="\r\n## Input Adornments\r\n\r\n`Input` allows the provision of `InputAdornment`.\r\nThese can be used to add a prefix, a suffix or an action to an input.\r\nFor instance, you can use an icon button to hide or reveal the password.\r\n",pc="\r\n## Customized inputs\r\n\r\nIf you have been reading the overrides documentation page\r\nbut you are not confident jumping in, here's an example of how you can change the main color of an Input.\r\n",cc="\r\n## With icon\r\n\r\nIcons can be specified as prepended or appended.\r\n";function uc(){return Co.createElement.apply(void 0,["div",{}].concat([Zi(nc),ul(rc,"./Demos/TextFields/TextField.fs",function(){return Co.createElement.apply(void 0,[mp,{}].concat([]))}),ul(ac,"./Demos/TextFields/Outlined.fs",function(){return Co.createElement.apply(void 0,[Cp,{}].concat([]))}),ul(oc,"./Demos/TextFields/Filled.fs",function(){return Co.createElement.apply(void 0,[Mp,{}].concat([]))}),ul(sc,"./Demos/TextFields/Composed.fs",function(){return Co.createElement.apply(void 0,[Lp,{}].concat([]))}),ul("## Input","./Demos/TextFields/Input.fs",function(){return Co.createElement.apply(void 0,[Bp,{}].concat([]))}),ul(ic,"./Demos/TextFields/Layout.fs",function(){return Co.createElement.apply(void 0,[Ep,{}].concat([]))}),ul(lc,"./Demos/TextFields/InputAdornments.fs",function(){return Co.createElement.apply(void 0,[Op,{}].concat([]))}),ul("## Filled Input Adornments","./Demos/TextFields/FilledInputAdornments.fs",function(){return Co.createElement.apply(void 0,[Jp,{}].concat([]))}),ul("## Outlined Input Adornments","./Demos/TextFields/OutlinedInputAdornments.fs",function(){return Co.createElement.apply(void 0,[Zp,{}].concat([]))}),ul(pc,"./Demos/TextFields/Customized.fs",function(){return Co.createElement.apply(void 0,[ec,{}].concat([]))}),ul(cc,"./Demos/TextFields/WithIcon.fs",function(){return Co.createElement.apply(void 0,[tc,{}].concat([]))})]))}function dc(e){var t=e.breakpoints.up(400+3*e.spacing.unit*2);return k(Le("layout",k(new Hi(394,"Width","auto"),k(new Hi(125,"Display","block"),k(new Hi(223,"MarginLeft",3*e.spacing.unit),k(new Hi(224,"MarginRight",3*e.spacing.unit),k([t,function(e){return H(e,1)}(k(new Hi(394,"Width",400),k(new Hi(223,"MarginLeft","auto"),k(new Hi(224,"MarginRight","auto"),k()))))],k())))))),k(Le("paper",k(new Hi(225,"MarginTop",8*e.spacing.unit),k(new Hi(125,"Display","Flex"),k(new Hi(136,"FlexDirection","column"),k(new Hi(1,"AlignItems","center"),k(new Hi(273,"Padding",ks(Vs("%ipx %ipx %ipx"))(2*e.spacing.unit)(3*e.spacing.unit)(3*e.spacing.unit)),k())))))),k(Le("avatar",k(new Hi(217,"Margin",e.spacing.unit),k(new Hi(21,"BackgroundColor",e.palette.secondary.main),k()))),k(Le("form",k(new Hi(394,"Width","100%"),k(new Hi(225,"MarginTop",e.spacing.unit),k()))),k(Le("submit",k(new Hi(225,"MarginTop",3*e.spacing.unit),k())),k())))))}var mc=Co.createElement.apply(void 0,[ao,{}].concat([Co.createElement.apply(void 0,["path",{d:"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"}].concat([]))]));function hc(e){var t=e.classes;return Co.createElement.apply(void 0,["main",{className:t.layout}].concat([Co.createElement.apply(void 0,[ro,{className:t.paper}].concat([Co.createElement.apply(void 0,[ka,{className:t.avatar}].concat([mc])),Co.createElement.apply(void 0,[uo,{variant:"h5"}].concat(["Sign in"])),Co.createElement.apply(void 0,["form",{className:t.form}].concat([Co.createElement.apply(void 0,[_a,{margin:"normal",required:!0,fullWidth:!0}].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"email"}].concat(["Email Address"])),Co.createElement.apply(void 0,[$a,{id:"email",name:"email",autoComplete:"email",autoFocus:!0}].concat([]))])),Co.createElement.apply(void 0,[_a,{margin:"normal",required:!0,fullWidth:!0}].concat([Co.createElement.apply(void 0,[Qa,{htmlFor:"password"}].concat(["Password"])),Co.createElement.apply(void 0,[$a,{name:"password",type:"password",id:"password",autoComplete:"current-password"}].concat([]))])),Co.createElement.apply(void 0,[Ua,{type:"submit",fullWidth:!0,variant:"contained",color:"primary",className:t.submit}].concat(["Sign in"]))]))]))]))}function yc(){return Co.createElement.apply(void 0,[function(e){return ho(dc,k(),e)}(hc),{}].concat([]))}var gc=n(212),fc=n.n(gc);function bc(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Cc=ho(k(Le("root",k(new Hi(17,"Background","linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"),k(new Hi(69,"BorderRadius",3),k(new Hi(33,"Border",0),k(new Hi(103,"Color","white"),k(new Hi(189,"Height",48),k(new Hi(273,"Padding","0 30px"),k(new Hi(92,"BoxShadow","0 3px 5px 2px rgba(255, 105, 135, .3)"),k())))))))),k()),k(),function(e){return Co.createElement.apply(void 0,[Ua,H([Bi(k([e.classes.root,!0],k([e.className,!0],k())))],1)].concat(bc(e.children)))});var Tc=ho(k(Le("root",k(new Hi(17,"Background","linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"),k(new Hi(69,"BorderRadius",3),k(new Hi(33,"Border",0),k(new Hi(103,"Color","white"),k(new Hi(189,"Height",48),k(new Hi(273,"Padding","0 30px"),k(new Hi(92,"BoxShadow","0 3px 5px 2px rgba(255, 105, 135, .3)"),k())))))))),k(Le("label",k(new Hi(362,"TextTransform","capitalize"),k())),k())),k(),function(e){return Co.createElement.apply(void 0,[Ua,{classes:{root:e.classes.root,label:e.classes.label}}].concat(["classes nesting"]))});var Pc=ho(k(Le("root",k(new Hi(17,"Background","linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"),k(new Hi(69,"BorderRadius",3),k(new Hi(33,"Border",0),k(new Hi(103,"Color","white"),k(new Hi(189,"Height",48),k(new Hi(273,"Padding","0 30px"),k(new Hi(92,"BoxShadow","0 3px 5px 2px rgba(255, 105, 135, .3)"),k())))))))),k(Le("label",k(new Hi(362,"TextTransform","capitalize"),k())),k())),k(),Ua);var Sc=ho(k(Le("root",k(new Hi(17,"Background","linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"),k(new Hi(69,"BorderRadius",3),k(new Hi(33,"Border",0),k(new Hi(103,"Color","white"),k(new Hi(189,"Height",48),k(new Hi(273,"Padding","0 30px"),k(new Hi(92,"BoxShadow","0 3px 5px 2px rgba(255, 105, 135, .3)"),k(["&$disabled",{background:"rgba(0,0,0,0.12)",color:"white",boxShadow:"none"}],k()))))))))),k(Le("disabled",k()),k())),k(),function(e){return Co.createElement.apply(void 0,[Ua,{disabled:!0,classes:{root:e.classes.root,disabled:e.classes.disabled}}].concat(["classes state"]))});var wc=k(new Hi(17,"Background","linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"),k(new Hi(69,"BorderRadius",3),k(new Hi(33,"Border",0),k(new Hi(103,"Color","white"),k(new Hi(189,"Height",48),k(new Hi(273,"Padding","0 30px"),k(new Hi(92,"BoxShadow","0 3px 5px 2px rgba(255, 105, 135, .3)"),k())))))));var vc=fc.a,Mc="\r\n### Overriding with class names\r\n\r\nThe first way to override the style of a component is to use **class names**.\r\nEvery component provides a `className` property which is always applied to the root element.\r\n\r\nIn this example, we are using the [`withStyles()`](#/customization/css-in-js) higher-order\r\ncomponent to inject custom styles into the DOM, and to pass the class name to the `ClassNames` component via\r\nits `classes` prop. You can choose any other styling solution, or even plain CSS to create the styles, but be sure to\r\nconsider the [CSS injection order](https://material-ui.com/customization/css-in-js/#css-injection-order), as the CSS injected into the DOM\r\nby Material-UI to style a component has the highest specificity possible since the `<link>` is injected at the bottom\r\nof the `<head />` to ensure the components always render correctly.\r\n",Fc="\r\n### Overriding with classes\r\n\r\nWhen the `className` property isn't enough, and you need to access deeper elements, you can take advantage of the `classes` property to customize all the CSS injected by Material-UI for a given component.\r\nThe list of  classes for each\r\ncomponent is documented in the **Component API** section.\r\n\r\nThis example also uses `withStyles()` (see above), but here, `ClassesNesting` is using `Button`'s `classes` prop to\r\nprovide an object that maps the **names of classes to override** (keys) to the **CSS class names to apply** (values).\r\nThe component's existing classes will continue to be injected, so it is only necessary to provide the specific styles\r\nyou wish to add or override.\r\n\r\nNotice that in addition to the button styling, the button label's capitalization has been changed:\r\n",xc='\r\n#### Shorthand\r\n\r\nThe above code example can be condensed by using **the same CSS API** as the child component.\r\nIn this example, the `withStyles()` higher-order component is injecting a `classes` property that is used by the `Button` component.\r\n```fsharp\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Background "linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"\r\n        CSSProp.BorderRadius 3\r\n        CSSProp.Border 0\r\n        CSSProp.Color "white"\r\n        CSSProp.Height 48\r\n        CSSProp.Padding "0 30px"\r\n        CSSProp.BoxShadow "0 3px 5px 2px rgba(255, 105, 135, .3)"\r\n    ]\r\n    Styles.Label [\r\n        CSSProp.TextTransform "capitalize"\r\n    ]\r\n]\r\n\r\nlet styledButton = withStyles (StyleType.Styles styles) [] !!MaterialUI.Button\r\n```\r\n',Ac='\r\n#### Internal states\r\n\r\nAside from accessing nested elements, the `classes` property can be used to customize the internal states of Material-UI components.\r\nThe components internal states, like `:hover`, `:focus`, `disabled` and `selected`, are styled with a higher CSS specificity.\r\n[Specificity is a weight](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) that is applied to a given CSS declaration.\r\nIn order to override the components internal states, **you need to increase specificity**.\r\nHere is an example with the `disable` state and the button component:\r\n\r\n```css\r\n.classes-state-root {\r\n  /* ... */\r\n}\r\n.classes-state-root.disabled {\r\n  color: white;\r\n}\r\n```\r\n\r\n```fsharp\r\n\r\nbutton [\r\n    HTMLAttr.Disabled true\r\n    MaterialProp.Classes [\r\n        ClassNames.Root "classes-state-root"\r\n        ClassNames.Disabled "disabled"\r\n    ]\r\n] []\r\n\r\n```\r\n\r\n#### Use `$ruleName` to reference a local rule within the same style sheet\r\n\r\nThe [jss-nested](https://github.com/cssinjs/jss-nested) plugin (available by default) can make the process of increasing specificity easier.\r\n\r\n```fsharp\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.Custom ("&$disabled", [\r\n            CSSProp.Color "white"\r\n        ] |> keyValueList CaseRules.LowerFirst)\r\n    ]\r\n    Styles.Disabled []\r\n]\r\n```\r\n\r\ncompiles to:\r\n\r\n```css\r\n.root-x.disable-x {\r\n  color: white;\r\n}\r\n```\r\n',Ic="\r\n### Overriding with inline-style\r\n\r\nThe second way to override the style of a component is to use the **inline-style** approach.\r\nEvery component provides a `style` property.\r\nThese properties are always applied to the root element.\r\n\r\nYou don't have to worry about CSS specificity as the inline-style takes precedence over the regular CSS.\r\n",Lc='\r\n## 2. Material Design variations\r\n\r\nThe Material Design specification documents different variations of certain components, such as how buttons come in different shapes: [text](https://material.io/design/components/buttons.html#text-button) (formerly "flat"), [contained](https://material.io/design/components/buttons.html#contained-button) (formerly "raised"), [FAB](https://material.io/design/components/buttons-floating-action-button.html) and more.\r\n\r\nMaterial-UI attempts to implement all of these variations.\r\n',Hc="\r\n## 3. Global theme variation\r\n\r\n### Theme variables\r\n\r\nIn order to promote consistency between components, and manage the user interface appearance as a whole, Material-UI provides a mechanism to apply global changes by adjusting the [theme configuration variables](#/customization/themes).\r\n\r\n### Global theme override\r\n\r\nDo you want to customize **all the instances** of a component type?\r\n\r\nWhen the configuration variables aren't powerful enough,\r\nyou can take advantage of the `overrides` key of the `theme` to potentially change every single style injected by Material-UI into the DOM.\r\nLearn more about it in the [themes section](#/customization/themes) of the documentation.\r\n\r\n### Global CSS override\r\n\r\nYou can also customize all instances of a component with CSS.\r\nWe expose a `dangerouslyUseGlobalCSS` option to do so.\r\nLearn more about it in the [CSS in JS section](#/customization/css-in-js) of the documentation. It's very similar to how you would customize Bootstrap.\r\n";function Bc(){return Co.createElement.apply(void 0,["div",{}].concat([Zi(vc),ul(Mc,"./Customization/Overrides/ClassNames.fs",function(){return Co.createElement.apply(void 0,[Cc,{}].concat(["class names"]))}),ul(Fc,"./Customization/Overrides/ClassNesting.fs",function(){return Co.createElement.apply(void 0,[Tc,{}].concat([]))}),ul(xc,"./Customization/Overrides/ShortlandClasses.fs",function(){return Co.createElement.apply(void 0,[Pc,{}].concat(["Classes Shortland"]))}),ul(Ac,"./Customization/Overrides/InternalState.fs",function(){return Co.createElement.apply(void 0,[Sc,{}].concat([]))}),ul(Ic,"./Customization/Overrides/InlineStyle.fs",function(){return Co.createElement.apply(void 0,[Ua,H([["style",H(wc,1)]],1)].concat(["inline-style"]))}),Zi("[When should I use inline-style vs classes?](https://material-ui.com/getting-started/faq/#when-should-i-use-inline-style-vs-classes-)"),Zi(Lc),Zi(Hc)]))}var Ec=n(213),Rc=n.n(Ec),Dc=go(k(["palette",{primary:{main:Be[500]},secondary:{main:"#11cb5f"}}],k()));var Vc=go(k(["palette",{type:"dark"}],k(["typography",{useNextVariants:!0}],k())));var kc=fo(function(e){var t=e.theme,n=t.palette.text.primary,r=t.palette.primary.main,a=k(new Hi(21,"BackgroundColor",t.palette.background.default),k(new Hi(273,"Padding","8px 16px"),k(new Hi(103,"Color",n),k()))),o=k(new Hi(21,"BackgroundColor",r),k(new Hi(273,"Padding","8px 16px"),k(new Hi(103,"Color",t.palette.common.white),k())));return Co.createElement.apply(void 0,["div",H([["style",{width:300}]],1)].concat([Co.createElement.apply(void 0,[uo,H([["style",H(o,1)]],1)].concat(["Primary color "+r])),Co.createElement.apply(void 0,[uo,H([["style",H(a,1)]],1)].concat(["Primary text "+n]))]))});var Uc=k(Le("root",k(new Hi(125,"Display","flex"),k())),k()),Oc=go(k(["typography",H([new je(6,"UseNextVariants",!0),new je(0,"FontFamily",Os.apply(void 0,[","].concat(["-apple-system","BlinkMacSystemFont",'"Segou UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"']))),new je(4,"FontWeightMedium",500),function(e){return["body1",H(e,1)]}(k(new ze(3,"FontWeight","500"),k())),function(e){return["subtitle1",H(e,1)]}(k(new ze(2,"FontSize","12"),k())),function(e){return["button",H(e,1)]}(k(["fontStyle","italic"],k()))],1)],k()));var Nc=ho(Uc,k(),function(e){var t=Co.createElement.apply(void 0,["div",{}].concat([Co.createElement.apply(void 0,[uo,{}].concat(["body1"])),Co.createElement.apply(void 0,[uo,{variant:"subtitle1"}].concat(["subtitle"])),Co.createElement.apply(void 0,[Ua,{}].concat(["button"]))]));return Co.createElement.apply(void 0,["div",{className:e.classes.root}].concat([t,Co.createElement.apply(void 0,[yo,{theme:Oc}].concat([t]))]))});var Wc=go(k(["typography",{useNextVariants:!0,htmlFontSize:"10"}],k()));var zc=ho(function(e){return k(Le("root",k(new Hi(103,"Color",e.status.danger),k(["&$checked",{color:e.status.danger}],k()))),k(Le("checked",k()),k()))},k(),function(e){return Co.createElement.apply(void 0,[Oa,{defaultChecked:!0,classes:{root:e.classes.root,checked:e.classes.checked}}].concat([]))}),jc=go(k(["status",{danger:De[500]}],k()));var _c=go(k(["overrides",{MuiButton:H([Le("root",k(new Hi(17,"Background","linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)"),k(new Hi(69,"BorderRadius",3),k(new Hi(33,"Border",0),k(new Hi(103,"Color","white"),k(new Hi(189,"Height",48),k(new Hi(273,"Padding","0 30px"),k(new Hi(92,"BoxShadow","0 3px 5px 2px rgba(255, 105, 135, .3)"),k()))))))))],1)}],k()));var Jc=go(k(["props",{MuiButtonBase:{disableRipple:!0}}],k()));var Gc=fo(function(e){var t=e.theme,n=t.palette.text.primary,r=t.palette.primary.main,a=k(new Hi(21,"BackgroundColor",t.palette.background.default),k(new Hi(273,"Padding",ks(Vs("%dpx %dpx"))(t.spacing.unit)(2*t.spacing.unit)),k(new Hi(103,"Color",n),k()))),o=k(new Hi(21,"BackgroundColor",r),k(new Hi(273,"Padding",ks(Vs("%dpx %dpx"))(t.spacing.unit)(2*t.spacing.unit)),k(new Hi(103,"Color",t.palette.common.white),k())));return Co.createElement.apply(void 0,["div",H([["style",{width:300}]],1)].concat([Co.createElement.apply(void 0,[uo,H([["style",H(o,1)]],1)].concat(["Primary color "+r])),Co.createElement.apply(void 0,[uo,H([["style",H(a,1)]],1)].concat(["Primary text "+n]))]))});var qc=ho(function(e){return k(Le("root",k(new Hi(103,"Color",e.status.color),k(["&$checked",{color:e.status.color}],k()))),k(Le("checked",k()),k()))},k(),function(e){return Co.createElement.apply(void 0,[Oa,{defaultChecked:!0,classes:{root:e.classes.root,checked:e.classes.checked}}].concat([]))}),Yc=go(k(["status",{color:De[500]}],k())),Kc=go(k(["status",{color:Re[500]}],k()));function $c(){return Co.createElement.apply(void 0,[yo,{theme:Yc}].concat([Co.createElement.apply(void 0,[qc,{}].concat([])),Co.createElement.apply(void 0,[yo,{theme:Kc}].concat([Co.createElement.apply(void 0,[qc,{}].concat([]))])),Co.createElement.apply(void 0,[yo,{theme:function(e){var t=Object.assign({},e);return t.status.color=He[500],t}}].concat([Co.createElement.apply(void 0,[qc,{}].concat([]))]))]))}var Zc=Rc.a,Xc="\r\n#### Color tool\r\n\r\nNeed inspiration? The Material Design team has built an awesome\r\n[palette configuration tool](https://material-ui.com/style/color/#color-tool) to help you.\r\n",Qc="\r\n### Type (light /dark theme)\r\n\r\nYou can make the theme dark by setting `PaletteProp.Type` to `PaletteType.Dark`.\r\nWhile it's only a single property value change, internally it modifies the value of the following keys:\r\n- `palette.text`\r\n- `palette.divider`\r\n- `palette.background`\r\n- `palette.action`\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Type PaletteType.Dark\r\n                ]\r\n            ]\r\n```\r\n",eu="\r\n### Typography\r\n\r\nToo many type sizes and styles at once can spoil any layout.\r\nThe theme provides a **limited set of type sizes** that work well together along with the layout grid.\r\nThese sizes are used across the components.\r\n\r\nHave a look at the following example regarding changing the default values, such as the font family.\r\n",tu='\r\n### Typography - Font family\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Typography [\r\n                    ThemeTypographyProp.UseNextVariants true\r\n                    ThemeTypographyProp.FontFamily ([\r\n                        "-apple-system"\r\n                        "BlinkMacSystemFont"\r\n                        "\\"Segou UI\\""\r\n                        "Roboto"\r\n                        "\\"Helvetica Neue\\""\r\n                        "Arial"\r\n                        "sans-serif"\r\n                        "\\"Apple Color Emoji\\""\r\n                        "\\"Segoe UI Emoji\\""\r\n                        "\\"Segoe UI Symbol\\"" ] |> String.concat(","))\r\n                ]\r\n            ]\r\n```\r\n',nu='\r\n### Typography - Font size\r\n\r\nMaterial-UI uses `rem` units for the font size.\r\nThe browser `<html>` element default font size is `16px`, but browsers have an option to change this value,\r\nso `rem` units allow us to accommodate the user\'s settings, resulting in a much better user experience.\r\nUsers change font size settings for all kinds of reasons, from poor eyesight to choosing optimum settings\r\nfor devices that can be vastly different in size and viewing distance.\r\n\r\nTo change the font-size of Material-UI you can provide a `ThemeTypographyProp.FontSize` property.\r\nThe default value is `14px`.\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Typography [\r\n                    ThemeTypographyProp.FontSize "12"\r\n                ]\r\n            ]\r\n```\r\nThe computed font size by the browser follows this mathematical equation:\r\n\r\n![font-size](img/font-size.gif)\r\n',ru="\r\n### Typography - HTML font size\r\n\r\nYou might want to change the `<html>` element default font size. For instance, when using the [10px simplification](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\r\nWe provide a `ThemeTypographyProp.HtmlFontSize` theme property for this use case.\r\nIt's telling Material-UI what's the font-size on the `<html>` element is.\r\nIt's used to adjust the `rem` value so the calculated font-size always match the specification.\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Typography [\r\n                    // Tell Material-UI what's the font-size on the html element is.\r\n                    ThemeTypographyProp.HtmlFontSize \"12\"\r\n                ]\r\n            ]\r\n```\r\n\r\n```css\r\nhtml {\r\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\r\n}\r\n```\r\n\r\n*You need to apply the above CSS on the html element of this page to see the below demo rendered correctly*\r\n",au="\r\n### Custom variables\r\n\r\nWhen using Material-UI's [styling solution](#/customization/css-in-js) with your own components,\r\nyou can also take advantage of the theme.\r\nIt can be convenient to add additional variables to the theme so you can use them everywhere.\r\nFor instance:\r\n",ou='\r\n### Other variables\r\n\r\nIn addition to the palette, dark and light types, and typography, the theme normalizes implementation by providing many more default values, such as breakpoints, shadows, transitions, etc.\r\nYou can check out the \r\n<a href="https://material-ui.com/customization/default-theme/" target="_blank">default theme section</a> to view the default theme in full.\r\n',su="\r\n## Customizing all instances of a component type\r\n\r\n### CSS\r\n\r\nWhen the configuration variables aren't powerful enough, you can take advantage of the\r\n`ThemeProp.Overrides` key of the `theme` to potentially change every single **style** injected by Material-UI into the DOM.\r\nThat's a really powerful feature.\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Overrides [\r\n                    Overrides.MuiButton [ // Name of the component ⚛️ / style sheet\r\n                        Styles.Root [ // Name of the rule\r\n                            CSSProp.Color \"white\" // Some CSS\r\n                        ]\r\n                    ]\r\n                ]\r\n            ]\r\n```\r\n",iu="\r\n### Properties\r\n\r\nYou can also apply properties on all the instances of a component type.\r\nWe expose a `ThemeProp.Props` key in the `theme` for this use case.\r\n\r\n```fsharp\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Props [\r\n                    // Name of the component ⚛️\r\n                    ThemePropsProp.MuiButtonBase [\r\n                        // The properties to apply\r\n                        MaterialProp.DisableRipple true // No more ripple, on the whole application!\r\n                    ]\r\n                ]\r\n            ]\r\n```\r\n",lu="\r\n## Accessing the theme in a component\r\n\r\nYou might need to access the theme variables inside your React components.\r\nLet's say you want to display the value of the primary color, you can use the `withTheme()` higher-order component to do so. Here is an example:\r\n",pu="\r\n## Nesting the theme\r\n\r\nThe theming solution is very flexible, as you can nest multiple theme providers.\r\nThis can be really useful when dealing with different area of your application that have distinct appearance from each other.\r\n",cu="\r\n#### A note on performance\r\n\r\nThe performance implications of nesting the `MuiThemeProvider` component are linked to JSS's work behind the scenes.\r\nThe main point to understand is that we cache the injected CSS with the following tuple `(styles, theme)`.\r\n- `theme`: If you provide a new theme at each render, a new CSS object will be computed and injected. Both for UI consistency and performance, it's better to render a limited number of theme objects.\r\n- `styles`: The larger the styles object is, the more work is needed.\r\n",uu="\r\n## API\r\n\r\n### `muiThemeProvider`\r\n\r\nThis component takes a `MuiThemeProviderProp.Theme` property, and makes the `theme` available down the React tree thanks to React context.\r\nIt should preferably be used at **the root of your component tree**.\r\n\r\n\x3c!--You can see the full properties API in [this dedicated page](/api/mui-theme-provider/).--\x3e\r\n\r\n#### Examples\r\n\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\n\r\nlet theme = createMuiTheme []\r\n\r\nlet view () =\r\n    muiThemeProvider [ MuiThemeProviderProp.Theme (ProviderTheme.Theme theme) ] [\r\n        div [] [] // your application components\r\n    ]\r\n```\r\n\r\n### `createMuiTheme (options : ThemeProp list) : ITheme`\r\n\r\nGenerate a theme base on the options received.\r\n\r\n#### Arguments\r\n\r\n1. `options` (*ThemeProp list*): Takes an incomplete list of `ThemeProp`s and adds the missing parts.\r\n\r\n```fsharp\r\ntype ThemeProp =\r\n    | Direction of Themes.TextDirection\r\n    | Shadows of string list\r\n    | [<Erase>] Custom of string*obj\r\n\r\nThemeProp.Palette (props : PaletteProp list) : ThemeProp\r\nThemeProp.Shape (props : ShapeProp list) : ThemeProp\r\nThemeProp.Spacing (props : SpacingProp list) : ThemeProp\r\nThemeProp.Typography (props : ThemeTypographyProp list) : ThemeProp\r\nThemeProp.ZIndex (props : ZIndexProp list) : ThemeProp\r\nThemeProp.Overrides (props : IOverridesProp list) : ThemeProp\r\n```\r\n\r\nYou can find full list of `Theme` options and subprops [here](https://github.com/mvsmal/fable-material-ui/blob/master/src/Fable.Helpers.MaterialUI.Props.fs#L1711-L1962)\r\n\r\n#### Returns\r\n\r\n`theme` (*ITheme*): A complete, ready to use theme object.\r\n\r\n#### Examples\r\n\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\nopen Fable.MaterialUI\r\n\r\nlet theme = createMuiTheme [\r\n                ThemeProp.Palette [\r\n                    PaletteProp.Primary [\r\n                        PaletteIntentionProp.Main Colors.purple.``500``\r\n                    ]\r\n                    PaletteProp.Secondary [\r\n                        PaletteIntentionProp.Main \"#11cb5f\"\r\n                    ]\r\n                ]\r\n            ]\r\n```\r\n\r\n\r\n### `withTheme<'P when 'P :> IThemeProps> (fn : ('P -> ReactElement)) : ClassComponent<'P>`\r\n\r\nProvide the `theme` object as a property of the input component so it can be used\r\nin the render method.\r\n\r\n#### Arguments\r\n\r\n1. `fn` (*'P -> ReactElement*): The function which expects `props : 'P` argument and returns `ReactElement`.\r\n`'P` should inherit `IThemeProps`\r\n\r\n#### Returns\r\n\r\n`Component` (*ClassComponent<'P>*): The new component created.\r\n\r\n#### Examples\r\n\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\n\r\nlet myFun (props : IThemeProps) =\r\n    div [] [ str props.theme.palette.primary.main ]\r\n\r\nlet myFunWithTheme = withTheme myFun\r\n\r\nlet myComponent () =\r\n    from myFunWithTheme createEmpty<IThemeProps> []\r\n\r\n```\r\n\r\n```fsharp\r\nopen Fable.Helpers.MaterialUI\r\n\r\ntype MyFunProps =\r\n    abstract foo : string with get,set\r\n    inherit IThemeProps\r\n\r\nlet myFun (props : MyFunProps) =\r\n    div [] [\r\n        str props.theme.palette.primary.main \r\n        str props.foo\r\n    ]\r\n\r\nlet myFunWithTheme = withTheme myFun\r\n\r\nlet myComponent () =\r\n    let props = createEmpty<MyFunProps>\r\n    props.foo <- \"bar\"\r\n    from myFunWithTheme props []\r\n```\r\n";function du(){return Co.createElement.apply(void 0,["div",{}].concat([Zi(Zc),ul("#### Example","./Customization/Themes/Palette.fs",function(){return Co.createElement.apply(void 0,[yo,{theme:Dc}].concat([Co.createElement.apply(void 0,[Ua,{color:"primary"}].concat(["Primary"])),Co.createElement.apply(void 0,[Ua,{color:"secondary"}].concat(["Secondary"]))]))}),Zi(Xc),ul(Qc,"./Customization/Themes/DarkTheme.fs",function(){return Co.createElement.apply(void 0,[yo,{theme:Vc}].concat([Co.createElement.apply(void 0,[kc,{}].concat([]))]))}),ul(eu,"./Customization/Themes/TypographyTheme.fs",function(){return Co.createElement.apply(void 0,[Nc,{}].concat([]))}),Zi(tu),Zi(nu),ul(ru,"./Customization/Themes/FontSizeTheme.fs",function(){return Co.createElement.apply(void 0,[yo,{theme:Wc}].concat([Co.createElement.apply(void 0,[uo,{}].concat(["body1"]))]))}),ul(au,"./Customization/Themes/CustomStyles.fs",function(){return Co.createElement.apply(void 0,[yo,{theme:jc}].concat([Co.createElement.apply(void 0,[zc,{}].concat([]))]))}),Zi(ou),ul(su,"./Customization/Themes/OverrideCss.fs",function(){return Co.createElement.apply(void 0,[yo,{theme:_c}].concat([Co.createElement.apply(void 0,[Ua,{}].concat(["Override CSS"]))]))}),ul(iu,"./Customization/Themes/OverrideProperties.fs",function(){return Co.createElement.apply(void 0,[yo,{theme:Jc}].concat([Co.createElement.apply(void 0,[Ua,{}].concat(["Override properties"]))]))}),ul(lu,"./Customization/Themes/WithTheme.fs",function(){return Co.createElement.apply(void 0,[Gc,{}].concat([]))}),ul(pu,"./Customization/Themes/Nested.fs",function(){return $c()}),Zi(cu),Zi(uu)]))}var mu=n(214),hu=n.n(mu);function yu(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var gu=ho(function(e){return k(Le("root",k(new Hi(103,"Color","inherit"),k(new Hi(329,"TextDecoration","inherit"),k(["&:hover",{textDecoration:"underline"}],k())))),k(Le("primary",k(new Hi(103,"Color",e.palette.primary.main),k())),k()))},k(),function(e){return Co.createElement.apply(void 0,["a",H([Bi(k([e.classes.root,!0],k([e.classes.primary,"primary"===e.variant],k([e.className,!0],k())))),new Ne(1,"Href",e.href)],1)].concat(yu(e.children)))});var fu=hu.a,bu="\r\n## Material-UI's styling solution\r\n\r\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the style of the\r\ncomponents, but these approaches have proven to be limited. Most recently, Material-UI has [moved toward](https://github.com/oliviertassinari/a-journey-toward-better-style)\r\na *CSS-in-JS* solution. It **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.).\r\nWe think that it's the future:\r\n- [A Unified Styling Language](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\r\n- [The future of component-based styling](https://medium.freecodecamp.org/css-in-javascript-the-future-of-component-based-styling-70b161a79a32)\r\n- [Convert SCSS (Sass) to CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\r\n\r\nSo, you may have noticed in the demos what *CSS-in-JS* looks like.\r\nWe use the higher-order component created by `withStyles`\r\nto inject an array of styles into the DOM as CSS, using JSS. Here's an example:\r\n",Cu="\r\n## JSS\r\n\r\nMaterial-UI's styling solution uses [JSS](https://github.com/cssinjs/jss) at its core.\r\nIt's a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JS to CSS compiler which works at runtime and server-side.\r\nIt is about 8 kB (minified and gzipped) and is extensible via a [plugins](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\r\n\r\nIf you end up using this styling solution in your codebase, you're going to need to *learn the API*.\r\nThe best place to start is by looking at the features that each [plugin](http://cssinjs.org/plugins/) provides. Material-UI uses few of them (see below)\r\nYou can always add new plugins if needed with the [`JssProvider`](https://github.com/cssinjs/react-jss#custom-setup) helper.\r\n\r\nIf you wish to build your own instance of `jss` **and** support *rtl* make sure you also include the [jss-rtl](https://github.com/alitaheri/jss-rtl) plugin.\r\nCheck the jss-rtl [readme](https://github.com/alitaheri/jss-rtl#simple-usage) to learn how.\r\n\r\n⚠️*There are no helpers of JssProvider in this library since it's not part of Material-UI. You would need to import it manually with* `Fable.Core.JsInterop` *helpers*\r\n",Tu="\r\n## Plugins\r\n\r\nJSS uses the concept of plugins to extend its core, allowing people to cherry-pick the features they need.\r\nYou pay the performance overhead for only what's you are using.\r\nGiven `withStyles` is Material-UI's internal styling solution, all the plugins aren't available by default. The following list is used:\r\n- [jss-global](http://cssinjs.org/jss-global/)\r\n- [jss-nested](http://cssinjs.org/jss-nested/)\r\n- [jss-camel-case](http://cssinjs.org/jss-camel-case/)\r\n- [jss-default-unit](http://cssinjs.org/jss-default-unit/)\r\n- [jss-vendor-prefixer](http://cssinjs.org/jss-vendor-prefixer/)\r\n- [jss-props-sort](http://cssinjs.org/jss-props-sort/)\r\n\r\nIt's a subset of [jss-preset-default](http://cssinjs.org/jss-preset-default/).\r\n",Pu="\r\n## API\r\n\r\n### `withStyles<'P when 'P :> IClassesProps> (styles : StyleType) (options: StyleOption list) (fn : 'P -> ReactElement) : ComponentClass<'P>`\r\n\r\nLink a style sheet with a component.\r\nIt does not modify the component passed to it; instead, it returns a new component with a `classes` property.\r\nThis `classes` object contains the name of the class names injected in the DOM.\r\n\r\nSome implementation details that might be interesting to being aware of:\r\n- It adds a `classes` property so you can override the injected class names from the outside.\r\n- It adds an `innerRef` property so you can get a reference to the wrapped component. The usage of `innerRef` is identical to `ref`.\r\n- It forwards *non React static* properties so this HOC is more \"transparent\".\r\n\r\n#### Arguments\r\n\r\n1. `styles : StyleType`: A function generating the styles or a list of styles options.\r\n  - `StyleType.Func of (ITheme->IStyles list)`: Use this version if you need to have access to the theme. It's provided as the argument\r\n  - `StyleType.Styles of IStyles list`: Use this option to pass a static list of styles\r\nIt will be linked to the component.\r\n2. `options : StyleOption list`: All options are optional, so you can pass an empty list\r\n  - `StyleOption.WithTheme of bool`: Defaults to `false`. Provide the `theme` object to the component as a property.\r\n  - `StyleOption.Name of string`: The name of the style sheet. Useful for debugging.\r\n    If the value isn't provided, it will try to fallback to the name of the component.\r\n  - `StyleOption.Flip of bool option`: When set to `Some false`, this sheet will opt-out the `rtl` transformation. When set to `Some true`, the styles are inversed. When set to `None`, it follows `theme.direction`.\r\n  - The other keys (`StyleOption.Custom of string*obj`) are forwarded to the options argument of [jss.createStyleSheet([styles], [options])](http://cssinjs.org/js-api/#create-style-sheet).\r\n3. `fn : 'P -> ReactElement`: A function which renders a ReactElement with an argument of type `'P` (has to inherit IClassesProps)\r\n```fsharp\r\ntype IClasses = interface end\r\ntype IClassesProps =\r\n    abstract member classes: IClasses\r\n```\r\n\r\n#### Returns\r\n\r\n`ClassComponent<'P>`: Should be used with `Fable.Helpers.React.from`\r\n\r\n#### Example\r\n```fsharp\r\nopen Fable.Core.JsInterop\r\nopen Fable.Helpers.React\r\nopen Fable.Helpers.React.Props\r\nopen Fable.Helpers.MaterialUI\r\nopen Fable.MaterialUI.Props\r\n\r\nlet styles : IStyles list = [\r\n    Styles.Root [\r\n        CSSProp.BackgroundColor \"red\"\r\n    ]\r\n]\r\n\r\nlet myFun (props : IClassesProps) =\r\n    div [ HTMLAttr.Class !!props.classes?root ] []\r\n\r\nlet withStylesFun = withStyles<IClassesProps> (StyleType.Styles styles) [] myFun\r\n\r\nlet view () =\r\n    from withStylesFun createEmpty []\r\n```\r\n";function Su(){return Co.createElement.apply(void 0,["div",{}].concat([Zi(fu),ul(bu,"./Customization/CssInJs/CssInJs.fs",function(){return function(){var e={href:"#/customization/css-in-js"},t={href:"#/customization/css-in-js",variant:"primary"};return Co.createElement.apply(void 0,[uo,{variant:"subtitle1"}].concat([Co.createElement.apply(void 0,[gu,e].concat(["MyLink"]))," - ",Co.createElement.apply(void 0,[gu,t].concat(["primary"]))]))}()}),Zi(Cu),Zi(Tu),Zi(Pu)]))}var wu=n(215),vu=n.n(wu).a;var Mu=n(216),Fu=n.n(Mu),xu=n(217),Au=n.n(xu),Iu=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),Lu=E(function(e,t,n){this.Title=e,this.Children=t,this.Href=n},z);function Hu(e){switch(e.tag){case 1:return"#/getting-started/installation";case 2:return"#/getting-started/usage";case 3:return"#/getting-started/migration-to-v2";case 4:return"#/demos/app-bar";case 5:return"#/demos/avatars";case 6:return"#/demos/buttons";case 7:return"#/demos/text-fields";case 8:return"#/pagelayout/signin";case 9:return"#/customization/overrides";case 10:return"#/customization/themes";case 11:return"#/customization/css-in-js";case 12:return"#/customization/default-theme";default:return"#/home"}}function Bu(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Eu=Fu.a,Ru=Au.a;var Du=ho(function(e){var t=e.breakpoints.only("xs"),n=e.breakpoints.only("sm");return k(Le("hero",k(new Hi(250,"MinHeight","80vh"),k(new Hi(133,"Flex","0 0 auto"),k(new Hi(125,"Display","flex"),k(new Hi(200,"JustifyContent","center"),k(new Hi(1,"AlignItems","center"),k(new Hi(21,"BackgroundColor",e.palette.background.paper),k(new Hi(103,"Color",e.palette.primary.dark),k())))))))),k(Le("text",k(new Hi(125,"Display","flex"),k(new Hi(136,"FlexDirection","column"),k(new Hi(200,"JustifyContent","center"),k(new Hi(1,"AlignItems","center"),k()))))),k(Le("title",k(new Hi(208,"LetterSpacing",".2rem"),k(new Hi(343,"TextIndent",".7rem"),k(new Hi(165,"FontWeight",e.typography.fontWeightLight),k(new Hi(391,"WhiteSpace","nowrap"),k(Ni(t,[new Hi(153,"FontSize",28)]),k())))))),k(Le("headline",k(new Hi(279,"PaddingLeft",4*e.spacing.unit),k(new Hi(280,"PaddingRight",4*e.spacing.unit),k(new Hi(225,"MarginTop",e.spacing.unit),k(new Hi(248,"MaxWidth",500),k(new Hi(325,"TextAlign","center"),k())))))),k(Le("content",k(new Hi(276,"PaddingBottom",8*e.spacing.unit),k(new Hi(281,"PaddingTop",8*e.spacing.unit),k(Ni(n,[new Hi(281,"PaddingTop",12*e.spacing.unit)]),k())))),k(Le("button",k(new Hi(225,"MarginTop",3*e.spacing.unit),k())),k(Le("logo",k(new Hi(225,"MarginTop",3*e.spacing.unit),k(new Hi(224,"MarginRight",0),k(new Hi(223,"MarginLeft",0),k(new Hi(220,"MarginBottom",4*e.spacing.unit),k(new Hi(394,"Width","100%"),k(new Hi(189,"Height","35vw"),k(new Hi(247,"MaxHeight",200),k())))))))),k(Le("support",k(new Hi(325,"TextAlign","center"),k(new Hi(220,"MarginBottom",30),k()))),k()))))))))},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,[Co.Fragment,{}].concat([Co.createElement.apply(void 0,["div",{className:t.hero}].concat([Co.createElement.apply(void 0,["div",{className:t.content}].concat([Co.createElement.apply(void 0,["img",{src:Ru,alt:"Fable Material-UI Logo",className:t.logo}].concat(Bu(k()))),Co.createElement.apply(void 0,["div",{className:t.text}].concat([Co.createElement.apply(void 0,[uo,{variant:"h3",align:"center",component:"h1",color:"inherit",gutterBottom:!0,className:t.title}].concat(["FABLE MATERIAL-UI"])),Co.createElement.apply(void 0,[uo,{variant:"h5",component:"h2",color:"inherit",gutterBottom:!0,className:t.headline}].concat(["Fable bindings for Material-UI React components"])),Co.createElement.apply(void 0,[Ua,{component:"a",href:"/"+Hu(new Iu(1,"Installation")),className:t.button,variant:"outlined",color:"primary"}].concat(["Get Started"]))]))]))])),Co.createElement.apply(void 0,["div",{className:t.support}].concat([Zi(Eu)]))]))});var Vu=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U),ku=E(function(e,t,n){this.currentPage=e,this.isLanding=t,this.menuOpen=n},z),Uu=E(function(e,t,n){this.model=e,this.render=t,this.equal=n},z),Ou=E(function(e){Co.Component.call(this,e)},Co.Component);function Nu(e,t,n,r){return Co.createElement.apply(void 0,[Ou,new Uu(n,function(){return t(n,r)},e)].concat([]))}function Wu(e){return function(t){return function(n){return Nu(v,e,t,n)}}}Ou.prototype.shouldComponentUpdate=function(e,t){return!this.props.equal(this.props.model,e.model)},Ou.prototype.render=function(){return this.props.render()};var zu=Co.createElement.apply(void 0,[ao,{}].concat([Co.createElement.apply(void 0,["path",{d:"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3"}].concat([]))]));function ju(e,t){var n=Co.createElement.apply(void 0,[Ka,{color:"inherit",onClick:function(e){t(new Vu(0,"OpenMenu",!0))}}].concat([Co.createElement.apply(void 0,[Ya,{}].concat(["menu"]))]));return e.isLanding?n:Co.createElement.apply(void 0,[qa,{lgUp:!0}].concat([n]))}var _u=ho(function(e){return k(Le("appBar",k(Ni(e.breakpoints.up("lg"),[new Hi(207,"Left",250),new Hi(394,"Width","calc(100% - 250px)")]),k())),k(Le("landingAppBar",k(new Hi(207,"Left",0),k(new Hi(394,"Width","100vw"),k(new Hi(92,"BoxShadow","unset"),k())))),k()))},k(),function(e){var t=e.classes;return Co.createElement.apply(void 0,[Va,{position:"fixed",className:Oi(k([t.appBar,!0],k([t.landingAppBar,e.model.isLanding],k())))}].concat([Co.createElement.apply(void 0,[po,{}].concat([Wu(ju)(e.model)(e.dispatch),Co.createElement.apply(void 0,[uo,{variant:"h6",color:"inherit"}].concat([function(e){switch(e.tag){case 1:return"Installation";case 2:return"Usage";case 3:return"Migration to version 2";case 4:return"App Bar";case 5:return"Avatars";case 6:return"Buttons";case 7:return"Text Fields";case 8:return"Sign-in";case 9:return"Overrides";case 10:return"Themes";case 11:return"Css in JS (F#)";case 12:return"Default Theme";default:return""}}(e.model.currentPage)])),Co.createElement.apply(void 0,["div",{className:"flex"}].concat([])),Co.createElement.apply(void 0,[co,{title:"Github",enterDelay:300}].concat([Co.createElement.apply(void 0,[Ka,{color:"inherit",component:"a",target:"_blank",href:"https://github.com/mvsmal/fable-material-ui"}].concat([zu]))]))]))]))});function Ju(e,t){var n={};return n.model=e,n.dispatch=t,Co.createElement.apply(void 0,[_u,n].concat([]))}function Gu(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function qu(e){return k(Le("button",k(new Hi(200,"JustifyContent","flex-start"),k(new Hi(208,"LetterSpacing",0),k(new Hi(279,"PaddingLeft",24),k(new Hi(362,"TextTransform","none"),k(new Hi(394,"Width","100%"),k(new Hi(165,"FontWeight",e.typography.fontWeightMedium),k()))))))),k(Le("collapse",k(new Hi(273,"Padding",0),k(new Hi(217,"Margin",0),k()))),k()))}var Yu=E(function(e){this.opened=e},z),Ku=E(function(e){Co.PureComponent.call(this,e),this.state=new Yu(e.opened)},Co.PureComponent);function $u(e){return Co.createElement.apply(void 0,[Ku,e].concat([]))}Ku.prototype.render=function(){var e=this,t=e.props.classes;return Co.createElement.apply(void 0,[Co.Fragment,{}].concat([Co.createElement.apply(void 0,[Ua,{onClick:function(t){!function(e,t){e.setState(function(e,t){return new Yu(!e.opened)})}(e)},classes:{root:t.button}}].concat([e.props.title])),Co.createElement.apply(void 0,[Na,{in:e.state.opened,unmountOnExit:!0,className:t.collapse}].concat([Co.createElement.apply(void 0,[eo,{}].concat(Gu(e.props.childItems)))]))]))};var Zu=ho(function(e){return k(Le("listItem",k(new Hi(125,"Display","block"),k(new Hi(281,"PaddingTop",0),k(new Hi(276,"PaddingBottom",0),k())))),k(Le("bold",k(new Hi(165,"FontWeight",500),k())),k(Le("button",k(new Hi(200,"JustifyContent","flex-start"),k(new Hi(208,"LetterSpacing",0),k(new Hi(362,"TextTransform","none"),k(new Hi(394,"Width","100%"),k(new Hi(165,"FontWeight",e.typography.fontWeightRegular),k())))))),k(Le("selected",k(new Hi(103,"Color",e.palette.primary.main),k(new Hi(165,"FontWeight",e.typography.fontWeightMedium),k()))),k()))))},k(),function(e){var t=k(new Hi(279,"PaddingLeft",8*(3+2*e.depth)),k()),n=e.href;if(null==n){var r={};return r.opened=e.opened,r.title=e.title,r.childItems=e.childItems,Co.createElement.apply(void 0,[to,{disableGutters:!0,className:e.classes.listItem}].concat([Co.createElement.apply(void 0,[ho(qu,k(),$u),r].concat([]))]))}var a=n,o=Oi(k([e.classes.selected,v(e.currentPage,a)],k()));return Co.createElement.apply(void 0,[to,{disableGutters:!0,className:e.classes.listItem}].concat([Co.createElement.apply(void 0,[Ua,H([new Ue(9,"DisableRipple",!0),new Ue(4,"Component","a"),["style",H(t,1)],new Li(23,"className",o),["classes",{root:e.classes.button}],new Li(52,"Href",Hu(a)),new Ii(40,"OnClick",function(t){e.dispatch(new Vu(0,"OpenMenu",!1))})],1)].concat([e.title]))]))});function Xu(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Qu=k(new Lu("Getting Started",k(new Lu("Installation",k(),new Iu(1,"Installation")),k(new Lu("Usage",k(),new Iu(2,"Usage")),k(new Lu("Migration to version 2",k(),new Iu(3,"MigrationToV2")),k()))),null),k(new Lu("Component demos",k(new Lu("App Bar",k(),new Iu(4,"AppBar")),k(new Lu("Buttons",k(),new Iu(6,"Buttons")),k(new Lu("Text Fields",k(),new Iu(7,"TextFields")),k()))),null),k(new Lu("Customization",k(new Lu("Themes",k(),new Iu(10,"Themes")),k(new Lu("Overrides",k(),new Iu(9,"Overrides")),k(new Lu("CSS in JS (F#)",k(),new Iu(11,"CssInJs")),k(new Lu("Default Theme",k(),new Iu(12,"DefaultTheme")),k())))),null),k(new Lu("Page layout demos",k(new Lu("Sign-in",k(),new Iu(8,"SignIn")),k()),null),k()))));function ed(e,t,n,r){var a=null!=r.Children.tail&&function(e,t){for(;;){var n=e,r=t;if(null==r.tail)return!1;var a=r.tail;if(n(r.head))return!0;e=n,t=a}}(function(t){return v(t.Href,e)},r.Children),o=wi(function(r){return ed(e,t,n+1,r)},r.Children);return function(e,t,n,r,a,o){var s={};return s.title=e.Title,s.href=e.Href,s.depth=t,s.currentPage=r,s.opened=n,s.childItems=a,s.dispatch=o,Co.createElement.apply(void 0,[Zu,s].concat([]))}(r,n,a,e,o,t)}function td(e,t){return Co.createElement.apply(void 0,[eo,{}].concat(Xu(wi(function(n){return ed(e,t,0,n)},Qu))))}function nd(e){return k(Le("title",k(new Hi(103,"Color",e.palette.text.secondary),k(new Hi(220,"MarginBottom",~~(e.spacing.unit/2)),k()))),k(Le("root",k(new Hi(394,"Width",250),k())),k(Le("toolbar",k(new Hi(125,"Display","flex"),k(new Hi(136,"FlexDirection","column"),k(new Hi(200,"JustifyContent","center"),k(new Hi(1,"AlignItems","flex-start"),k()))))),k(Le("headerLink",k(new Hi(372,"Transition","color .2s ease-in-out"),k(Ni("&:hover",[new Hi(103,"Color",e.palette.primary.main),new Hi(329,"TextDecoration","underline")]),k()))),k()))))}function rd(e){var t=e.classes;return Co.createElement.apply(void 0,["div",{className:t.root}].concat([Co.createElement.apply(void 0,[po,{className:t.toolbar}].concat([Co.createElement.apply(void 0,["a",{className:t.title,href:Hu(new Iu(0,"Home")),onClick:function(t){e.dispatch(new Vu(0,"OpenMenu",!1))}}].concat([Co.createElement.apply(void 0,[uo,{variant:"h6",className:t.headerLink,color:"inherit"}].concat(["Fable Material-UI"]))])),Co.createElement.apply(void 0,["a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/mvsmal/fable-material-ui/releases"}].concat([Co.createElement.apply(void 0,[uo,{variant:"caption",className:t.headerLink}].concat(["v2.2.0"]))]))])),Co.createElement.apply(void 0,[Wa,{}].concat([])),Wu(td)(e.currentPage)(e.dispatch)]))}function ad(e,t){var n={};return n.currentPage=e,n.dispatch=t,Co.createElement.apply(void 0,[ho(nd,k(),rd),n].concat([]))}function od(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var sd=ho(k(Le("root",k(new Hi(394,"Width",250),k())),k()),k(),function(e){return Co.createElement.apply(void 0,["nav",{}].concat(od(Pi(As(function(){return Fs(Bs(Co.createElement.apply(void 0,[qa,{lgUp:!e.isLanding,implementation:"js"}].concat([Co.createElement.apply(void 0,[oo,{variant:"temporary",open:e.menuOpen,onOpen:function(t){e.dispatch(new Vu(0,"OpenMenu",!0))},onClose:function(t){e.dispatch(new Vu(0,"OpenMenu",!1))},ModalProps:{keepMounted:!0}}].concat([Wu(ad)(e.currentPage)(e.dispatch)]))]))),As(function(){return e.isLanding?Is():Bs(Co.createElement.apply(void 0,[qa,{mdDown:!0,implementation:"js"}].concat([Co.createElement.apply(void 0,[za,{variant:"permanent",open:!0,className:e.classes.root}].concat([Wu(ad)(e.currentPage)(e.dispatch)]))])))}))})))))});function id(e,t){var n={};return n.currentPage=e.currentPage,n.isLanding=e.isLanding,n.menuOpen=e.menuOpen,n.dispatch=t,Co.createElement.apply(void 0,[sd,n].concat([]))}var ld=go(k(["typography",{useNextVariants:!0}],k(["palette",{type:"light",primary:{main:Ee[500]},secondary:{main:bo(He.A400,.08)}}],k())));var pd=ho(function(e){var t=e.breakpoints.up("lg"),n=e.breakpoints.up("sm");return k(Le("root",k(new Hi(125,"Display","flex"),k(new Hi(276,"PaddingBottom",40),k()))),k(Le("menuButton",k(new Hi(223,"MarginLeft",-12),k(new Hi(224,"MarginRight",20),k()))),k(Le("main",k(new Hi(281,"PaddingTop",80),k(new Hi(133,"Flex","1 1 100%"),k(new Hi(248,"MaxWidth","100%"),k(new Hi(217,"Margin","0 auto"),k(new Hi(279,"PaddingLeft",2*e.spacing.unit),k(new Hi(280,"PaddingRight",2*e.spacing.unit),k(new Hi(149,"FontFamily",e.typography.fontFamily),k(new Hi(153,"FontSize",16),k(new Hi(103,"Color",e.palette.text.primary),k(Ni(n,[new Hi(279,"PaddingLeft",4*e.spacing.unit),new Hi(280,"PaddingRight",4*e.spacing.unit)]),k(Ni(t,[new Hi(279,"PaddingLeft",5*e.spacing.unit),new Hi(280,"PaddingRight",9*e.spacing.unit),new Hi(248,"MaxWidth","calc(100% - 250px)")]),k())))))))))))),k(Le("landingMain",k(new Hi(273,"Padding",0),k(new Hi(248,"MaxWidth","100vw"),k(new Hi(223,"MarginLeft",0),k())))),k()))))},k(),function(e){var t=e.classes,n=Oi(k([t.main,!0],k([t.landingMain,e.model.isLanding],k())));return Co.createElement.apply(void 0,[yo,{theme:ld}].concat([Co.createElement.apply(void 0,["div",{className:t.root}].concat([Wu(Ju)(e.model)(e.dispatch),Wu(id)(e.model)(e.dispatch),Co.createElement.apply(void 0,["main",{className:n}].concat([function(t){switch(t.tag){case 1:return Zi(Xi);case 3:return Zi(el);case 2:return Zi(nl);case 4:return hl();case 5:return Co.createElement.apply(void 0,["div",{}].concat(["avatars"]));case 6:return op();case 7:return uc();case 8:return yc();case 9:return Bc();case 10:return du();case 11:return Su();case 12:return Co.createElement.apply(void 0,["div",{}].concat([Zi(vu)]));default:return function(e){var t={};return t.dispatch=e,Co.createElement.apply(void 0,[Du,t].concat([]))}(e.dispatch)}}(e.model.currentPage)]))]))]))});function cd(e,t){try{return So(e(t))}catch(e){return null}}var ud=E(function(e,t,n,r){this.visited=e,this.unvisited=t,this.args=n,this.value=r},z);function dd(e,t,n,r){return new ud(e,t,n,r)}function md(e){return function(t){var n=t.visited,r=t.value,a=t.unvisited,o=t.args;if(null!=a.tail){var s=a.tail,i=a.head;return i===e?k(dd(k(i,n),s,o,r),k()):k()}return k()}}function hd(e,t){return function(n){var r=n.visited,a=n.value,o=n.unvisited,s=n.args;return wi(function(e){return function(e,t){var n=t.visited,r=t.value,a=t.unvisited,o=t.args;return new ud(n,a,o,e(r))}(a,e)},t(new ud(r,o,s,e)))}}function yd(e,t,n){return function(e){e:for(;;){if(null==e.tail)return null;var t=e.head,n=e.tail;switch(null!=t.unvisited.tail?""===t.unvisited.head&&null==t.unvisited.tail.tail?1:2:0){case 0:case 1:return So(t.value);case 2:e=n;continue e}}}(e(new ud(k(),function(e){var t,n,r,a=Fi(e.split("/"));switch(null!=a.tail&&""===a.head?(t=0,n=a.tail):(t=1,r=a),t){case 0:return n;case 1:return r}}(t),n,function(e){return e})))}function gd(e){var t=e.split("=");if(function(e,t,n){return 0===function(e,t,n){if(null==t)return null==n?0:-1;if(null==n)return 1;var r=0,a=0,o=0|t.length,s=0|n.length;if(o>s)return 1;if(o<s)return-1;for(;r<o&&0===a;)a=e(t[r],n[r]),r+=1;return 0|a}(A,t,n)}(0,t,null)||2!==t.length)return null;var n=t[1],r=t[0];return function(e,t){var n,r,a,o=[e,t];switch(null!=o[0]&&null!=o[1]?(n=0,r=wo(o[0]),a=wo(o[1])):n=1,n){case 0:return[r,a];case 1:return null}}(cd(decodeURI,r),cd(decodeURI,n))}function fd(e){return function(e,t){return ni(t,Ys(t,e))}(function(e,t){return As(function(){return Es(function(t){for(var n=t.next();!n.done;){var r=e(n.value);if(null!=r)return[wo(r),t];n=t.next()}return null},t[Symbol.iterator]())})}(function(e){return e},Hs(gd,e.substr(1).split("&"))),{Compare:F})}function bd(e){return(bd="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Cd(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Td(e,t,n){return t&&Cd(e.prototype,t),n&&Cd(e,n),e}function Pd(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Sd(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function wd(e){var t="function"==typeof Map?new Map:void 0;return(wd=function(e){if(null===e||!function(e){return-1!==Function.toString.call(e).indexOf("[native code]")}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return vd(e,arguments,Fd(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),Md(n,e)})(e)}function vd(e,t,n){return(vd=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var a=new(Function.bind.apply(e,r));return n&&Md(a,n.prototype),a}).apply(null,arguments)}function Md(e,t){return(Md=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Fd(e){return(Fd=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var xd=function(e){function t(){var e;return Pd(this,t),e=function(e,t){return!t||"object"!==bd(t)&&"function"!=typeof t?Sd(e):t}(this,Fd(t).call(this,"The operation was canceled")),Object.setPrototypeOf(Sd(Sd(e)),t.prototype),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Md(e,t)}(t,wd(Error)),t}(),Ad=function(){function e(){Pd(this,e),this.callCount=0}return Td(e,null,[{key:"maxTrampolineCallCount",get:function(){return 2e3}}]),Td(e,[{key:"incrementAndCheck",value:function(){return this.callCount++>e.maxTrampolineCallCount}},{key:"hijack",value:function(e){this.callCount=0,setTimeout(e,0)}}]),e}();function Id(e){return function(t){if(t.cancelToken.isCancelled)t.onCancel(new xd);else if(t.trampoline.incrementAndCheck())t.trampoline.hijack(function(){try{e(t)}catch(e){t.onError(e)}});else try{e(t)}catch(e){t.onError(e)}}}function Ld(e,t){return Id(function(n){e({onSuccess:function(e){try{t(e)(n)}catch(e){n.onError(e)}},onError:n.onError,onCancel:n.onCancel,cancelToken:n.cancelToken,trampoline:n.trampoline})})}function Hd(e){return Id(function(t){return t.onSuccess(e)})}var Bd=new(function(){function e(){Pd(this,e)}return Td(e,[{key:"Bind",value:function(e,t){return Ld(e,t)}},{key:"Combine",value:function(e,t){return this.Bind(e,function(){return t})}},{key:"Delay",value:function(e){return Id(function(t){return e()(t)})}},{key:"For",value:function(e,t){var n=e[Symbol.iterator](),r=n.next();return this.While(function(){return!r.done},this.Delay(function(){var e=t(r.value);return r=n.next(),e}))}},{key:"Return",value:function(e){return Hd(e)}},{key:"ReturnFrom",value:function(e){return e}},{key:"TryFinally",value:function(e,t){return Id(function(n){e({onSuccess:function(e){t(),n.onSuccess(e)},onError:function(e){t(),n.onError(e)},onCancel:function(e){t(),n.onCancel(e)},cancelToken:n.cancelToken,trampoline:n.trampoline})})}},{key:"TryWith",value:function(e,t){return Id(function(n){e({onSuccess:n.onSuccess,onCancel:n.onCancel,cancelToken:n.cancelToken,trampoline:n.trampoline,onError:function(e){try{t(e)(n)}catch(e){n.onError(e)}}})})}},{key:"Using",value:function(e,t){return this.TryFinally(t(e),function(){return e.Dispose()})}},{key:"While",value:function(e,t){var n=this;return e()?this.Bind(t,function(){return n.While(e,t)}):this.Return(void 0)}},{key:"Zero",value:function(){return Id(function(e){return e.onSuccess(void 0)})}}]),e}());function Ed(e){}var Rd={isCancelled:!1};function Dd(e){return Id(function(t){return e([t.onSuccess,t.onError,t.onCancel])})}function Vd(e,t){return function(e,t){return kd(e,t)}(e,t)}function kd(e,t,n,r,a){"function"!=typeof t&&(a=t,t=null);var o=new Ad;e({onSuccess:t||Ed,onError:n||Ed,onCancel:r||Ed,cancelToken:a||Rd,trampoline:o})}function Ud(){return k()}function Od(e,t){return wi(function(t){return function(n){t(function(t){n(e(t))})}},t)}function Nd(e){return function(e){return Ti(Ls(function(e,t){return Ci(function(e,t){return k(t,e)},e,t)},k(),e))}(e)}function Wd(e,t){console.error(e,t)}function zd(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function jd(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _d=function(){function e(){jd(this,e)}return function(e,t,n){t&&zd(e.prototype,t),n&&zd(e,n)}(e,[{key:"add",value:function(e){var t=new function e(t){jd(this,e),this.value=t}(e);this.firstAndLast?(this.firstAndLast[1].next=t,this.firstAndLast=[this.firstAndLast[0],t]):this.firstAndLast=[t,t]}},{key:"tryGet",value:function(){if(this.firstAndLast){var e=this.firstAndLast[0].value;return this.firstAndLast[0].next?this.firstAndLast=[this.firstAndLast[0].next,this.firstAndLast[1]]:delete this.firstAndLast,e}}}]),e}(),Jd=function e(t,n){jd(this,e),this.body=t,this.cancellationToken=n||Rd,this.messages=new _d};function Gd(e){if(e.continuation){var t=e.messages.tryGet();if(t){var n=e.continuation;delete e.continuation,n(t)}}}function qd(e,t){e.messages.add(t),Gd(e)}function Yd(e,t){var n=new Jd(e,t);return function(e){Vd(e.body(e),e.cancellationToken)}(n),n}var Kd=E(function(e,t,n,r,a,o){this.init=e,this.update=t,this.subscribe=n,this.view=r,this.setState=a,this.onError=o},z);function $d(e,t){var n,r=t.init(e),a=Yd(function(e){return function n(r){var a=Bd;return a.Delay(function(){return a.Bind(function(e){return Dd(function(t){if(e.continuation)throw new Error("Receive can only be called once!");e.continuation=t[0],Gd(e)})}(e),function(o){var s,i=o;try{var l=t.update(i,r);t.setState(l[0],function(t){qd(e,t)}),Mi(function(t){t(function(t){qd(e,t)})},l[1]),s=l[0]}catch(e){t.onError(["Unable to process a message:",e]),s=r}return a.ReturnFrom(n(s))})})}(r[0])});t.setState(r[0],function(e){qd(a,e)});try{n=t.subscribe(r[0])}catch(e){t.onError(["Unable to subscribe:",e]),n=Ud()}Mi(function(e){e(function(e){qd(a,e)})},function(e,t){return Ci(function(e,t){return k(t,e)},t,Ti(e))}(n,r[1]))}var Zd=E(function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];U.call.apply(U,[this,e,t].concat(r))},U);function Xd(e){return function(e,t){return Si(function(e){return e(t)},e)}(k(hd(new Iu(0,"Home"),md("/")),k(hd(new Iu(0,"Home"),md("home")),k(hd(new Iu(1,"Installation"),function(e){return Si(md("installation"),md("getting-started")(e))}),k(hd(new Iu(2,"Usage"),function(e){return Si(md("usage"),md("getting-started")(e))}),k(hd(new Iu(3,"MigrationToV2"),function(e){return Si(md("migration-to-v2"),md("getting-started")(e))}),k(hd(new Iu(4,"AppBar"),function(e){return Si(md("app-bar"),md("demos")(e))}),k(hd(new Iu(5,"Avatars"),function(e){return Si(md("avatars"),md("demos")(e))}),k(hd(new Iu(6,"Buttons"),function(e){return Si(md("buttons"),md("demos")(e))}),k(hd(new Iu(7,"TextFields"),function(e){return Si(md("text-fields"),md("demos")(e))}),k(hd(new Iu(8,"SignIn"),function(e){return Si(md("signin"),md("pagelayout")(e))}),k(hd(new Iu(9,"Overrides"),function(e){return Si(md("overrides"),md("customization")(e))}),k(hd(new Iu(10,"Themes"),function(e){return Si(md("themes"),md("customization")(e))}),k(hd(new Iu(11,"CssInJs"),function(e){return Si(md("css-in-js"),md("customization")(e))}),k(hd(new Iu(12,"DefaultTheme"),function(e){return Si(md("default-theme"),md("customization")(e))}),k())))))))))))))),e)}function Qd(e,t){if(null!=e){return[new ku(e,v(e,new Iu(0,"Home")),t.menuOpen),k()]}return console.error("Error parsing url"),[t,function(e){return k(function(t){history.replaceState(null,"",e)},k())}(Hu(t.currentPage))]}var em=n(16);function tm(e,t){return function(e,t){var n={};return n.model=e,n.dispatch=t,Co.createElement.apply(void 0,[pd,n].concat([]))}(e,t)}!function(e){$d(null,e)}(function(e,t){var n=null;return new Kd(t.init,t.update,t.subscribe,t.view,function(r,a){if(null!=n){var o=n;window.cancelAnimationFrame(o)}n=window.requestAnimationFrame(function(n){Object(em.render)(Nu(function(e,t){return e===t},t.view,r,a),document.getElementById(e))})},t.onError)}("app",function(e,t,n){var r=function(e){return[e[0],Od(function(e){return new Zd(1,"UserMsg",e)},e[1])]},a=function(e){var t=null,n=function(n){var r;switch(null!=t&&t===window.location.href?r=0:r=1,r){case 0:break;case 1:t=window.location.href,e(new Zd(0,"Change",window.location))}return null};window.addEventListener("popstate",function(e){return n()}),window.addEventListener("hashchange",function(e){return n()}),window.addEventListener("NavigatedEvent",n)};return new Kd(function(){return r(n.init(e(window.location)))},function(a,o){var s,i;return r(1===a.tag?(s=a.fields[0],n.update(s,o)):(i=a.fields[0],t(e(i),o)))},function(e){return Nd(k(k(a,k()),k(Od(function(e){return new Zd(1,"UserMsg",e)},n.subscribe(e)),k())))},function(e,t){return n.view(e,function(e){t(new Zd(1,"UserMsg",e))})},function(e,t){n.setState(e,function(e){t(new Zd(1,"UserMsg",e))})},n.onError)}(function(e){return function(e,t){var n,r=t.hash.substr(1);if(r.indexOf("?")>=0){var a=r.substr(0,r.indexOf("?"));n=[a,r.substr(a.length)]}else n=[r,"?"];return yd(e,n[0],fd(n[1]))}(Xd,e)},Qd,function(e,t,n){return new Kd(e,t,function(e){return Ud()},n,function(e,t){n(e,t)},function(e){Wd(e[0],e[1])})}(function(e){var t=Qd(e,new ku(new Iu(0,"Home"),!0,!1));return[t[0],Nd(k(t[1],k()))]},function(e,t){var n=e.fields[0];return[new ku(t.currentPage,t.isLanding,n),k()]},tm)))),n.d(t,"root",function(){return tm})},function(e,t){}]));